# Quick build without Rust compilation
FROM claude-code:layer-02-git AS quick-build

ENV DEBIAN_FRONTEND=noninteractive

# Install dev tools and languages
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        # Build essentials
        build-essential \
        pkg-config \
        libssl-dev \
        # Editors
        vim \
        neovim \
        tmux \
        zsh \
        # Tools
        jq \
        zip \
        unzip \
        # Node.js
        nodejs \
        npm \
        # Python
        python3 \
        python3-pip \
        python3-venv \
        # Ruby for Jekyll
        ruby-full \
        ruby-bundler \
        # Search tools (pre-built)
        silversearcher-ag \
        fd-find \
        # Network
        mosh \
        autossh \
        && apt-get clean && \
        rm -rf /var/lib/apt/lists/*

# Install ripgrep from pre-built binary (much faster than cargo)
RUN curl -LO https://github.com/BurntSushi/ripgrep/releases/download/14.1.0/ripgrep_14.1.0-1_arm64.deb && \
    dpkg -i ripgrep_14.1.0-1_arm64.deb && \
    rm ripgrep_14.1.0-1_arm64.deb

# Install bat from pre-built binary
RUN curl -LO https://github.com/sharkdp/bat/releases/download/v0.24.0/bat_0.24.0_arm64.deb && \
    dpkg -i bat_0.24.0_arm64.deb && \
    rm bat_0.24.0_arm64.deb

# Install Jekyll
RUN gem install jekyll bundler

# Install Node packages
RUN npm install -g \
    typescript \
    prettier \
    eslint \
    @biomejs/biome \
    serve \
    typescript-language-server \
    vscode-langservers-extracted

# Install Python tools with pipx
RUN pip3 install --break-system-packages pipx && \
    pipx ensurepath && \
    pipx install uv && \
    pipx install ruff && \
    pipx install black && \
    pipx install pre-commit && \
    pipx install aider-chat

# Switch to claude user
USER claude
WORKDIR /home/claude

# Set up paths
RUN echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/.bashrc && \
    echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/.zshrc && \
    mkdir -p ~/.config ~/.ssh ~/.local/bin ~/scripts ~/.cache

# Copy scripts
COPY --chown=claude:claude scripts/ /home/claude/scripts/
RUN chmod +x /home/claude/scripts/*.sh

WORKDIR /workspace

ENTRYPOINT ["/home/claude/scripts/entrypoint.sh"]
CMD ["/bin/bash"]