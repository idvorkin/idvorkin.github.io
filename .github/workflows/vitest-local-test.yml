name: Vitest Local Test

# This is a simplified version of the main Vitest workflow that demonstrates badge generation
# without running actual tests. All outputs are consistent with the main workflow and should
# be published to the test-results branch for consistency.

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  WEBSITE_URL: idvork.in # The website URL for reference

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "16"

      - name: Test Badge Generation
        run: |
          # Create a directory for test results
          mkdir -p test-results/vitest

          # Create a mock test result for demonstration
          echo '{"numTotalTestSuites": 10, "numPassedTestSuites": 9, "numFailedTestSuites": 1}' > test-output.json

          # Create a mock verbose test output file
          echo "Mock verbose test output for demonstration purposes" > test-results/vitest/test-verbose-output.txt
          echo "Test File: example.test.js" >> test-results/vitest/test-verbose-output.txt
          echo " ✓ Example test group" >> test-results/vitest/test-verbose-output.txt
          echo "   ✓ should pass this test" >> test-results/vitest/test-verbose-output.txt
          echo "   ✓ should also pass this test" >> test-results/vitest/test-verbose-output.txt
          echo " ✗ Failed test group" >> test-results/vitest/test-verbose-output.txt
          echo "   ✗ this test failed" >> test-results/vitest/test-verbose-output.txt
          echo "     Expected: true" >> test-results/vitest/test-verbose-output.txt
          echo "     Received: false" >> test-results/vitest/test-verbose-output.txt

          # Extract test counts using jq
          TOTAL=$(jq '.numTotalTestSuites' test-output.json)
          PASSED=$(jq '.numPassedTestSuites' test-output.json)
          FAILED=$(jq '.numFailedTestSuites' test-output.json)

          # Determine color based on failed tests
          if [ "$FAILED" -eq 0 ]; then
            COLOR="brightgreen"
          else
            COLOR="red"
          fi

          # Create a badge JSON file in shields.io format consistent with main workflow
          echo "{\"schemaVersion\": 1, \"label\": \"vitest\", \"message\": \"$PASSED/$TOTAL tests\", \"color\": \"$COLOR\"}" > test-results/vitest/badge-count.json

          # Print the created badge JSON
          echo "Generated badge JSON:"
          cat test-results/vitest/badge-count.json

          echo "All test artifacts will be available in the test-results directory"

      - name: Upload test results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: vitest-local-test-results
          path: test-results/
          retention-days: 5
