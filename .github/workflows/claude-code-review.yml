# Claude Code Review Workflow
# 
# SECURITY NOTICE:
# This workflow uses pull_request_target to allow Claude Code Review to work
# with PRs from forks (like idvorkin-ai-tools). This is necessary because:
# 1. Fork PRs don't have access to repository secrets with pull_request event
# 2. Claude Code action needs CLAUDE_CODE_OAUTH_TOKEN secret to authenticate
#
# Security measures in place:
# - Only runs for trusted users and the idvorkin-ai-tools bot
# - Path restrictions prevent running on workflow files
# - Explicitly checks out PR head SHA (not the merge commit)
# - Concurrency control prevents resource exhaustion
# - Skip conditions for WIP and marked PRs
#
# The idvorkin-ai-tools account is explicitly allowed as it's a controlled AI assistant
# DO NOT add other bot accounts without security review!

name: Claude Code Review

on:
  # Use pull_request_target to allow access to secrets for fork PRs
  # IMPORTANT: This runs in the context of the base repository, not the fork
  pull_request_target:
    types: [opened, synchronize]
    # Only run on source code changes to reduce attack surface
    paths:
      - "src/**/*.ts"
      - "src/**/*.tsx"
      - "src/**/*.js"
      - "src/**/*.jsx"
      - "assets/js/**/*.js"
      - "tests/**/*.ts"
      - "tests/**/*.js"
      # Explicitly exclude workflow files
      - "!.github/**"

concurrency:
  # Prevent multiple reviews running simultaneously for the same PR
  group: claude-review-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  claude-review:
    # SECURITY: Only run for trusted contributors to prevent code injection
    # This is critical when using pull_request_target
    # idvorkin-ai-tools is explicitly allowed as a controlled AI assistant
    if: |
      (
        github.event.pull_request.user.login == 'idvorkin' ||
        github.event.pull_request.user.login == 'idvorkin-ai-tools' ||
        github.event.pull_request.author_association == 'OWNER' ||
        github.event.pull_request.author_association == 'MEMBER' ||
        github.event.pull_request.author_association == 'COLLABORATOR'
      ) &&
      !contains(github.event.pull_request.title, '[skip-review]') &&
      !contains(github.event.pull_request.title, '[WIP]') &&
      !contains(github.event.pull_request.title, 'WIP:')
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write  # Changed to write to allow commenting
      issues: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # SECURITY: Check out the PR code when using pull_request_target
          # This is safe because we restricted who can trigger this workflow
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage
            
            Be constructive and helpful in your feedback.

          # Optional: Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          # use_sticky_comment: true
          
          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality
          
          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' && 
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}
          
          # Optional: Add specific tools for running tests or linting
          # allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"
          
          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

