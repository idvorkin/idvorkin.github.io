---
description: ALWAYS use when developing and testing Jekyll blog posts
globs: ["_posts/*.md", "_d/*.md"]
tags: [jekyll, development, workflow]
priority: 2
version: 1.0.0
---

# Jekyll Development Standards

<version>1.0.0</version>

## Context
- When developing blog posts locally
- When testing changes
- When managing includes and templates
- When modifying specific sections of a post

## Requirements

1. Local Development Setup
   - Jekyll must be running locally on port 4000
   - Use localhost for all testing

2. Post Preview
   - Get permalink from post's front matter
   - Use standard preview command:
     ```bash
     open http://localhost:4000{permalink}
     ```
   - When modifying a single section:
     - Add section anchor to URL:
       ```bash
       open http://localhost:4000{permalink}#{section-anchor}
       ```
     - Section anchor is the lowercase, hyphenated version of the heading
     - Example: "## My Section" becomes "#my-section"

3. Section Preview
   - Append anchor to permalink for specific sections:
     ```bash
     open http://localhost:4000{permalink}#{anchor}
     ```
   - Anchors must match heading IDs
   - Always use section-specific preview when only modifying one section
   - This helps maintain focus and reduces scrolling

4. Include Management
   - Available includes:
     - blob_image.html
     - blob_image_float_right.html
     - amazon.html
     - alert.html
     - summarize-page.html
   - Verify includes work locally before committing

5. Terminal Commands
   - Append ` | /bin/cat` for pager commands
   - Run long-running commands in background
   - Use proper shell paths

## Examples

<example>
# Good Practice: Local Development

1. Start Jekyll server:
   ```bash
   bundle exec jekyll serve
   ```

2. Preview full post:
   ```bash
   open http://localhost:4000/learning
   ```

3. Preview specific section:
   ```bash
   open http://localhost:4000/learning#practice-methods
   ```

4. Test include:
   ```markdown
   {% include alert.html content="Test message" style="info" %}
   ```
</example>

<example type="invalid">
# Anti-Pattern: Poor Development Practice

1. Direct file editing without preview
2. Using production URLs for testing
3. Not using proper command formatting:
   ```bash
   git log # Missing | /bin/cat
   ```
4. Opening full post when only modifying one section
</example>

# Opening Blog Posts After Edits

## Context
- After making edits to blog posts
- When sections or anchors are modified
- When content changes need to be verified

## Requirements
- After editing a blog post section:
  1. Identify the relevant section anchor
  2. Ask user if they want to view changes in browser
  3. If yes, use format: `http://localhost:4000/{permalink}#{anchor}`
  4. Provide command to open directly to section

## Examples

<example>
After adding content to the "How to Start" section:

"I've added the content to the 'How to Start' section. Would you like to view these changes? I can open it directly using:
```
http://localhost:4000/physical-health#how-to-start
```
Just let me know if you'd like me to open it."
</example>

<example type="invalid">
"I've made the changes. You can view them in your browser."

This is insufficient as it doesn't offer to open the specific section and requires manual navigation.
</example> 