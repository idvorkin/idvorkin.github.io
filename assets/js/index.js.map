{"mappings":"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","sources":["<anon>","src/graph.ts","src/index.ts","src/shared.ts","src/main.ts","src/recent-posts.ts","src/recent.ts","src/search.ts","src/random-prompter.ts","src/page-loader.ts","src/blogger_import.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"juXh9\", function(module, exports) {\n//\n//  main.js\n//\n// Random tree\n// Tree copied from: https://github.com/vasturiano/force-graph\nparcelRequire(\"cy6pz\");\nvar $9FOw8 = parcelRequire(\"9FOw8\");\nvar $jkv39 = parcelRequire(\"jkv39\");\nconsole.log(\"Load force graph in TS v 0.9\");\n//import ForceGraph from \"force-graph\";\n// Check if we're on the graph page\nconst $3f9e20f190ef602c$var$isGraphPage = window.location.pathname.includes('/graph');\nif ($3f9e20f190ef602c$var$isGraphPage) console.log(\"\\uD83D\\uDCCA On graph page, importing graph module\");\nconst $3f9e20f190ef602c$var$first_expanded = window.location.hash.substr(1);\n// Pages are the link_infos\n// Set id to be the URL.\n// Example to make collapsable tree:\n// https://github.com/vasturiano/force-graph/blob/master/example/expandable-nodes/index.html\n// Uncollapse any page wtih the url == eulogy\nfunction $3f9e20f190ef602c$var$is_initial_expanded(node) {\n    if (node.url == $3f9e20f190ef602c$var$first_expanded) return true;\n    return false;\n}\n// Initialize the pages array that will be populated once data is loaded\nlet $3f9e20f190ef602c$var$pages = [];\n// Store initial expanded URL globally\nlet $3f9e20f190ef602c$var$initial_expanded_url = \"/eulogy\"; // Default value\n// Load pages asynchronously\nasync function $3f9e20f190ef602c$var$loadPages() {\n    try {\n        const linkInfo = await (0, $9FOw8.get_link_info)();\n        $3f9e20f190ef602c$var$pages = Object.values(linkInfo).map((p)=>({\n                ...p,\n                id: p.url,\n                expanded: false\n            }));\n        const slug = \"/\" + window.location.href.split(\"#\")[1];\n        $3f9e20f190ef602c$var$initial_expanded_url = $3f9e20f190ef602c$var$pages.map((p)=>p.url).includes(slug) ? slug : \"/eulogy\";\n        $3f9e20f190ef602c$var$pages.forEach((p)=>{\n            p.expanded = p.url == $3f9e20f190ef602c$var$initial_expanded_url;\n        });\n        // Initialize the graph after data is loaded\n        $3f9e20f190ef602c$var$initializeGraphWhenReady();\n    } catch (error) {\n        console.error(\"Error loading page data:\", error);\n    }\n}\nfunction $3f9e20f190ef602c$var$is_valid_url(url) {\n    // check if the url is in the list of pages\n    return $3f9e20f190ef602c$var$pages.map((p)=>p.url).includes(url);\n}\nfunction $3f9e20f190ef602c$var$build_links(pages) {\n    // build links\n    const links = [];\n    pages.forEach((page)=>{\n        page.outgoing_links.concat(page.incoming_links).filter($3f9e20f190ef602c$var$is_valid_url) // We have lots of dead links, go fix them in the source material\n        .forEach((target)=>{\n            links.push({\n                source: page,\n                target: target,\n                value: 1\n            });\n        });\n    //page.incoming_links.forEach(target => {\n    //links.push({ source: target, target: source, value: 1 });\n    //});\n    });\n    return links;\n}\nfunction $3f9e20f190ef602c$var$node_for_url(pages, url) {\n    return pages.filter((p)=>p.url == url)[0];\n}\nfunction $3f9e20f190ef602c$var$build_graph_data(pages) {\n    const visible_pages = pages.filter((page)=>page.expanded);\n    const visible_links = $3f9e20f190ef602c$var$build_links(visible_pages);\n    const newly_visible_pages = visible_links.map((l)=>$3f9e20f190ef602c$var$node_for_url(pages, l.target));\n    // update visable pages with newly visible ones\n    const combined_pages = visible_pages.concat(newly_visible_pages);\n    return {\n        nodes: combined_pages,\n        links: visible_links\n    };\n}\n// Make tree collapasable\nfunction $3f9e20f190ef602c$var$TextLabelNodeCanvas(node, ctx, globalScale) {\n    const outgoingCount = node.outgoing_links.length;\n    const expandedText = node.expanded ? \"-\" : `+${outgoingCount}`;\n    const label = node.id + \" [\" + expandedText + \"]\";\n    const fontSize = 12 / globalScale;\n    ctx.font = `${fontSize}px Sans-Serif`;\n    const textWidth = ctx.measureText(label).width;\n    const bckgDimensions = [\n        textWidth,\n        fontSize\n    ].map((n)=>n + fontSize * 0.2); // some padding\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n    ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = node.color;\n    ctx.fillText(label, node.x, node.y);\n    node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n}\nfunction $3f9e20f190ef602c$var$TextLabelNodePointerAreaPaint(node, color, ctx) {\n    ctx.fillStyle = color;\n    const bckgDimensions = node.__bckgDimensions;\n    bckgDimensions && ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n}\n// If ForceGraph isn't defined, return\nconsole.log(\"\\uD83D\\uDD0D Checking if ForceGraph is defined:\", typeof ForceGraph);\n// Wait for DOM to be fully loaded\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    console.log(\"\\uD83D\\uDD04 DOM fully loaded, initializing graph\");\n    $3f9e20f190ef602c$var$initializeGraph();\n});\n// Also try to initialize if the script loads after DOMContentLoaded\nif (document.readyState === \"complete\" || document.readyState === \"interactive\") {\n    console.log(\"\\uD83D\\uDD04 Document already loaded, initializing graph immediately\");\n    setTimeout($3f9e20f190ef602c$var$initializeGraph, 500); // Short delay to ensure everything is ready\n}\nfunction $3f9e20f190ef602c$var$initializeGraph() {\n    // Start loading page data\n    $3f9e20f190ef602c$var$loadPages();\n}\n// This function is called after data is loaded\nfunction $3f9e20f190ef602c$var$initializeGraphWhenReady() {\n    if (typeof ForceGraph === \"undefined\") {\n        console.error(\"\\u274C Force Graph library not defined - check script loading\");\n        // Try loading it directly as a fallback\n        const script = document.createElement(\"script\");\n        script.src = \"https://unpkg.com/force-graph\";\n        script.onload = ()=>{\n            console.log(\"\\u2705 Force Graph library loaded as fallback\");\n            $3f9e20f190ef602c$var$initializeGraphWithLib();\n        };\n        document.head.appendChild(script);\n        return;\n    }\n    $3f9e20f190ef602c$var$initializeGraphWithLib();\n}\nfunction $3f9e20f190ef602c$var$initializeGraphWithLib() {\n    const graphElement = document.getElementById(\"graph\");\n    if (!graphElement) {\n        console.error(\"\\u274C Graph element not found in DOM\");\n        return;\n    }\n    console.log(\"\\uD83D\\uDE80 Initializing Force Graph with element:\", graphElement);\n    // Clear any loading indicators\n    const loadingElement = document.getElementById(\"graph-loading\");\n    if (loadingElement) loadingElement.style.display = \"none\";\n    const graphData = $3f9e20f190ef602c$var$build_graph_data($3f9e20f190ef602c$var$pages);\n    console.log(\"\\uD83D\\uDCCA Graph data prepared:\", graphData);\n    try {\n        const Graph = ForceGraph()(graphElement).graphData($3f9e20f190ef602c$var$build_graph_data($3f9e20f190ef602c$var$pages)).nodeLabel(\"id\").nodeAutoColorBy(\"group\").nodeCanvasObject($3f9e20f190ef602c$var$TextLabelNodeCanvas).nodePointerAreaPaint($3f9e20f190ef602c$var$TextLabelNodePointerAreaPaint).onNodeRightClick((node)=>{\n            // Open the node in a new tab\n            window.open(node.url, \"_blank\");\n        }).onNodeClick((node)=>{\n            // Center/zoom on node\n            console.log(node);\n            // count expanded nodes\n            node.expanded = !node.expanded;\n            const expanded_nodes = $3f9e20f190ef602c$var$pages.filter((p)=>p.expanded).length;\n            if (expanded_nodes == 0) // re-expand me.\n            node.expanded = true;\n            Graph.graphData($3f9e20f190ef602c$var$build_graph_data($3f9e20f190ef602c$var$pages));\n            // center on node in 300 ms, post graph update\n            setTimeout(()=>{\n                center_on_node(node);\n            }, 300);\n        });\n        // Center on initial node\n        center_on_node($3f9e20f190ef602c$var$node_for_url($3f9e20f190ef602c$var$pages, $3f9e20f190ef602c$var$initial_expanded_url));\n        function center_on_node(node) {\n            if (!node || !Graph) {\n                console.error(\"\\u274C Cannot center - node or graph is undefined\");\n                return;\n            }\n            Graph.centerAt(node.x, node.y, 500);\n            Graph.zoom(8, 500);\n            update_detail(node);\n            console.log(\"\\uD83D\\uDCCD Centering on\", node.url);\n        }\n        var g_last_detail_node = null;\n        // Setup control handlers when DOM is fully loaded\n        $(document).ready(function() {\n            console.log(\"\\uD83D\\uDD27 Setting up control event handlers\");\n            // Set click handler for center control\n            $(\"#center_control\").on(\"click\", function() {\n                console.log(\"\\uD83D\\uDD0D Center control clicked\");\n                if (g_last_detail_node) center_on_node(g_last_detail_node);\n            });\n            // Set click handler for goto control\n            $(\"#goto_control\").on(\"click\", open_goto_control);\n            // Set click handler for collapse control\n            $(\"#collapse_control\").on(\"click\", collapse_all_except_active);\n        });\n        function open_goto_control() {\n            console.log(\"\\uD83D\\uDD17 Goto control clicked\");\n            if (g_last_detail_node) {\n                if (g_last_detail_node.url) window.open(g_last_detail_node.url, \"_blank\");\n                else console.log(\"\\u26A0\\uFE0F Active node has no URL\");\n            } else console.log(\"\\u26A0\\uFE0F No active node to go to\");\n        }\n        function collapse_all_except_active() {\n            console.log(\"\\uD83D\\uDCCA Collapse control clicked\");\n            $3f9e20f190ef602c$var$pages.forEach((p)=>{\n                p.expanded = false;\n            });\n            if (g_last_detail_node) g_last_detail_node.expanded = true;\n            Graph.graphData($3f9e20f190ef602c$var$build_graph_data($3f9e20f190ef602c$var$pages));\n            // Center on the active node after collapsing\n            if (g_last_detail_node) setTimeout(()=>{\n                center_on_node(g_last_detail_node);\n            }, 300);\n        }\n        function update_detail(page) {\n            // Replace HTML of element of id above with the page\n            g_last_detail_node = page;\n            const html = (0, $jkv39.MakeBackLinkHTML)(page);\n            const detail = document.getElementById(\"detail\");\n            if (detail) detail.innerHTML = html;\n            else console.error(\"\\u274C Detail element not found\");\n        }\n        return Graph; // Return the graph instance\n    } catch (error) {\n        console.error(\"\\u274C Error initializing Force Graph:\", error);\n    }\n}\nconsole.log(\"\\uD83D\\uDCCB Graph script loaded\");\nconsole.log(\"Post Graph\");\n\n});\nparcelRegister(\"cy6pz\", function(module, exports) {\n\n$parcel$export(module.exports, \"random_from_list\", () => (parcelRequire(\"9FOw8\")).random_from_list);\n$parcel$export(module.exports, \"shuffle\", () => (parcelRequire(\"9FOw8\")).shuffle);\n$parcel$export(module.exports, \"append_randomizer_div\", () => (parcelRequire(\"9FOw8\")).append_randomizer_div);\n$parcel$export(module.exports, \"get_link_info\", () => (parcelRequire(\"9FOw8\")).get_link_info);\n$parcel$export(module.exports, \"load_globals\", () => (parcelRequire(\"jkv39\")).load_globals);\n$parcel$export(module.exports, \"MakeBackLinkHTML\", () => (parcelRequire(\"jkv39\")).MakeBackLinkHTML);\n$parcel$export(module.exports, \"CreateAutoComplete\", () => (parcelRequire(\"1w9BG\")).CreateAutoComplete);\n$parcel$export(module.exports, \"initRecentAllPosts\", () => (parcelRequire(\"67yMS\")).initRecentAllPosts);\n$parcel$export(module.exports, \"add_random_prompts\", () => (parcelRequire(\"ccYjL\")).add_random_prompts);\n$parcel$export(module.exports, \"add_sunburst\", () => (parcelRequire(\"ccYjL\")).add_sunburst);\n$parcel$export(module.exports, \"TreeNode\", () => (parcelRequire(\"ccYjL\")).TreeNode);\n$parcel$export(module.exports, \"load_enjoy2\", () => (parcelRequire(\"gl3eh\")).load_enjoy2);\n$parcel$export(module.exports, \"load_7_habits\", () => (parcelRequire(\"gl3eh\")).load_7_habits);\n$parcel$export(module.exports, \"makePostPreviewHTML\", () => (parcelRequire(\"gl3eh\")).makePostPreviewHTML);\n$parcel$export(module.exports, \"load_ig66\", () => (parcelRequire(\"gl3eh\")).load_ig66);\n$parcel$export(module.exports, \"load_balance\", () => (parcelRequire(\"gl3eh\")).load_balance);\n$parcel$export(module.exports, \"load_random_eulogy\", () => (parcelRequire(\"gl3eh\")).load_random_eulogy);\n/**\n * Main JavaScript Entry Point\n *\n * This file serves as the single entry point for all JavaScript functionality\n * on the blog. It imports and initializes all necessary modules.\n */ // Import shared utilities\n\nvar $9FOw8 = parcelRequire(\"9FOw8\");\n\nvar $jkv39 = parcelRequire(\"jkv39\");\n\nvar $1w9BG = parcelRequire(\"1w9BG\");\n\nvar $67yMS = parcelRequire(\"67yMS\");\n\nvar $ccYjL = parcelRequire(\"ccYjL\");\nparcelRequire(\"juXh9\");\n\nvar $gl3eh = parcelRequire(\"gl3eh\");\nconsole.log(\"\\u2705 Graph module loaded successfully\");\n// Main initialization\n$(document).ready(function() {\n    // Initialize main functionality\n    let tocExpand = true;\n    // Call the global initialization function from main.ts\n    if (typeof defer === \"function\") defer((0, $jkv39.load_globals));\n    else (0, $jkv39.load_globals)();\n    // Setup event handlers\n    const setupKeyboardShortcuts = ()=>{\n        if (typeof Mousetrap !== \"undefined\") Mousetrap.bind(\"s\", ()=>focusSearch());\n    };\n    const focusSearch = ()=>{\n        const searchInput = $(\"#search-box\");\n        if (searchInput.length > 0) searchInput.focus();\n    };\n    // Initialize components\n    setupKeyboardShortcuts();\n    $9f9b9944cd5d5def$var$initializeTOC();\n    $9f9b9944cd5d5def$var$initializeSearch();\n    // Example usage of shared utilities\n    const items = [\n        \"item1\",\n        \"item2\",\n        \"item3\"\n    ];\n    console.log(\"Random item:\", (0, $9FOw8.random_from_list)(items));\n    console.log(\"Shuffled items:\", (0, $9FOw8.shuffle)([\n        ...items\n    ]));\n    // Initialize link loading\n    (0, $9FOw8.get_link_info)().then((links)=>{\n        console.log(\"Links loaded, count:\", Object.keys(links).length);\n    });\n    // Log successful initialization\n    console.log(\"Blog JavaScript initialized\");\n});\n// Initialize TOC\nfunction $9f9b9944cd5d5def$var$initializeTOC() {\n    const tocElement = $(\"#toc-content\");\n    if (tocElement.length > 0) // TOC initialization code\n    console.log(\"TOC initialized\");\n}\n// Initialize search\nfunction $9f9b9944cd5d5def$var$initializeSearch() {\n    const searchElement = $(\"#search-box\");\n    if (searchElement.length > 0) // Search initialization code\n    console.log(\"Search initialized\");\n}\n\n});\nparcelRegister(\"9FOw8\", function(module, exports) {\n\n$parcel$export(module.exports, \"random_from_list\", () => $5c367f1c83ef0920$export$f6f0b6976f5f23e5);\n$parcel$export(module.exports, \"shuffle\", () => $5c367f1c83ef0920$export$448332262467e042);\n$parcel$export(module.exports, \"append_randomizer_div\", () => $5c367f1c83ef0920$export$7691c4557333f2d2);\n$parcel$export(module.exports, \"get_link_info\", () => $5c367f1c83ef0920$export$46c928bda6aa7b36);\n/**\n * Shared utility functions\n *\n * This file contains utility functions that are shared across multiple modules.\n */ /**\n * Returns a random element from an array\n */ function $5c367f1c83ef0920$export$f6f0b6976f5f23e5(list) {\n    if (list.length === 0) return undefined;\n    return list[Math.floor(Math.random() * list.length)];\n}\nfunction $5c367f1c83ef0920$export$448332262467e042(array) {\n    let currentIndex = array.length, randomIndex;\n    // While there remain elements to shuffle.\n    while(currentIndex != 0){\n        // Pick a remaining element.\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        // And swap it with the current element.\n        [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex],\n            array[currentIndex]\n        ];\n    }\n    return array;\n}\nasync function $5c367f1c83ef0920$export$7691c4557333f2d2(parent_id, random_html_factory) {\n    // as string to queit type checker.\n    // Will be a noop if parent_id is already a jquery object\n    const $parent = $(parent_id);\n    if ($parent.length != 1) {\n        console.log(`append_randomizer_div ${parent_id} not present`);\n        return;\n    }\n    const new_element = $(await random_html_factory());\n    $parent.empty().append(new_element);\n    // Clicking on the element should result in a reload, unless you're\n    // Clicking on a link\n    $parent.click(async function(event) {\n        if (event.target.tagName != \"A\") {\n            const new_element = $(await random_html_factory());\n            $parent.empty().append(new_element);\n        }\n    });\n}\nlet $5c367f1c83ef0920$var$cached_link_info = null;\nasync function $5c367f1c83ef0920$export$46c928bda6aa7b36(url) {\n    if ($5c367f1c83ef0920$var$cached_link_info != null) return $5c367f1c83ef0920$var$cached_link_info;\n    const current_url = url || window.location.href;\n    const prodPrefix = \"https://idvork.in\";\n    const isProd = current_url.includes(prodPrefix);\n    var backlinks_url = \"https://raw.githubusercontent.com/idvorkin/idvorkin.github.io/master/back-links.json?flush_cache=True\";\n    if (!isProd) backlinks_url = \"/back-links.json\";\n    try {\n        const response = await fetch(backlinks_url);\n        const data = await response.json();\n        $5c367f1c83ef0920$var$cached_link_info = data.url_info;\n        return $5c367f1c83ef0920$var$cached_link_info;\n    } catch (e) {\n        console.error(\"Error fetching link info\", e);\n        return {};\n    }\n}\n\n});\n\nparcelRegister(\"jkv39\", function(module, exports) {\n\n$parcel$export(module.exports, \"MakeBackLinkHTML\", () => $417ebc8475d6fc5d$export$fc303307c4ed1d41);\n$parcel$export(module.exports, \"load_globals\", () => $417ebc8475d6fc5d$export$38653e1d7f0b5689);\n// Import shared functions\n\nvar $9FOw8 = parcelRequire(\"9FOw8\");\n\nvar $2fm61 = parcelRequire(\"2fm61\");\n\nvar $67yMS = parcelRequire(\"67yMS\");\nlet $417ebc8475d6fc5d$var$tocExpand = true;\nfunction $417ebc8475d6fc5d$var$checkExpandToggle() {\n    const toc = $(\".ui-toc-dropdown .toc\");\n    const toggle = $(\".expand-toggle\");\n    if (!$417ebc8475d6fc5d$var$tocExpand) {\n        toc.removeClass(\"expand\");\n        toggle.text(\"Expand all\");\n    } else {\n        toc.addClass(\"expand\");\n        toggle.text(\"Collapse all\");\n    }\n}\nfunction $417ebc8475d6fc5d$var$SwapProdAndTest() {\n    /* Find page title. */ const url = window.location.href;\n    const prodPrefix = \"https://idvork.in\";\n    const testPrefix = \"http://localhost:4000\";\n    const isProd = url.includes(prodPrefix);\n    let newURL = url;\n    if (isProd) newURL = url.replace(prodPrefix, testPrefix);\n    else newURL = url.replace(testPrefix, prodPrefix);\n    window.location.href = newURL;\n}\nfunction $417ebc8475d6fc5d$var$ForceShowRightSideBar() {\n    let toc = $(\"#right-sidebar\");\n    let mainContent = $(\"#main-content\");\n    toc.removeClass();\n    toc.addClass(\"col-4 pl-0\");\n    mainContent.removeClass();\n    mainContent.addClass(\"col-8 pr-0\");\n    // Hide DropUp\n    const tocDropUp = $(\"#id-ui-toc-dropdown\");\n    tocDropUp.removeClass();\n    tocDropUp.addClass(\"d-none\");\n}\n// <!-- Copied from hackmd-extras.js -->\nfunction $417ebc8475d6fc5d$var$generateToc(id, showPinToc) {\n    const target = $(`#${id}`);\n    target.html(\"\");\n    /* eslint-disable no-unused-vars */ /* @ts-ignore:TS2339*/ const toc = new window.Toc(\"content-holder\", {\n        level: 3,\n        top: -1,\n        class: \"toc\",\n        ulClass: \"nav\",\n        targetId: id\n    });\n    /* eslint-enable no-unused-vars */ if (target.text() === \"undefined\") target.html(\"\");\n    const tocMenu = $('<div class=\"toc-menu\"></div');\n    const toggle = $('<a class=\"expand-toggle\" href=\"#\">Collapse all</a>');\n    const backToTop = $('<a class=\"back-to-top\" href=\"#\">Top of page</a>');\n    const gotoBottom = $('<a class=\"go-to-bottom\" href=\"#\">Bottom of page</a>');\n    const forceSideBar = $('<a class=\"go-to-bottom\" href=\"#\">Pin ToC</a>');\n    $417ebc8475d6fc5d$var$checkExpandToggle();\n    toggle.click((e)=>{\n        e.preventDefault();\n        e.stopPropagation();\n        $417ebc8475d6fc5d$var$tocExpand = !$417ebc8475d6fc5d$var$tocExpand;\n        $417ebc8475d6fc5d$var$checkExpandToggle();\n    });\n    backToTop.click((e)=>{\n        e.preventDefault();\n        e.stopPropagation();\n        window.scrollTo(0, 0);\n    });\n    gotoBottom.click((e)=>{\n        e.preventDefault();\n        e.stopPropagation();\n        window.scrollTo(0, document.body.scrollHeight);\n    });\n    forceSideBar.click((e)=>$417ebc8475d6fc5d$var$ForceShowRightSideBar());\n    tocMenu.append(toggle).append(backToTop).append(gotoBottom);\n    if (showPinToc) tocMenu.append(forceSideBar);\n    target.append(tocMenu);\n}\nfunction $417ebc8475d6fc5d$export$fc303307c4ed1d41(url_info) {\n    const title_href = `<a href=${url_info.url}>${url_info.title}</a>`;\n    const class_link = `link-box description truncate-css`;\n    const output = `\n<div>\n    <div class=\"${class_link}\"> ${title_href}:<span class=\"link-description\"> ${url_info.description} <span></div>\n</div>`;\n    return output;\n}\nfunction $417ebc8475d6fc5d$export$a744c0d52175e28f() {\n    return `\n<ul class=\"nav nav-tabs nav-fill\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#incoming\" type=\"button\" role=\"tab\" aria-controls=\"incoming\" aria-selected=\"true\">Links to here</button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#outgoing\" type=\"button\" role=\"tab\" aria-controls=\"outgoing\" aria-selected=\"false\">Link from here</button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#graph\" type=\"button\" role=\"tab\" aria-controls=\"outgoing\" aria-selected=\"false\">Graph</button>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"myTabContent\">\n  <div class=\"tab-pane fade show active \" id=\"incoming\" role=\"tabpanel\" aria-labelledby=\"incoming-tab\"></div>\n  <div class=\"tab-pane fade\" id=\"outgoing\" role=\"tabpanel\" aria-labelledby=\"outgoing-tab\"></div>\n  <div class=\"tab-pane fade\" id=\"graph\" role=\"tabpanel\" aria-labelledby=\"outgoing-tab\">\n    <span> View the graph for: </span>\n  </div>\n</div>\n`;\n}\nfunction $417ebc8475d6fc5d$export$934ccb756bec6a91(pagePath) {\n    const strippedPagePath = pagePath.replace(/\\//g, \"\");\n    return `<a href='/graph#${strippedPagePath}'>${pagePath} (${strippedPagePath}) </a>`;\n}\nfunction $417ebc8475d6fc5d$export$ce1ac25e84725475(links = [], allUrls) {\n    // Filter out invalid links\n    const validLinks = links.filter((link)=>allUrls[link]);\n    // Sort by doc_size descending\n    return validLinks.sort((a, b)=>Number(allUrls[b].doc_size) - Number(allUrls[a].doc_size));\n}\n/**\n * Adds links to the page\n * @param allUrls URL info map\n * @param currentURL Optional URL for testing (defaults to document.URL)\n * @param jQueryElement Optional jQuery element for testing\n */ async function $417ebc8475d6fc5d$var$AddLinksToPage(allUrls, currentURL = document.URL, jQueryElement = $(\"#links-to-page\")) {\n    // Extract page path from URL\n    const page_path = new URL(currentURL).pathname;\n    const backlinks = allUrls[page_path]?.incoming_links || [];\n    const frontlinks = allUrls[page_path]?.outgoing_links || [];\n    if (backlinks.length === 0 && frontlinks.length === 0) {\n        console.log(`No backlinks for the page ${page_path}`);\n        return;\n    }\n    let link_parent_location = jQueryElement;\n    if (!link_parent_location || link_parent_location.length === 0) {\n        console.log(\"No back_link_location\");\n        return;\n    }\n    // Append tabs structure\n    link_parent_location.append($417ebc8475d6fc5d$export$a744c0d52175e28f());\n    // Process incoming links\n    let incoming_location = link_parent_location.find(\"#incoming\");\n    const sortedBacklinks = $417ebc8475d6fc5d$export$ce1ac25e84725475(backlinks, allUrls);\n    for (const link of sortedBacklinks){\n        const url_info = allUrls[link];\n        incoming_location.append($417ebc8475d6fc5d$export$fc303307c4ed1d41(url_info));\n    }\n    // Process outgoing links\n    let outgoing_location = link_parent_location.find(\"#outgoing\");\n    const sortedFrontlinks = $417ebc8475d6fc5d$export$ce1ac25e84725475(frontlinks, allUrls);\n    for (const link of sortedFrontlinks){\n        const url_info = allUrls[link];\n        outgoing_location.append($417ebc8475d6fc5d$export$fc303307c4ed1d41(url_info));\n    }\n    // Add graph link\n    console.log(\"Added Graph\");\n    const graph_location = link_parent_location.find(\"#graph\");\n    graph_location.append($417ebc8475d6fc5d$export$934ccb756bec6a91(page_path));\n}\nfunction $417ebc8475d6fc5d$var$make_html_summary_link(link, url_info) {\n    const attribution = `(From:<a href='${url_info.url}'> ${url_info.title}</a>)`;\n    return `<div>\n        <i> ${url_info.description}</i> ${attribution}\n    </div>`;\n}\nfunction $417ebc8475d6fc5d$var$make_html_summary_link_error(link, error) {\n    return `<span class='text-danger'>Error: Invalid link for ${link.attr(\"href\")} ${error} </span>`;\n}\nfunction $417ebc8475d6fc5d$var$AddSummarysToPage(backLinks) {\n    const summary_links = $.makeArray($(\".summary-link\"));\n    summary_links.forEach((raw_link)=>{\n        const link = $(raw_link);\n        try {\n            console.log(link.attr(\"href\"));\n            let ref = link.attr(\"href\");\n            // Resolve redirect\n            if (backLinks.redirects[ref] != undefined) ref = backLinks.redirects[ref];\n            // Look up in url info\n            if (backLinks.url_info[ref] == undefined) {\n                link.html($417ebc8475d6fc5d$var$make_html_summary_link_error(link, \"not found in url info\"));\n                return;\n            }\n            link.html($417ebc8475d6fc5d$var$make_html_summary_link(link, backLinks.url_info[ref]));\n        } catch (e) {\n            link.html($417ebc8475d6fc5d$var$make_html_summary_link_error(link, e));\n        }\n    });\n}\nasync function $417ebc8475d6fc5d$var$add_link_loader() {\n    $417ebc8475d6fc5d$var$AddLinksToPage(await (0, $9FOw8.get_link_info)());\n    $417ebc8475d6fc5d$var$AddSummarysToPage(await $417ebc8475d6fc5d$var$get_back_links());\n}\nlet $417ebc8475d6fc5d$var$cached_back_links = null;\nasync function $417ebc8475d6fc5d$var$get_back_links() {\n    if ($417ebc8475d6fc5d$var$cached_back_links != null) return $417ebc8475d6fc5d$var$cached_back_links;\n    const url = window.location.href;\n    const prodPrefix = \"https://idvork.in\";\n    const isProd = url.includes(prodPrefix);\n    var backlinks_url = \"\";\n    if (isProd) backlinks_url = \"https://raw.githubusercontent.com/idvorkin/idvorkin.github.io/master/back-links.json?flush_cache=True\";\n    else backlinks_url = \"/back-links.json\";\n    const backlinksJson = await $.getJSON(backlinks_url);\n    $417ebc8475d6fc5d$var$cached_back_links = backlinksJson;\n    return $417ebc8475d6fc5d$var$cached_back_links;\n}\nfunction $417ebc8475d6fc5d$var$search() {\n    $(\"#autocomplete-search-box-button\").click();\n}\nfunction $417ebc8475d6fc5d$var$keyboard_shortcut_loader() {\n    const mouseTrap = Mousetrap();\n    mouseTrap.bind(\"s\", (e)=>$417ebc8475d6fc5d$var$search());\n    mouseTrap.bind(\"t\", (e)=>$417ebc8475d6fc5d$var$ForceShowRightSideBar());\n    mouseTrap.bind(\"p\", (e)=>$417ebc8475d6fc5d$var$SwapProdAndTest());\n    mouseTrap.bind(\"a\", (e)=>location.href = \"/all\");\n    mouseTrap.bind(\"m\", (e)=>location.href = \"/toc\");\n    mouseTrap.bind(\"6\", (e)=>location.href = \"/ig66\");\n    let shortcutHelp = `\nTry these shortcuts:\n  s - search\n  / - start chatting with others\n  t - force sidebar\n  p - swap prod and test\n  z - surprise me\n  a - all posts\n  m - global toc\n  6 - family journal\n  `;\n    mouseTrap.bind(\"?\", (e)=>alert(shortcutHelp));\n}\n/**\n * Replaces placeholder links in the document with their corresponding list content.\n * @param listReplacements - An object mapping placeholder texts to list elements.\n */ function $417ebc8475d6fc5d$var$replacePlaceholdersWithLists(listReplacements) {\n    Object.entries(listReplacements).forEach(([placeholderText, list])=>{\n        const placeholderLink = $(`a[href=${placeholderText}]`).first();\n        if (!placeholderLink.length) return; // Placeholder not found, skip\n        const listClone = $(list).clone();\n        listClone.children().first().remove(); // Remove the 'lookup id' from the list\n        placeholderLink.replaceWith(listClone);\n        // remove the list from the document\n        $(list).remove();\n    });\n}\n/**\n * Builds a map of list replacements by scanning the document for specially formatted lists.\n * @returns An object where keys are placeholder texts and values are the corresponding list elements.\n */ function $417ebc8475d6fc5d$var$buildListReplacementMap() {\n    const replacements = {};\n    $(\"ul\").each((_, list)=>{\n        const firstListItem = list.firstElementChild;\n        if (!firstListItem) return;\n        const firstItemText = firstListItem.textContent;\n        if (!firstItemText || !firstItemText.startsWith(\"l\")) return;\n        const listId = parseInt(firstItemText.substring(1));\n        if (isNaN(listId)) return;\n        replacements[firstItemText] = list;\n    });\n    return replacements;\n}\n/**\n * Replaces list placeholders in tables with actual list content.\n * This function orchestrates the process of finding and replacing placeholders.\n */ function $417ebc8475d6fc5d$var$replaceListPlaceholdersInTables() {\n    console.log(\"\\uD83D\\uDD04 Replacing List Placeholders in Tables\");\n    const listReplacements = $417ebc8475d6fc5d$var$buildListReplacementMap();\n    $417ebc8475d6fc5d$var$replacePlaceholdersWithLists(listReplacements);\n}\n\nfunction $417ebc8475d6fc5d$export$38653e1d7f0b5689() {\n    $($417ebc8475d6fc5d$var$add_link_loader);\n    $($417ebc8475d6fc5d$var$keyboard_shortcut_loader);\n    // Replace list placeholders in tables\n    $(document).ready($417ebc8475d6fc5d$var$replaceListPlaceholdersInTables);\n    console.log(\"\\uD83D\\uDE80 About to call initRecentPosts from main.ts\");\n    (0, $2fm61.initRecentPosts)();\n    console.log(\"\\u2705 Called initRecentPosts from main.ts\");\n    // Initialize recent posts if the container exists\n    if (document.getElementById(\"last-modified-posts\")) {\n        console.log(\"\\uD83D\\uDE80 About to call initRecentAllPosts from main.ts\");\n        (0, $67yMS.initRecentAllPosts)();\n        console.log(\"\\u2705 Called initRecentAllPosts from main.ts\");\n    }\n    // Dynamically load the graph module only on the graph page\n    if (window.location.pathname === \"/graph\") {\n        console.log(\"\\uD83D\\uDCCA On graph page, importing graph module\");\n        Promise.resolve((parcelRequire(\"juXh9\"))).then(()=>console.log(\"\\u2705 Graph module loaded successfully\")).catch((err)=>console.error(\"\\u274C Error loading graph module:\", err));\n    }\n    $(function() {\n        $417ebc8475d6fc5d$var$generateToc(\"ui-toc\", true);\n        $417ebc8475d6fc5d$var$generateToc(\"ui-toc-affix\", false);\n    });\n}\n\n});\nparcelRegister(\"2fm61\", function(module, exports) {\n\n$parcel$export(module.exports, \"initRecentPosts\", () => $3900136bb96a6238$export$95771618035e82ed);\n/**\n * Recent Posts Display Module\n *\n * Fetches and displays the most recently modified posts\n * from the backlinks.json file.\n */ /**\n * Updates the recent posts container with post data\n */ async function $3900136bb96a6238$var$updateRecentPosts() {\n    console.log(\"\\uD83D\\uDD0D updateRecentPosts function called\");\n    const recentPostsContainer = document.getElementById(\"recent-posts\");\n    console.log(\"\\uD83D\\uDD0D recent-posts container element:\", recentPostsContainer);\n    if (!recentPostsContainer) {\n        console.error(\"\\u274C recent-posts container not found in DOM\");\n        return;\n    }\n    try {\n        console.log(\"\\uD83D\\uDD0D Fetching back-links.json...\");\n        // Fetch the backlinks data\n        const response = await fetch(\"/back-links.json\");\n        const data = await response.json();\n        console.log(\"\\uD83D\\uDD0D Received data from back-links.json:\", data);\n        console.log(\"\\uD83D\\uDD0D Keys in data:\", Object.keys(data));\n        // Check if the expected structure exists\n        if (!data.url_info) {\n            console.error(\"\\u274C Missing url_info in data structure\");\n            recentPostsContainer.innerHTML = \"<p>Error: Could not load recent posts data.</p>\";\n            return;\n        }\n        const urlInfoMap = data.url_info;\n        console.log(\"\\uD83D\\uDD0D Number of entries in urlInfoMap:\", Object.keys(urlInfoMap).length);\n        // Convert to array of pages for easier processing\n        const pages = Object.entries(urlInfoMap).map(([url, metadata])=>({\n                url: url,\n                title: metadata.title || url,\n                description: metadata.description || \"\",\n                doc_size: metadata.doc_size || 0,\n                last_modified: metadata.last_modified || \"\"\n            }));\n        console.log(\"\\uD83D\\uDD0D Transformed pages array, length:\", pages.length);\n        // Filter out pages that are likely redirects (these have empty descriptions and titles)\n        const realPages = pages.filter((page)=>page.description && page.description.trim() !== \"\" && page.title && page.title.trim() !== \"\" && page.title !== page.url // Ensure title is not the same as URL (fallback case)\n        );\n        console.log(\"\\uD83D\\uDD0D Filtered real pages, length:\", realPages.length);\n        console.log(\"\\uD83D\\uDD0D First 3 real pages:\", realPages.slice(0, 3));\n        // Sort by last_modified date (newest first)\n        const sortedPages = realPages.sort((a, b)=>{\n            if (a.last_modified && b.last_modified) {\n                console.log(\"\\uD83D\\uDD0D Comparing last_modified dates:\", a.url, a.last_modified, \"vs\", b.url, b.last_modified);\n                return new Date(b.last_modified).getTime() - new Date(a.last_modified).getTime();\n            }\n            // Fallback to doc_size if last_modified is not available\n            return b.doc_size - a.doc_size;\n        });\n        console.log(\"\\uD83D\\uDD0D Sorted pages, first 5:\", sortedPages.slice(0, 5).map((p)=>({\n                url: p.url,\n                title: p.title,\n                last_modified: p.last_modified\n            })));\n        // Take the top 5 most recent posts\n        const recentPages = sortedPages.slice(0, 5);\n        // Create the HTML\n        if (recentPages.length === 0) {\n            console.warn(\"\\u26A0\\uFE0F No recent pages found after filtering and sorting\");\n            recentPostsContainer.innerHTML = \"<p>No recent posts found.</p>\";\n            return;\n        }\n        const html = `\n      <ul>\n        ${recentPages.map((page)=>`\n          <li>\n            <a href=\"${page.url}\">${page.title}</a> - \n            ${page.description.split(\"\\n\")[0].substring(0, 100)}${page.description.length > 100 ? \"...\" : \"\"}\n          </li>\n        `).join(\"\")}\n      </ul>\n    `;\n        console.log(\"\\uD83D\\uDD0D Updating recent-posts content with HTML\", html.substring(0, 100) + \"...\");\n        recentPostsContainer.innerHTML = html;\n        console.log(\"\\u2705 Recent posts updated successfully\");\n    } catch (error) {\n        console.error(\"\\u274C Error loading recent posts:\", error);\n        recentPostsContainer.innerHTML = \"<p>Error loading recent posts. Please try again later.</p>\";\n    }\n}\nfunction $3900136bb96a6238$export$95771618035e82ed() {\n    console.log(\"\\uD83D\\uDD0D initRecentPosts called\");\n    // Check if document is already loaded\n    if (document.readyState === \"loading\") {\n        // Document still loading, add event listener\n        console.log(\"\\uD83D\\uDD0D Document still loading, adding DOMContentLoaded listener\");\n        document.addEventListener(\"DOMContentLoaded\", ()=>{\n            console.log(\"\\uD83D\\uDD0D DOMContentLoaded event fired, calling updateRecentPosts()\");\n            $3900136bb96a6238$var$updateRecentPosts();\n        });\n    } else {\n        // Document already loaded, run immediately\n        console.log(\"\\uD83D\\uDD0D Document already loaded, calling updateRecentPosts() immediately\");\n        $3900136bb96a6238$var$updateRecentPosts();\n    }\n    console.log(\"\\uD83D\\uDD0D initRecentPosts completed initial setup\");\n}\n\n});\n\nparcelRegister(\"67yMS\", function(module, exports) {\n\n$parcel$export(module.exports, \"initRecentAllPosts\", () => $75f29f91bc155aaa$export$559328b3f08f1a41);\n/**\n * Recent Posts Display Module\n *\n * Fetches and displays all posts sorted by last modification date\n * from the backlinks.json file.\n */ \nvar $9FOw8 = parcelRequire(\"9FOw8\");\n/**\n * Updates the recent posts container with post data\n */ async function $75f29f91bc155aaa$var$updateRecentPosts() {\n    console.log(\"\\uD83D\\uDD0D updateRecentPosts function called\");\n    const recentContainer = document.getElementById(\"last-modified-posts\");\n    console.log(\"\\uD83D\\uDD0D recent-posts container element:\", recentContainer);\n    if (!recentContainer) {\n        console.error(\"\\u274C recent-posts container not found in DOM\");\n        return;\n    }\n    try {\n        console.log(\"\\uD83D\\uDD0D Fetching back-links.json...\");\n        // Fetch the backlinks data using the shared function\n        const urlInfoMap = await (0, $9FOw8.get_link_info)();\n        console.log(\"\\uD83D\\uDD0D Number of entries in urlInfoMap:\", Object.keys(urlInfoMap).length);\n        // Convert to array of pages for easier processing\n        const pages = Object.entries(urlInfoMap).map(([url, metadata])=>({\n                url: url,\n                title: metadata.title || url,\n                description: metadata.description || \"\",\n                doc_size: metadata.doc_size || 0,\n                last_modified: metadata.last_modified || \"\"\n            }));\n        console.log(\"\\uD83D\\uDD0D Transformed pages array, length:\", pages.length);\n        // Filter out pages that are likely redirects (these have empty descriptions and titles)\n        const realPages = pages.filter((page)=>page.description && page.description.trim() !== \"\" && page.title && page.title.trim() !== \"\");\n        console.log(\"\\uD83D\\uDD0D Filtered real pages, length:\", realPages.length);\n        // Sort by last_modified date (newest first)\n        const sortedPages = realPages.sort((a, b)=>{\n            if (a.last_modified && b.last_modified) return new Date(b.last_modified).getTime() - new Date(a.last_modified).getTime();\n            // Fallback to doc_size if last_modified is not available\n            return b.doc_size - a.doc_size;\n        });\n        // Create the HTML\n        if (sortedPages.length === 0) {\n            console.warn(\"\\u26A0\\uFE0F No pages found after filtering and sorting\");\n            recentContainer.innerHTML = \"<p>No modified posts found.</p>\";\n            return;\n        }\n        // Define how many posts to show initially and in the expanded section\n        const initialPostsCount = 15;\n        const remainingPosts = sortedPages.slice(initialPostsCount);\n        // Group initial posts by month/year for better organization\n        const groupedPages = {};\n        sortedPages.slice(0, initialPostsCount).forEach((page)=>{\n            if (!page.last_modified) return;\n            const date = new Date(page.last_modified);\n            const monthYear = `${date.toLocaleString(\"default\", {\n                month: \"long\"\n            })} ${date.getFullYear()}`;\n            if (!groupedPages[monthYear]) groupedPages[monthYear] = [];\n            groupedPages[monthYear].push(page);\n        });\n        // Create HTML with grouped structure for initial posts\n        let html = \"\";\n        Object.entries(groupedPages).forEach(([monthYear, pages])=>{\n            html += `\n        <h3>${monthYear}</h3>\n        <ul class=\"last-modified-list\">\n          ${pages.map((page)=>{\n                const date = new Date(page.last_modified);\n                const formattedDate = date.toLocaleDateString(\"en-US\", {\n                    day: \"numeric\",\n                    month: \"short\"\n                });\n                return `\n            <li>\n              <span class=\"date-badge\">${formattedDate}</span>\n              <a href=\"${page.url}\">${page.title}</a>\n              <p class=\"description\">${page.description.split(\"\\n\")[0].substring(0, 150)}${page.description.length > 150 ? \"...\" : \"\"}</p>\n            </li>\n          `;\n            }).join(\"\")}\n        </ul>\n      `;\n        });\n        // Add the \"Remaining Modified Files\" section if there are more posts\n        if (remainingPosts.length > 0) {\n            // Group remaining posts by month/year\n            const remainingGroupedPages = {};\n            remainingPosts.forEach((page)=>{\n                if (!page.last_modified) return;\n                const date = new Date(page.last_modified);\n                const monthYear = `${date.toLocaleString(\"default\", {\n                    month: \"long\"\n                })} ${date.getFullYear()}`;\n                if (!remainingGroupedPages[monthYear]) remainingGroupedPages[monthYear] = [];\n                remainingGroupedPages[monthYear].push(page);\n            });\n            // Create the remaining posts HTML (initially hidden)\n            let remainingHtml = \"\";\n            Object.entries(remainingGroupedPages).forEach(([monthYear, pages])=>{\n                remainingHtml += `\n          <h3>${monthYear}</h3>\n          <ul class=\"last-modified-list\">\n            ${pages.map((page)=>{\n                    const date = new Date(page.last_modified);\n                    const formattedDate = date.toLocaleDateString(\"en-US\", {\n                        day: \"numeric\",\n                        month: \"short\"\n                    });\n                    return `\n              <li>\n                <span class=\"date-badge\">${formattedDate}</span>\n                <a href=\"${page.url}\">${page.title}</a>\n                <p class=\"description\">${page.description.split(\"\\n\")[0].substring(0, 150)}${page.description.length > 150 ? \"...\" : \"\"}</p>\n              </li>\n            `;\n                }).join(\"\")}\n          </ul>\n        `;\n            });\n            // Add the toggle section\n            html += `\n        <div class=\"remaining-posts-section\">\n          <h2 id=\"remaining-posts-toggle\" class=\"remaining-toggle\">\n            <span class=\"toggle-icon\">\\u{25B6}</span> Remaining Modified Files (${remainingPosts.length} more)\n          </h2>\n          <div id=\"remaining-posts-content\" class=\"remaining-content\" style=\"display: none;\">\n            ${remainingHtml}\n          </div>\n        </div>\n      `;\n        }\n        // Add some CSS for styling\n        html = `\n      <style>\n        .last-modified-list {\n          list-style-type: none;\n          padding-left: 0;\n        }\n        .last-modified-list li {\n          margin-bottom: 1.5rem;\n          position: relative;\n        }\n        .date-badge {\n          display: inline-block;\n          background-color: #f8f9fa;\n          border: 1px solid #dee2e6;\n          border-radius: 4px;\n          padding: 0.2rem 0.5rem;\n          margin-right: 0.5rem;\n          font-size: 0.8rem;\n        }\n        .description {\n          margin-top: 0.5rem;\n          margin-bottom: 0;\n          color: #6c757d;\n        }\n        .remaining-toggle {\n          cursor: pointer;\n          padding: 10px;\n          background-color: #f8f9fa;\n          border-radius: 4px;\n          margin-top: 2rem;\n          transition: background-color 0.3s;\n        }\n        .remaining-toggle:hover {\n          background-color: #e9ecef;\n        }\n        .toggle-icon {\n          display: inline-block;\n          transition: transform 0.3s;\n        }\n        .toggle-icon.open {\n          transform: rotate(90deg);\n        }\n      </style>\n      ${html}\n    `;\n        console.log(\"\\uD83D\\uDD0D Updating recent-posts content with HTML\", html.substring(0, 100) + \"...\");\n        recentContainer.innerHTML = html;\n        // Add event listener for the toggle\n        const toggleElement = document.getElementById(\"remaining-posts-toggle\");\n        if (toggleElement) toggleElement.addEventListener(\"click\", function() {\n            const contentElement = document.getElementById(\"remaining-posts-content\");\n            const iconElement = this.querySelector(\".toggle-icon\");\n            if (contentElement.style.display === \"none\") {\n                contentElement.style.display = \"block\";\n                iconElement.classList.add(\"open\");\n            } else {\n                contentElement.style.display = \"none\";\n                iconElement.classList.remove(\"open\");\n            }\n        });\n        console.log(\"\\u2705 Recent posts updated successfully\");\n    } catch (error) {\n        console.error(\"\\u274C Error loading recent posts:\", error);\n        recentContainer.innerHTML = \"<p>Error loading modified posts. Please try again later.</p>\";\n    }\n}\nfunction $75f29f91bc155aaa$export$559328b3f08f1a41() {\n    console.log(\"\\uD83D\\uDD0D initRecentAllPosts called\");\n    // Check if document is already loaded\n    if (document.readyState === \"loading\") {\n        // Document still loading, add event listener\n        console.log(\"\\uD83D\\uDD0D Document still loading, adding DOMContentLoaded listener\");\n        document.addEventListener(\"DOMContentLoaded\", ()=>{\n            console.log(\"\\uD83D\\uDD0D DOMContentLoaded event fired, calling updateRecentPosts()\");\n            $75f29f91bc155aaa$var$updateRecentPosts();\n        });\n    } else {\n        // Document already loaded, run immediately\n        console.log(\"\\uD83D\\uDD0D Document already loaded, calling updateRecentPosts() immediately\");\n        $75f29f91bc155aaa$var$updateRecentPosts();\n    }\n    console.log(\"\\uD83D\\uDD0D initRecentAllPosts completed initial setup\");\n}\n\n});\n\n\nparcelRegister(\"1w9BG\", function(module, exports) {\n\n$parcel$export(module.exports, \"CreateAutoComplete\", () => $bd9399c7e2744abd$export$b960629124c745df);\n// For autocomplete\n\nvar $9FOw8 = parcelRequire(\"9FOw8\");\nconst { autocomplete: $bd9399c7e2744abd$var$autocomplete, getAlgoliaResults: $bd9399c7e2744abd$var$getAlgoliaResults } = window[\"@algolia/autocomplete-js\"];\n// Adding a query paramater.\n// import instantsearch from \"algoliasearch\";\nconst $bd9399c7e2744abd$var$search_placeholder_text = \"Search Igor's Musings ...\";\nfunction $bd9399c7e2744abd$export$7a5418d73bdac342(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"), results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return \"\";\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\nfunction $bd9399c7e2744abd$var$InstantSearchHitTemplate(hit) {\n    // https://www.algolia.com/doc/api-reference/widgets/infinite-hits/js/\n    try {\n        let url = hit.url;\n        if (hit.anchor) url += `#${hit.anchor}`;\n        const highlighted = hit._highlightResult;\n        if (!highlighted) console.log(\"No Highlight\", hit);\n        const title = highlighted.title.value;\n        const content = highlighted?.content?.value ?? \"\";\n        // <section class=\"notepad-post-excerpt\"><p>${content}</p></section>\n        const string_rep = `\n           <span onClick=\"window.location='${url}';\">\n              <b> <a href=\"${url}\">${title}</a></b> <span>${content}</span>\n           </span>\n        `;\n        return string_rep;\n    } catch (err) {\n        console.log(\"Error in hitTemplate\", err, hit);\n    }\n    return \"invalid HTML\";\n}\nfunction $bd9399c7e2744abd$export$4b6f1157302970e2(appid, search_api_key, index_name, initial_query) {\n    // Instanciating InstantSearch.js with Algolia credentials\n    const searchClient = algoliasearch(appid, search_api_key);\n    const search = instantsearch({\n        searchClient: searchClient,\n        indexName: index_name,\n        searchParameters: {\n            query: initial_query\n        }\n    });\n    // Adding searchbar and results widgets\n    search.addWidget(// @ts-ignore:TS2339\n    instantsearch.widgets.searchBox({\n        container: \"#search-box\",\n        placeholder: $bd9399c7e2744abd$var$search_placeholder_text,\n        poweredBy: true,\n        showSubmit: false,\n        showReset: false,\n        showLoadingIndicator: false\n    }));\n    search.addWidget(// @ts-ignore:TS2339\n    instantsearch.widgets.infiniteHits({\n        container: \"#search-hits\",\n        templates: {\n            item: $bd9399c7e2744abd$var$InstantSearchHitTemplate\n        },\n        item ({ item: item }) {\n            return `Result: ${item.name}`;\n        }\n    }));\n    return search;\n}\n// Copied from the docs, but this isn't working for me.\nfunction $bd9399c7e2744abd$var$AutoCompleteHitTemplateWithComponentDoesNotWork({ item: item, components: components, createElement: createElement, fragments: fragments }) {\n    console.log(item);\n    return components.Highlight({\n        hit: item\n    });\n}\n// Algolia uses some PREACT thing, which this project does not support\n// Reach way into algolia and build the HTML manually\nfunction $bd9399c7e2744abd$var$AutoCompleteHitTemplate({ item: item, createElement: createElement }) {\n    // https://www.algolia.com/doc/api-reference/widgets/infinite-hits/js/\n    return createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n            __html: $bd9399c7e2744abd$var$InstantSearchHitTemplate(item)\n        }\n    });\n}\nasync function $bd9399c7e2744abd$var$get_random_post() {\n    const all_url_info = await (0, $9FOw8.get_link_info)();\n    //  Yuk, find a clearere way to do this\n    const all_pages = Object.entries(all_url_info) // returns a list of [url, info]\n    .map((e)=>e[1]);\n    const random_post = (0, $9FOw8.random_from_list)(all_pages);\n    const ret = {\n        title: random_post[\"title\"],\n        url: random_post[\"url\"],\n        description: random_post[\"description\"]\n    };\n    return ret;\n}\n/**\n * Gets recent posts from the back-links.json file\n * Returns the specified number of most recently modified posts\n */ async function $bd9399c7e2744abd$var$get_recent_posts(count = 4) {\n    try {\n        const all_url_info = await (0, $9FOw8.get_link_info)();\n        // Convert to array of pages for easier processing\n        const pages = Object.entries(all_url_info).map(([url, metadata])=>({\n                url: url,\n                title: metadata.title || url,\n                description: metadata.description || \"\",\n                doc_size: metadata.doc_size || 0,\n                last_modified: metadata.last_modified || \"\"\n            }));\n        // Filter out pages that are likely redirects (these have empty descriptions and titles)\n        const realPages = pages.filter((page)=>page.description && page.description.trim() !== \"\" && page.title && page.title.trim() !== \"\");\n        // Sort by last_modified date (newest first)\n        const sortedPages = realPages.sort((a, b)=>{\n            if (a.last_modified && b.last_modified) return new Date(b.last_modified).getTime() - new Date(a.last_modified).getTime();\n            // Fallback to doc_size if last_modified is not available\n            return b.doc_size - a.doc_size;\n        });\n        // Take the top N most recent posts\n        return sortedPages.slice(0, count);\n    } catch (error) {\n        console.error(\"\\u274C Error loading recent posts:\", error);\n        return [];\n    }\n}\n/**\n * Gets random posts for search results\n * @param count Number of random posts to return (default: 3)\n */ async function $bd9399c7e2744abd$var$GetRandomSearchResults(count = 3) {\n    return {\n        sourceId: \"random_posts\",\n        async getItems () {\n            const sized_array = new Array(count).join(\"_\").split(\"_\");\n            const random_posts = await Promise.all(sized_array.map(async (e)=>$bd9399c7e2744abd$var$get_random_post()));\n            return random_posts;\n        },\n        getItemUrl ({ item: item }) {\n            const ret = item.url;\n            return ret;\n        },\n        templates: {\n            item ({ item: item, createElement: createElement }) {\n                return createElement(\"div\", {\n                    dangerouslySetInnerHTML: {\n                        __html: `\n            <span onClick=\"window.location='${item.url}';\" >\n           <b> <a href=\"${item.url}\">${item.title}</a></b>\n            <span>${item.description}</span>\n            </span>\n            `\n                    }\n                });\n            },\n            header ({ createElement: createElement }) {\n                return createElement(\"div\", {\n                    dangerouslySetInnerHTML: {\n                        __html: \"<i style='color:grey'>Random posts ...</i>\"\n                    }\n                });\n            }\n        }\n    };\n}\n/**\n * Gets recent posts for search results\n * @param count Number of recent posts to return (default: 4)\n */ async function $bd9399c7e2744abd$var$GetRecentSearchResults(count = 4) {\n    return {\n        sourceId: \"recent_posts\",\n        async getItems () {\n            const recentPosts = await $bd9399c7e2744abd$var$get_recent_posts(count);\n            return recentPosts;\n        },\n        getItemUrl ({ item: item }) {\n            const ret = item.url;\n            return ret;\n        },\n        templates: {\n            item ({ item: item, createElement: createElement }) {\n                return createElement(\"div\", {\n                    dangerouslySetInnerHTML: {\n                        __html: `\n            <span onClick=\"window.location='${item.url}';\" >\n           <b> <a href=\"${item.url}\">${item.title}</a></b>\n            <span>${item.description}</span>\n            </span>\n            `\n                    }\n                });\n            },\n            header ({ createElement: createElement }) {\n                return createElement(\"div\", {\n                    dangerouslySetInnerHTML: {\n                        __html: \"<i style='color:grey'>Recent posts ...</i>\"\n                    }\n                });\n            }\n        }\n    };\n}\n/**\n * Gets featured posts from Algolia search\n * @param searchClient Algolia search client\n * @param index_name Index name to search\n * @param query Search query\n * @param hitsPerPage Number of results to return (default: 3)\n * @param includeFamilyJournal Whether to include family journal posts\n */ function $bd9399c7e2744abd$var$GetAlgoliaResults(searchClient, index_name, query, hitsPerPage = 3, includeFamilyJournal = false) {\n    // By default don't include family journal.\n    let filter = \"NOT tags:family-journal\";\n    if (includeFamilyJournal) filter = \"\";\n    return {\n        sourceId: \"featured_posts\",\n        getItems () {\n            return $bd9399c7e2744abd$var$getAlgoliaResults({\n                searchClient: searchClient,\n                queries: [\n                    {\n                        indexName: index_name,\n                        query: query,\n                        filters: filter,\n                        params: {\n                            hitsPerPage: hitsPerPage,\n                            highlightPreTag: \"<span style='background:yellow'>\",\n                            highlightPostTag: \"</span>\"\n                        }\n                    }\n                ]\n            });\n        },\n        templates: {\n            item: $bd9399c7e2744abd$var$AutoCompleteHitTemplate,\n            header ({ createElement: createElement }) {\n                return createElement(\"div\", {\n                    dangerouslySetInnerHTML: {\n                        __html: \"<i style='color:grey'>Featured posts ...</i>\"\n                    }\n                });\n            }\n        },\n        getItemUrl ({ item: item }) {\n            let url = item.url;\n            if (item.anchor) url += `#${item.anchor}`;\n            const ret = url;\n            return ret;\n        }\n    };\n}\n/**\n * Creates an autocomplete search component\n * @param appid Algolia app ID\n * @param search_api_key Algolia search API key\n * @param index_name Algolia index name\n * @param autocomplete_id ID of the autocomplete element\n * @param includeFamilyJournal Whether to include family journal posts\n * @param featuredCount Number of featured posts to show (default: 3)\n * @param recentCount Number of recent posts to show (default: 4)\n * @param randomCount Number of random posts to show (default: 3)\n */ async function $bd9399c7e2744abd$export$b960629124c745df(appid, search_api_key, index_name, autocomplete_id, includeFamilyJournal, featuredCount = 3, recentCount = 4, randomCount = 3) {\n    const searchClient = algoliasearch(appid, search_api_key);\n    const randomSearchResults = await $bd9399c7e2744abd$var$GetRandomSearchResults(randomCount);\n    const recentSearchResults = await $bd9399c7e2744abd$var$GetRecentSearchResults(recentCount);\n    function GetSources({ query: query }) {\n        const isEmptySearch = query.length === 0;\n        if (isEmptySearch) // Searching for a space gives nice default results, so when no results search for that ...\n        query = \" \";\n        // Get featured posts (from Algolia search)\n        const featuredPosts = $bd9399c7e2744abd$var$GetAlgoliaResults(searchClient, index_name, query, isEmptySearch ? featuredCount : 10, includeFamilyJournal);\n        // For empty search, show featured, recent, and random posts\n        // For actual search, just show search results\n        if (isEmptySearch) return [\n            featuredPosts,\n            recentSearchResults,\n            randomSearchResults\n        ];\n        else return [\n            featuredPosts\n        ];\n    }\n    // Make sure we have the element\n    // autocomplete_id can be either '#id' or just 'id'\n    const elementId = autocomplete_id.startsWith(\"#\") ? autocomplete_id : `#${autocomplete_id}`;\n    if ($(elementId).length === 0) {\n        console.log(\"No autocomplete element found\", \"autocomplete_id\", autocomplete_id);\n        return;\n    }\n    // Setup Auto Complete Stuff\n    return $bd9399c7e2744abd$var$autocomplete({\n        container: elementId,\n        placeholder: $bd9399c7e2744abd$var$search_placeholder_text,\n        getSources: GetSources,\n        debug: false,\n        openOnFocus: true,\n        detachedMediaQuery: \"\"\n    });\n}\n\n});\n\nparcelRegister(\"ccYjL\", function(module, exports) {\n\n$parcel$export(module.exports, \"TreeNode\", () => $6d425df71f5a07e7$export$2eba8ec3a333fdbb);\n$parcel$export(module.exports, \"add_random_prompts\", () => $6d425df71f5a07e7$export$859810117f914263);\n$parcel$export(module.exports, \"add_sunburst\", () => $6d425df71f5a07e7$export$722c014d8e7c7fc6);\n// One of the imports is goofy\n// @ts-ignore:TS2792\nparcelRequire(\"cy6pz\");\nvar $9FOw8 = parcelRequire(\"9FOw8\");\nclass $6d425df71f5a07e7$export$2eba8ec3a333fdbb {\n    constructor({ name: name, value: value = 25, children: children = [] }){\n        this.name = name;\n        // Keep it interesting\n        this.children = (0, $9FOw8.shuffle)(children);\n        this.value = value;\n    }\n}\nfunction $6d425df71f5a07e7$export$859810117f914263() {\n    const map_category_to_prompts = $6d425df71f5a07e7$var$category_to_prompts();\n    for (const category of map_category_to_prompts.keys())$6d425df71f5a07e7$var$render_prompt_for_category(category, map_category_to_prompts.get(category));\n}\nfunction $6d425df71f5a07e7$var$render_prompt_for_category(category, prompts_for_category) {\n    //print one of the prompts\n    let get_random_prompt_html = ()=>`<span>${(0, $9FOw8.random_from_list)(prompts_for_category)}</span><span style=\"float: right; cursor: pointer;\" title=\"Click for another prompt\">\\u{1F504}</span>`;\n    // add a place holder for random div.\n    const new_element = $(`<div class=\"alert alert-primary\" role=\"alert\"/>`);\n    $(category).after(new_element);\n    (0, $9FOw8.append_randomizer_div)(new_element, get_random_prompt_html);\n}\n// The prompts page has a bunch of lists of prompts\n// Would be nice to \"pick a random one\" to make it less intimidating\n// So can add a box at the top with a random prompt on top\n// And a random per section prompt\nfunction $6d425df71f5a07e7$var$category_to_prompts() {\n    // prompt_categories are H3s with a UL under them, and the li's under there are the prompt.\n    const starting_node = $(\"h3\").first();\n    let current_category = starting_node;\n    let prompts_for_category = [];\n    let map_category_to_prompts = new Map();\n    for(let node = starting_node; node.length != 0; node = $(node).next()){\n        if (node.prop(\"tagName\") == \"H3\") {\n            // Build prompt map\n            map_category_to_prompts.set(current_category, prompts_for_category);\n            // start processing next categroy\n            current_category = node;\n            prompts_for_category = [];\n            continue;\n        }\n        // in a category, prompts are the children of the first unordered list, so skip\n        // stuff that isn't a list\n        if (node.prop(\"tagName\") != \"UL\") continue;\n        // we should now be the first list in the category\n        prompts_for_category = Array.from($(node).find(\"li\")).map((li)=>$(li).text());\n    }\n    map_category_to_prompts.set(current_category, prompts_for_category);\n    // Remove any categories that\n    return map_category_to_prompts;\n}\n// sunburst format is an inorder traversal of the tree.\n// good thing to unit test\nfunction* $6d425df71f5a07e7$var$breadth_first_walk(node) {\n    if (!node) return;\n    let Q = [];\n    Q.push([\n        node,\n        null\n    ]);\n    while(Q.length > 0){\n        const [current, parent] = Q.shift();\n        for (const child of current.children ?? [])Q.push([\n            child,\n            current\n        ]);\n        yield [\n            current,\n            parent\n        ];\n    }\n}\nfunction $6d425df71f5a07e7$var$tree_to_plotly_data_format(root) {\n    // Plotly needs a tree to be flattened into a set of lists\n    // ids\n    // labels\n    // parents\n    // values\n    // JScript Experts: Is there a desctructing for this?\n    const names_parent_names = Array.from($6d425df71f5a07e7$var$breadth_first_walk(root)).map(([n, p])=>[\n            n.name,\n            p?.name\n        ]);\n    return {\n        ids: names_parent_names.map(([n, p])=>n),\n        labels: names_parent_names.map(([n, p])=>n),\n        parents: names_parent_names.map(([n, p])=>p)\n    };\n}\nfunction $6d425df71f5a07e7$var$category_to_prompts_text() {\n    const map = $6d425df71f5a07e7$var$category_to_prompts();\n    const list = Array.from(map.entries()).map(([k, v], _index)=>[\n            k.text(),\n            v\n        ]);\n    return new Map(list);\n}\n// We have a tree of nested categories. [node(category, children)]\n// and prompts stored in a map[category, prompt]\n// Join and walk\nfunction $6d425df71f5a07e7$var$random_prompt_for_label(label, tree_node, map_node_to_prompts) {\n    // Find the label in the tree\n    // recall bread first search returns a parent as well.\n    const [clicked_node, _parent] = Array.from($6d425df71f5a07e7$var$breadth_first_walk(tree_node)).find(([current, _parent])=>current.name == label);\n    // console.log(Array.from(breadth_first_walk(tree_node)));\n    // console.log(\"Label\", label);\n    // console.log(\"Clicked Node\", clicked_node);\n    // console.log(map_node_to_prompts);\n    // Gather all the prompts for the children of the clicked node.\n    let all_prompts = Array.from($6d425df71f5a07e7$var$breadth_first_walk(clicked_node)).map(([node, _parent])=>node) // returns node and parent\n    .filter((node)=>map_node_to_prompts.has(node.name)).map((node)=>map_node_to_prompts.get(node.name).map((prompt)=>`${node.name}: ${prompt}`)).flat();\n    return (0, $9FOw8.random_from_list)(all_prompts);\n}\nasync function $6d425df71f5a07e7$export$722c014d8e7c7fc6(plot_element_id, random_text_div_id, root) {\n    const sunburst_tree_flat = $6d425df71f5a07e7$var$tree_to_plotly_data_format(root);\n    var sunburst_data = {\n        type: \"sunburst\",\n        outsidetextfont: {\n            size: 20,\n            color: \"#377eb8\"\n        },\n        // leaf: {opacity: 0.4},\n        hoverinfo: \"none\",\n        marker: {\n            line: {\n                width: 2\n            }\n        },\n        maxdepth: 2,\n        displayModeBar: false\n    };\n    Object.assign(sunburst_data, sunburst_tree_flat);\n    delete sunburst_data.values; // remove values to avoid sizing pie slices\n    var sunburst_layout = {\n        margin: {\n            l: 0,\n            r: 0,\n            b: 0,\n            t: 0\n        },\n        sunburstcolorway: [\n            \"#636efa\",\n            \"#ef553b\",\n            \"#00cc96\"\n        ]\n    };\n    const config = {\n        displayModeBar: false\n    };\n    const sunburstPlot = await Plotly.newPlot(plot_element_id, [\n        sunburst_data\n    ], sunburst_layout, config);\n    const set_random_prompt_text = (text)=>{\n        console.log(\"set_random_prompt_text\", text);\n        $(`#${random_text_div_id}`).text(text);\n    };\n    // Set click handler for div\n    $(`#${random_text_div_id}`).first().click(()=>{\n        const label = $(\"#sunburst text:first\").text(); // Hack should use an API to find center text\n        const prompt = $6d425df71f5a07e7$var$random_prompt_for_label(label, root, $6d425df71f5a07e7$var$category_to_prompts_text());\n        set_random_prompt_text(prompt);\n    });\n    sunburstPlot.on(\"plotly_sunburstclick\", (event)=>{\n        const label = event.points[0].label;\n        const prompt = $6d425df71f5a07e7$var$random_prompt_for_label(label, root, $6d425df71f5a07e7$var$category_to_prompts_text());\n        set_random_prompt_text(prompt);\n    });\n}\nconst $6d425df71f5a07e7$export$66234fbc0455149c = {\n    breadth_first_walk: $6d425df71f5a07e7$var$breadth_first_walk,\n    shuffle: (0, $9FOw8.shuffle)\n};\n\n});\n\nparcelRegister(\"gl3eh\", function(module, exports) {\n\n$parcel$export(module.exports, \"makePostPreviewHTML\", () => $9f283bd0ad425971$export$2a7b436ba2130b9d);\n$parcel$export(module.exports, \"load_random_eulogy\", () => $9f283bd0ad425971$export$a05fecdd139cc0d6);\n$parcel$export(module.exports, \"load_enjoy2\", () => $9f283bd0ad425971$export$ed4ccdb0ea359d16);\n$parcel$export(module.exports, \"load_7_habits\", () => $9f283bd0ad425971$export$690b8256aeac9ddf);\n$parcel$export(module.exports, \"load_ig66\", () => $9f283bd0ad425971$export$5971d3574f6a5694);\n$parcel$export(module.exports, \"load_balance\", () => $9f283bd0ad425971$export$be5467d8e644e939);\n// Only include this in the html files, one per file\n// This allows code to seet things to refactor\n\nvar $ccYjL = parcelRequire(\"ccYjL\");\nparcelRequire(\"cy6pz\");\nvar $9FOw8 = parcelRequire(\"9FOw8\");\n\nvar $7Ztr4 = parcelRequire(\"7Ztr4\");\nclass $9f283bd0ad425971$var$SevenHabits {\n    get_tree() {\n        const root = new (0, $ccYjL.TreeNode)({\n            name: \"7H \",\n            children: [\n                new (0, $ccYjL.TreeNode)({\n                    name: \"\"\n                }),\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Be Proactive\"\n                }),\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Begin with the end in mind\"\n                }),\n                new (0, $ccYjL.TreeNode)({\n                    name: \"First things First\"\n                }),\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Think Win/Win\"\n                }),\n                new (0, $ccYjL.TreeNode)({\n                    name: \"First Understand\"\n                }),\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Synergize\"\n                }),\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Sharpen the Saw\"\n                })\n            ]\n        });\n        return root;\n    }\n}\nclass $9f283bd0ad425971$var$ThingsIEnjoy {\n    get_tree() {\n        const health = new (0, $ccYjL.TreeNode)({\n            name: \"Health\",\n            children: [\n                {\n                    name: \"Physical\"\n                },\n                {\n                    name: \"Emotional\"\n                },\n                {\n                    name: \"Cognative\"\n                }\n            ],\n            value: 31\n        });\n        const magic = new (0, $ccYjL.TreeNode)({\n            name: \"Magic\",\n            children: [\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Card Magic\"\n                }),\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Coin Magic\"\n                }),\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Band Magic\"\n                })\n            ]\n        });\n        const hobbies = new (0, $ccYjL.TreeNode)({\n            name: \"Hobbies\",\n            children: [\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Biking\"\n                }),\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Tech\"\n                }),\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Juggling\"\n                })\n            ]\n        });\n        const relationships = new (0, $ccYjL.TreeNode)({\n            name: \"Relationships\",\n            children: [\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Zach\"\n                }),\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Amelia\"\n                }),\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Tori\"\n                }),\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Friends\"\n                })\n            ]\n        });\n        const joy = new (0, $ccYjL.TreeNode)({\n            name: \"Joy\",\n            children: [\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Balloons\"\n                }),\n                new (0, $ccYjL.TreeNode)({\n                    name: \"Joy to Others\"\n                })\n            ]\n        });\n        return new (0, $ccYjL.TreeNode)({\n            name: \"Invest in\",\n            children: [\n                health,\n                magic,\n                hobbies,\n                relationships,\n                joy\n            ]\n        });\n    }\n}\n// TODO: De-Dup from blogger_import.ts\nfunction $9f283bd0ad425971$export$2a7b436ba2130b9d({ url: url, title: title, description: description }) {\n    // TODO: HACK: Strip to the right of Week number\n    const title_href = `<a href='${url}'}>${title}</a>`;\n    // random id for audio player\n    const id = \"audio_player_\" + Math.floor(Math.random() * 10000000000);\n    // filename is URL with '/' turned to '_'\n    const filename = url.replace(/\\//g, \"_\");\n    // console.log(post)\n    return `\n    <div>\n        <audio id='${id}'>\n          <source src=\"https://github.com/idvorkin/blob/raw/master/url_info_voices/igor/${filename}.mp3\" type=\"audio/mp3\">\n        </audio>\n      ${title_href}:  <b><a class='lead' onclick=\"toggle_play_pause('${id}')\">\\u{1F508}</a></b> ${description}\n    </div>\n  `;\n}\nasync function $9f283bd0ad425971$var$make_random_post_html() {\n    const all_url_info = await (0, $9FOw8.get_link_info)();\n    //  Yuk, find a clearere way to do this\n    const all_pages = Object.entries(all_url_info) // returns a list of [url, info]\n    .map((e)=>e[1]);\n    const random_post = (0, $9FOw8.random_from_list)(all_pages);\n    return $9f283bd0ad425971$export$2a7b436ba2130b9d({\n        url: random_post[\"url\"],\n        title: random_post[\"title\"],\n        description: random_post[\"description\"]\n    });\n}\nfunction $9f283bd0ad425971$export$a05fecdd139cc0d6() {\n    (0, $7Ztr4.add_eulogy_roles)(\"#e1\");\n    (0, $7Ztr4.add_eulogy_roles)(\"#e2\");\n    (0, $7Ztr4.add_eulogy_roles)(\"#e3\");\n}\nfunction $9f283bd0ad425971$export$ed4ccdb0ea359d16() {\n    (0, $ccYjL.add_sunburst)(\"sunburst\", \"sunburst_text\", new $9f283bd0ad425971$var$ThingsIEnjoy().get_tree());\n    (0, $ccYjL.add_random_prompts)();\n    (0, $7Ztr4.add_imported_blog_posts)(); // has a random achievement post\n    (0, $7Ztr4.add_eulogy_roles)(\"#random-eulogy-role\");\n    (0, $9FOw8.append_randomizer_div)(\"#random-blog-posts\", $9f283bd0ad425971$var$make_random_post_html);\n}\nfunction $9f283bd0ad425971$export$690b8256aeac9ddf() {\n    (0, $ccYjL.add_sunburst)(\"sunburst\", \"sunburst_text\", new $9f283bd0ad425971$var$SevenHabits().get_tree());\n    (0, $ccYjL.add_random_prompts)();\n}\nfunction $9f283bd0ad425971$export$5971d3574f6a5694() {\n    (0, $7Ztr4.add_imported_blog_posts)();\n}\nfunction $9f283bd0ad425971$export$be5467d8e644e939() {\n    $9f283bd0ad425971$var$make_balance_chart_by_desired_time_rest(\"balance-heatmap-rest\");\n    $9f283bd0ad425971$var$make_balance_chart_by_work(\"balance-heatmap-work\");\n    $9f283bd0ad425971$var$make_radar_map(\"balance-radar-map-ideal\");\n}\nconst $9f283bd0ad425971$export$66234fbc0455149c = {\n    SevenHabits: $9f283bd0ad425971$var$SevenHabits,\n    ThingsIEnjoy: $9f283bd0ad425971$var$ThingsIEnjoy\n};\nconst $9f283bd0ad425971$var$months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n];\nasync function $9f283bd0ad425971$var$make_radar_map(div) {\n    const data = [\n        {\n            type: \"scatterpolar\",\n            r: [\n                8,\n                8,\n                8,\n                5,\n                8,\n                8,\n                8\n            ],\n            theta: [\n                \"Work\",\n                \"Tech\",\n                \"Health\",\n                \"Hobbies\",\n                \"Relationships\",\n                \"Magic\",\n                \"Work\"\n            ],\n            name: \"2020 Goal\",\n            fill: \"toself\"\n        },\n        {\n            type: \"scatterpolar\",\n            r: [\n                7,\n                7,\n                5,\n                5,\n                5,\n                9,\n                7\n            ],\n            theta: [\n                \"Work\",\n                \"Tech\",\n                \"Health\",\n                \"Hobbies\",\n                \"Relationships\",\n                \"Magic\",\n                \"Work\"\n            ],\n            name: \"2020 Actual\",\n            fill: \"toself\"\n        }\n    ];\n    const layout = {\n        polar: {\n            radialaxis: {\n                visible: true,\n                range: [\n                    0,\n                    10\n                ]\n            }\n        },\n        showlegend: true\n    };\n    const config = {\n        displayModeBar: false\n    };\n    Plotly.newPlot(div, data, layout, config);\n}\nconst $9f283bd0ad425971$var$row_height = 20;\nconst $9f283bd0ad425971$var$heatmap_base = 100;\nconst $9f283bd0ad425971$var$ideal_color = \"#00BF00\";\nasync function $9f283bd0ad425971$var$make_balance_chart_by_work(div) {\n    const roles = [\n        \"Tech\",\n        \"Work\"\n    ];\n    const layout = {\n        height: $9f283bd0ad425971$var$row_height * roles.length + $9f283bd0ad425971$var$heatmap_base,\n        margin: {\n            t: 5\n        },\n        pad: 0\n    };\n    const color_scale = [\n        [\n            0.0,\n            \"darkblue\"\n        ],\n        [\n            0.4,\n            \"blue\"\n        ],\n        [\n            0.5,\n            $9f283bd0ad425971$var$ideal_color\n        ],\n        [\n            0.6,\n            \"darkred\"\n        ],\n        [\n            1.0,\n            \"red\"\n        ]\n    ];\n    const gap_desire_over_time = [\n        [\n            7,\n            4,\n            7,\n            8,\n            2,\n            4,\n            2,\n            3,\n            2,\n            8\n        ],\n        [\n            10,\n            7,\n            5,\n            5,\n            3,\n            5,\n            6,\n            6,\n            7,\n            5\n        ]\n    ];\n    const data = [\n        {\n            colorscale: color_scale,\n            zmin: 0,\n            zmax: 10,\n            x: $9f283bd0ad425971$var$months.slice(2, 13),\n            y: roles,\n            z: gap_desire_over_time,\n            type: \"heatmap\"\n        }\n    ];\n    const config = {\n        displayModeBar: false\n    };\n    await Plotly.newPlot(div, data, layout, config);\n}\n// Could be over or under\n// GREEN be Good,\n// RED be Bad\nasync function $9f283bd0ad425971$var$make_balance_chart_by_desired_time_rest(div) {\n    const roles = [\n        \"Health\",\n        \"Hobbies\",\n        \"Family\",\n        \"Magic\"\n    ];\n    const gap_desire_over_time = [\n        // J, F, M, A, M, J, J, A, S, O, N, D\n        [\n            4,\n            4,\n            3,\n            4,\n            5,\n            3,\n            2,\n            2,\n            3,\n            2\n        ],\n        [\n            4,\n            4,\n            3,\n            4,\n            5,\n            4,\n            4,\n            2,\n            4,\n            5\n        ],\n        [\n            2,\n            3,\n            3,\n            4,\n            1,\n            5,\n            4,\n            3,\n            2,\n            4\n        ],\n        [\n            5,\n            5,\n            5,\n            4,\n            5,\n            5,\n            4,\n            5,\n            4,\n            5\n        ]\n    ];\n    const color_scale = [\n        [\n            0.0,\n            \"red\"\n        ],\n        [\n            0.4,\n            \"darkred\"\n        ],\n        [\n            0.5,\n            $9f283bd0ad425971$var$ideal_color\n        ],\n        [\n            0.6,\n            \"blue\"\n        ],\n        [\n            1.0,\n            \"darkblue\"\n        ]\n    ];\n    const data = [\n        {\n            colorscale: color_scale,\n            zmin: 0,\n            zmax: 10,\n            x: $9f283bd0ad425971$var$months.slice(2, 13),\n            y: roles.reverse(),\n            z: gap_desire_over_time.reverse(),\n            type: \"heatmap\"\n        }\n    ];\n    const config = {\n        displayModeBar: false\n    };\n    const layout = {\n        height: $9f283bd0ad425971$var$row_height * roles.length + $9f283bd0ad425971$var$heatmap_base,\n        margin: {\n            t: 5\n        },\n        pad: 0\n    };\n    await Plotly.newPlot(div, data, layout, config);\n}\n\n});\nparcelRegister(\"7Ztr4\", function(module, exports) {\n\n$parcel$export(module.exports, \"add_imported_blog_posts\", () => $92ca6dc26425dcae$export$42081a69ee292945);\n$parcel$export(module.exports, \"add_eulogy_roles\", () => $92ca6dc26425dcae$export$13004ff06099531d);\nparcelRequire(\"cy6pz\");\nvar $9FOw8 = parcelRequire(\"9FOw8\");\nfunction $92ca6dc26425dcae$var$html_for_blogpost(post) {\n    const item = $(\"<div/>\");\n    // TODO: HACK: Strip to the right of Week number\n    const title_href = `<h4> <a href='${post.url}'}>${post.title}</a></h4>`;\n    const monthNames = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n    ];\n    item.append(title_href);\n    // HACK: Upsize to larger thumbnail, seems like blogger auto resizes to include a 320 image as well.\n    const thumbnail_url = post.thumbnail.replace(\"s72-c\", \"s320\");\n    const published_date = new Date(post.published);\n    const excerptDisplayText = `\n    <div> ${monthNames[published_date.getMonth()]} ${published_date.getFullYear()} - ${post.excerpt}\n    </div>\n   `;\n    if (post.thumbnail != \"\") {\n        console.log(post.title);\n        console.log(published_date);\n        item.append(// `<div> <a href='${post.url}'}><img src='${thumbnail_url}'/></div>`\n        `\n      <div style='overflow:auto'>\n\n      <a href='${post.url}'}><img class=\"img-fluid\" style='float:left; margin-right:10px' src='${thumbnail_url}'/></a>\n      ${excerptDisplayText}\n      </div>`);\n    } else item.append(excerptDisplayText);\n    const ret = item.html();\n    return ret;\n}\nfunction $92ca6dc26425dcae$var$get_achievement_posts(imported_posts) {\n    return imported_posts.filter((post)=>post.title.toLowerCase().includes(\"achievement\"));\n}\nfunction $92ca6dc26425dcae$var$get_recent_posts(imported_posts) {\n    return imported_posts.filter((post)=>post.tags.includes(\"family-journal\"));\n}\nfunction $92ca6dc26425dcae$var$ProcessImports(posts) {\n    console.log(\"Processing\", posts.length, \"posts\");\n    if (!posts) {\n        console.log(`No posts being imported`);\n        return;\n    }\n    //\n    // Import all history\n    const random_div = \"#random-post\";\n    const achievement_div = \"#achievment\";\n    const random_recent = \"#random-recent\";\n    (0, $9FOw8.append_randomizer_div)(random_div, ()=>$92ca6dc26425dcae$var$html_for_blogpost((0, $9FOw8.random_from_list)(posts)));\n    // Add a random achievement post\n    (0, $9FOw8.append_randomizer_div)(achievement_div, ()=>$92ca6dc26425dcae$var$html_for_blogpost((0, $9FOw8.random_from_list)($92ca6dc26425dcae$var$get_achievement_posts(posts))));\n    (0, $9FOw8.append_randomizer_div)(random_recent, ()=>$92ca6dc26425dcae$var$html_for_blogpost((0, $9FOw8.random_from_list)($92ca6dc26425dcae$var$get_recent_posts(posts))));\n}\nfunction $92ca6dc26425dcae$export$42081a69ee292945() {\n    const imported_posts_url = \"/ig66/ig66-export.json\";\n    $.getJSON(imported_posts_url, $92ca6dc26425dcae$var$ProcessImports);\n}\nfunction $92ca6dc26425dcae$export$d5d79470c0eabcc3(role) {\n    // url encode the role title\n    const role_file_name = role.title.replace(/ /g, \"%20\");\n    const voices = [\n        \"igor\",\n        \"ammon\"\n    ];\n    const random_voice = voices[Math.floor(Math.random() * voices.length)];\n    // Yucky - toggle_play_pause is a global function in enjoy2.md - bleh,  so brittle\n    return `\n  <div>\n    <audio id=\"eulogy-player\">\n      <source src=\"https://github.com/idvorkin/blob/raw/master/read_eulogy/${random_voice}/${role_file_name}.mp3\" type=\"audio/mp3\">\n    </audio>\n  <b>${role.title} <a class='lead' onclick=\"toggle_play_pause('eulogy-player')\">\\u{1F508}</a></b> - ${role.summary}\n  </div>\n  `;\n}\nfunction $92ca6dc26425dcae$var$ProcessEulogy(div, roles) {\n    if (!roles) {\n        console.log(`No roles being imported`);\n        return;\n    }\n    console.log(\"Processing\", roles.roles.length, \"roles\");\n    // Import all history\n    (0, $9FOw8.append_randomizer_div)(div, ()=>$92ca6dc26425dcae$export$d5d79470c0eabcc3((0, $9FOw8.random_from_list)(roles.roles)));\n}\nfunction $92ca6dc26425dcae$export$13004ff06099531d(div) {\n    const imported_posts_url = \"/eulogy.json\";\n    $.getJSON(imported_posts_url, (roles)=>$92ca6dc26425dcae$var$ProcessEulogy(div, roles));\n}\n\n});\n\n\n\n\n\nparcelRequire(\"cy6pz\");\n\n//# sourceMappingURL=index.js.map\n","//\n//  main.js\n//\n// Random tree\n// Tree copied from: https://github.com/vasturiano/force-graph\nconsole.log(\"Load force graph in TS v 0.9\");\nimport { get_link_info, MakeBackLinkHTML } from \"./index\";\n//import ForceGraph from \"force-graph\";\n\n// Check if we're on the graph page\nconst isGraphPage = window.location.pathname.includes('/graph');\nif (isGraphPage) {\n  console.log(\"📊 On graph page, importing graph module\");\n}\n\n// Define variables that are used but not declared\ndeclare var ForceGraph: any;\nconst first_expanded = window.location.hash.substr(1);\n\n// Pages are the link_infos\n// Set id to be the URL.\n\n// Example to make collapsable tree:\n// https://github.com/vasturiano/force-graph/blob/master/example/expandable-nodes/index.html\n\n// Uncollapse any page wtih the url == eulogy\nfunction is_initial_expanded(node) {\n  if (node.url == first_expanded) {\n    return true;\n  }\n\n  return false;\n}\n\n// Initialize the pages array that will be populated once data is loaded\nlet pages: any[] = [];\n// Store initial expanded URL globally\nlet initial_expanded_url = \"/eulogy\"; // Default value\n\n// Load pages asynchronously\nasync function loadPages() {\n  try {\n    const linkInfo = await get_link_info();\n    pages = Object.values(linkInfo).map(p => ({\n      ...p,\n      id: p.url,\n      expanded: false,\n    }));\n    \n    const slug = \"/\" + window.location.href.split(\"#\")[1];\n    initial_expanded_url = pages.map(p => p.url).includes(slug)\n      ? slug\n      : \"/eulogy\";\n    \n    pages.forEach(p => {\n      p.expanded = p.url == initial_expanded_url;\n    });\n    \n    // Initialize the graph after data is loaded\n    initializeGraphWhenReady();\n  } catch (error) {\n    console.error(\"Error loading page data:\", error);\n  }\n}\n\nfunction is_valid_url(url) {\n  // check if the url is in the list of pages\n  return pages.map(p => p.url).includes(url);\n}\nfunction build_links(pages) {\n  // build links\n  const links = [];\n  pages.forEach(page => {\n    page.outgoing_links\n      .concat(page.incoming_links)\n      .filter(is_valid_url) // We have lots of dead links, go fix them in the source material\n      .forEach(target => {\n        links.push({ source: page, target, value: 1 });\n      });\n\n    //page.incoming_links.forEach(target => {\n    //links.push({ source: target, target: source, value: 1 });\n    //});\n  });\n  return links;\n}\n\nfunction node_for_url(pages, url) {\n  return pages.filter(p => p.url == url)[0];\n}\n\nfunction build_graph_data(pages) {\n  const visible_pages = pages.filter(page => page.expanded);\n  const visible_links = build_links(visible_pages);\n  const newly_visible_pages = visible_links.map(l =>\n    node_for_url(pages, l.target)\n  );\n  // update visable pages with newly visible ones\n  const combined_pages = visible_pages.concat(newly_visible_pages);\n  return {\n    nodes: combined_pages,\n    links: visible_links,\n  };\n}\n\n// Make tree collapasable\n\nfunction TextLabelNodeCanvas(node, ctx, globalScale: number) {\n  const outgoingCount = node.outgoing_links.length;\n  const expandedText = node.expanded ? \"-\" : `+${outgoingCount}`;\n  const label = node.id + \" [\" + expandedText + \"]\";\n  const fontSize = 12 / globalScale;\n  ctx.font = `${fontSize}px Sans-Serif`;\n  const textWidth = ctx.measureText(label).width;\n  const bckgDimensions = [textWidth, fontSize].map(n => n + fontSize * 0.2); // some padding\n\n  ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n  ctx.fillRect(\n    node.x - bckgDimensions[0] / 2,\n    node.y - bckgDimensions[1] / 2,\n    ...bckgDimensions\n  );\n\n  ctx.textAlign = \"center\";\n  ctx.textBaseline = \"middle\";\n  ctx.fillStyle = node.color;\n  ctx.fillText(label, node.x, node.y);\n\n  node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n}\n\nfunction TextLabelNodePointerAreaPaint(node, color, ctx) {\n  ctx.fillStyle = color;\n  const bckgDimensions = node.__bckgDimensions;\n  bckgDimensions &&\n    ctx.fillRect(\n      node.x - bckgDimensions[0] / 2,\n      node.y - bckgDimensions[1] / 2,\n      ...bckgDimensions\n    );\n}\n// If ForceGraph isn't defined, return\nconsole.log(\"🔍 Checking if ForceGraph is defined:\", typeof ForceGraph);\n\n// Wait for DOM to be fully loaded\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.log(\"🔄 DOM fully loaded, initializing graph\");\n  initializeGraph();\n});\n\n// Also try to initialize if the script loads after DOMContentLoaded\nif (\n  document.readyState === \"complete\" ||\n  document.readyState === \"interactive\"\n) {\n  console.log(\"🔄 Document already loaded, initializing graph immediately\");\n  setTimeout(initializeGraph, 500); // Short delay to ensure everything is ready\n}\n\nfunction initializeGraph() {\n  // Start loading page data\n  loadPages();\n}\n\n// This function is called after data is loaded\nfunction initializeGraphWhenReady() {\n  if (typeof ForceGraph === \"undefined\") {\n    console.error(\"❌ Force Graph library not defined - check script loading\");\n    // Try loading it directly as a fallback\n    const script = document.createElement(\"script\");\n    script.src = \"https://unpkg.com/force-graph\";\n    script.onload = () => {\n      console.log(\"✅ Force Graph library loaded as fallback\");\n      initializeGraphWithLib();\n    };\n    document.head.appendChild(script);\n    return;\n  }\n\n  initializeGraphWithLib();\n}\n\nfunction initializeGraphWithLib() {\n  const graphElement = document.getElementById(\"graph\");\n  if (!graphElement) {\n    console.error(\"❌ Graph element not found in DOM\");\n    return;\n  }\n\n  console.log(\"🚀 Initializing Force Graph with element:\", graphElement);\n\n  // Clear any loading indicators\n  const loadingElement = document.getElementById(\"graph-loading\");\n  if (loadingElement) {\n    loadingElement.style.display = \"none\";\n  }\n\n  const graphData = build_graph_data(pages);\n  console.log(\"📊 Graph data prepared:\", graphData);\n\n  try {\n    const Graph = ForceGraph()(graphElement)\n      .graphData(build_graph_data(pages))\n      .nodeLabel(\"id\")\n      .nodeAutoColorBy(\"group\")\n      .nodeCanvasObject(TextLabelNodeCanvas)\n      .nodePointerAreaPaint(TextLabelNodePointerAreaPaint)\n      .onNodeRightClick(node => {\n        // Open the node in a new tab\n        window.open(node.url, \"_blank\");\n      })\n      .onNodeClick(node => {\n        // Center/zoom on node\n        console.log(node);\n\n        // count expanded nodes\n        node.expanded = !node.expanded;\n        const expanded_nodes = pages.filter(p => p.expanded).length;\n        if (expanded_nodes == 0) {\n          // re-expand me.\n          node.expanded = true;\n        }\n        Graph.graphData(build_graph_data(pages));\n\n        // center on node in 300 ms, post graph update\n        setTimeout(() => {\n          center_on_node(node);\n        }, 300);\n      });\n\n    // Center on initial node\n    center_on_node(node_for_url(pages, initial_expanded_url));\n\n    function center_on_node(node) {\n      if (!node || !Graph) {\n        console.error(\"❌ Cannot center - node or graph is undefined\");\n        return;\n      }\n      Graph.centerAt(node.x, node.y, 500);\n      Graph.zoom(8, 500);\n      update_detail(node);\n      console.log(\"📍 Centering on\", node.url);\n    }\n\n    var g_last_detail_node = null;\n\n    // Setup control handlers when DOM is fully loaded\n    $(document).ready(function () {\n      console.log(\"🔧 Setting up control event handlers\");\n\n      // Set click handler for center control\n      $(\"#center_control\").on(\"click\", function () {\n        console.log(\"🔍 Center control clicked\");\n        if (g_last_detail_node) {\n          center_on_node(g_last_detail_node);\n        }\n      });\n\n      // Set click handler for goto control\n      $(\"#goto_control\").on(\"click\", open_goto_control);\n\n      // Set click handler for collapse control\n      $(\"#collapse_control\").on(\"click\", collapse_all_except_active);\n    });\n\n    function open_goto_control() {\n      console.log(\"🔗 Goto control clicked\");\n      if (g_last_detail_node) {\n        if (g_last_detail_node.url) {\n          window.open(g_last_detail_node.url, \"_blank\");\n        } else {\n          console.log(\"⚠️ Active node has no URL\");\n        }\n      } else {\n        console.log(\"⚠️ No active node to go to\");\n      }\n    }\n\n    function collapse_all_except_active() {\n      console.log(\"📊 Collapse control clicked\");\n      pages.forEach(p => {\n        p.expanded = false;\n      });\n      if (g_last_detail_node) {\n        g_last_detail_node.expanded = true;\n      }\n      Graph.graphData(build_graph_data(pages));\n\n      // Center on the active node after collapsing\n      if (g_last_detail_node) {\n        setTimeout(() => {\n          center_on_node(g_last_detail_node);\n        }, 300);\n      }\n    }\n\n    function update_detail(page) {\n      // Replace HTML of element of id above with the page\n      g_last_detail_node = page;\n      const html = MakeBackLinkHTML(page);\n      const detail = document.getElementById(\"detail\");\n      if (detail) {\n        detail.innerHTML = html;\n      } else {\n        console.error(\"❌ Detail element not found\");\n      }\n    }\n\n    return Graph; // Return the graph instance\n  } catch (error) {\n    console.error(\"❌ Error initializing Force Graph:\", error);\n  }\n}\n\nconsole.log(\"📋 Graph script loaded\");\n\nconsole.log(\"Post Graph\");\n","/**\n * Main JavaScript Entry Point\n *\n * This file serves as the single entry point for all JavaScript functionality\n * on the blog. It imports and initializes all necessary modules.\n */\n\n// Import shared utilities\nimport {\n  random_from_list,\n  shuffle,\n  append_randomizer_div,\n  get_link_info,\n  type IURLInfo,\n  type IURLInfoMap,\n} from \"./shared\";\n\n// Import main functionality\nimport { load_globals, MakeBackLinkHTML } from \"./main\";\n\n// Import search functionality\nimport { CreateAutoComplete } from \"./search\";\n\n// Import recent posts functionality\nimport { initRecentAllPosts } from \"./recent\";\n\n// Import random-prompter functionality\nimport { add_random_prompts, add_sunburst, TreeNode } from \"./random-prompter\";\n\n// Import graph functionality\nimport \"./graph\";\nconsole.log(\"✅ Graph module loaded successfully\");\n\n// Import page-loader functionality\nimport {\n  load_enjoy2,\n  load_7_habits,\n  makePostPreviewHTML,\n  load_ig66,\n  load_balance,\n  load_random_eulogy,\n} from \"./page-loader\";\n\n// Declare global variables from external libraries\ndeclare var $: any;\ndeclare var Mousetrap: any;\ndeclare global {\n  function defer(fn: Function): void;\n}\n\n// Main initialization\n$(document).ready(function () {\n  // Initialize main functionality\n  let tocExpand = true;\n\n  // Call the global initialization function from main.ts\n  if (typeof defer === \"function\") {\n    defer(load_globals);\n  } else {\n    load_globals();\n  }\n\n  // Setup event handlers\n  const setupKeyboardShortcuts = () => {\n    if (typeof Mousetrap !== \"undefined\") {\n      Mousetrap.bind(\"s\", () => focusSearch());\n      // Add other keyboard shortcuts as needed\n    }\n  };\n\n  const focusSearch = () => {\n    const searchInput = $(\"#search-box\");\n    if (searchInput.length > 0) {\n      searchInput.focus();\n    }\n  };\n\n  // Initialize components\n  setupKeyboardShortcuts();\n  initializeTOC();\n  initializeSearch();\n\n  // Example usage of shared utilities\n  const items = [\"item1\", \"item2\", \"item3\"];\n  console.log(\"Random item:\", random_from_list(items));\n  console.log(\"Shuffled items:\", shuffle([...items]));\n\n  // Initialize link loading\n  get_link_info().then(links => {\n    console.log(\"Links loaded, count:\", Object.keys(links).length);\n  });\n\n  // Log successful initialization\n  console.log(\"Blog JavaScript initialized\");\n});\n\n// Initialize TOC\nfunction initializeTOC() {\n  const tocElement = $(\"#toc-content\");\n  if (tocElement.length > 0) {\n    // TOC initialization code\n    console.log(\"TOC initialized\");\n  }\n}\n\n// Initialize search\nfunction initializeSearch() {\n  const searchElement = $(\"#search-box\");\n  if (searchElement.length > 0) {\n    // Search initialization code\n    console.log(\"Search initialized\");\n  }\n}\n\n// Export shared utilities and main functions for potential direct use\nexport {\n  random_from_list,\n  shuffle,\n  append_randomizer_div,\n  get_link_info,\n  // Export the interface types\n  type IURLInfo,\n  type IURLInfoMap,\n  load_globals,\n  MakeBackLinkHTML,\n  CreateAutoComplete,\n  // Recent posts export\n  initRecentAllPosts,\n  // Random prompter exports\n  add_random_prompts,\n  add_sunburst,\n  TreeNode,\n  // Page loader exports\n  load_enjoy2,\n  load_7_habits,\n  makePostPreviewHTML,\n  load_ig66,\n  load_balance,\n  load_random_eulogy,\n};\n","/**\n * Shared utility functions\n *\n * This file contains utility functions that are shared across multiple modules.\n */\n\n/**\n * Returns a random element from an array\n */\nexport function random_from_list<T>(list: T[]): T {\n  if (list.length === 0) return undefined;\n  return list[Math.floor(Math.random() * list.length)];\n}\n\n/**\n * Shuffles an array in place\n * https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n */\nexport function shuffle<T>(array: T[]): T[] {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex != 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n}\n\n/**\n * This div gets content from the random_html_factory\n * and clicking does a re-randomize\n */\nexport async function append_randomizer_div(\n  parent_id: string | JQuery<HTMLElement>,\n  random_html_factory: () => string\n) {\n  // as string to queit type checker.\n  // Will be a noop if parent_id is already a jquery object\n  const $parent = $(parent_id as string);\n  if ($parent.length != 1) {\n    console.log(`append_randomizer_div ${parent_id} not present`);\n    return;\n  }\n  const new_element = $(await random_html_factory());\n  $parent.empty().append(new_element);\n\n  // Clicking on the element should result in a reload, unless you're\n  // Clicking on a link\n  $parent.click(async function (event) {\n    if (event.target.tagName != \"A\") {\n      const new_element = $(await random_html_factory());\n      $parent.empty().append(new_element);\n    }\n  });\n}\n\nexport interface IURLInfoMap {\n  [key: string]: IURLInfo;\n}\n\nexport interface IURLInfo {\n  url: string;\n  title: string;\n  description: string;\n  file_path: string;\n  outgoing_links: string[];\n  incoming_links: string[];\n  redirect_url: string;\n  doc_size: number;\n  last_modified: string;\n}\n\nlet cached_link_info: IURLInfoMap = null;\n\n/**\n * Gets link information from the back-links.json file\n */\nexport async function get_link_info(url?: string): Promise<IURLInfoMap> {\n  if (cached_link_info != null) {\n    return cached_link_info;\n  }\n  const current_url = url || window.location.href;\n  const prodPrefix = \"https://idvork.in\";\n  const isProd = current_url.includes(prodPrefix);\n\n  var backlinks_url =\n    \"https://raw.githubusercontent.com/idvorkin/idvorkin.github.io/master/back-links.json?flush_cache=True\";\n\n  if (!isProd) {\n    backlinks_url = \"/back-links.json\";\n  }\n\n  try {\n    const response = await fetch(backlinks_url);\n    const data = await response.json();\n    cached_link_info = data.url_info;\n    return cached_link_info;\n  } catch (e) {\n    console.error(\"Error fetching link info\", e);\n    return {};\n  }\n}\n","// Import shared functions\nimport {\n  random_from_list,\n  shuffle,\n  append_randomizer_div,\n  get_link_info,\n  IURLInfo,\n  IURLInfoMap,\n} from \"./shared\";\n\nimport { initRecentPosts } from \"./recent-posts\";\nimport { initRecentAllPosts } from \"./recent\";\n\nlet tocExpand = true;\n\nfunction checkExpandToggle() {\n  const toc = $(\".ui-toc-dropdown .toc\");\n  const toggle = $(\".expand-toggle\");\n  if (!tocExpand) {\n    toc.removeClass(\"expand\");\n    toggle.text(\"Expand all\");\n  } else {\n    toc.addClass(\"expand\");\n    toggle.text(\"Collapse all\");\n  }\n}\n\nfunction SwapProdAndTest() {\n  /* Find page title. */\n  const url = window.location.href;\n  const prodPrefix = \"https://idvork.in\";\n  const testPrefix = \"http://localhost:4000\";\n  const isProd = url.includes(prodPrefix);\n  let newURL = url;\n  if (isProd) {\n    newURL = url.replace(prodPrefix, testPrefix);\n  } else {\n    newURL = url.replace(testPrefix, prodPrefix);\n  }\n\n  window.location.href = newURL;\n}\n\nfunction ForceShowRightSideBar() {\n  let toc = $(\"#right-sidebar\");\n  let mainContent = $(\"#main-content\");\n  toc.removeClass();\n  toc.addClass(\"col-4 pl-0\");\n\n  mainContent.removeClass();\n  mainContent.addClass(\"col-8 pr-0\");\n\n  // Hide DropUp\n  const tocDropUp = $(\"#id-ui-toc-dropdown\");\n  tocDropUp.removeClass();\n  tocDropUp.addClass(\"d-none\");\n}\n\n// <!-- Copied from hackmd-extras.js -->\nfunction generateToc(id, showPinToc) {\n  const target = $(`#${id}`);\n  target.html(\"\");\n  /* eslint-disable no-unused-vars */\n  /* @ts-ignore:TS2339*/\n  const toc = new window.Toc(\"content-holder\", {\n    level: 3,\n    top: -1,\n    class: \"toc\",\n    ulClass: \"nav\",\n    targetId: id,\n  });\n  /* eslint-enable no-unused-vars */\n  if (target.text() === \"undefined\") {\n    target.html(\"\");\n  }\n  const tocMenu = $('<div class=\"toc-menu\"></div');\n  const toggle = $('<a class=\"expand-toggle\" href=\"#\">Collapse all</a>');\n  const backToTop = $('<a class=\"back-to-top\" href=\"#\">Top of page</a>');\n  const gotoBottom = $('<a class=\"go-to-bottom\" href=\"#\">Bottom of page</a>');\n  const forceSideBar = $('<a class=\"go-to-bottom\" href=\"#\">Pin ToC</a>');\n  checkExpandToggle();\n  toggle.click(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    tocExpand = !tocExpand;\n    checkExpandToggle();\n  });\n  backToTop.click(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    window.scrollTo(0, 0);\n  });\n  gotoBottom.click(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    window.scrollTo(0, document.body.scrollHeight);\n  });\n  forceSideBar.click(e => ForceShowRightSideBar());\n  tocMenu.append(toggle).append(backToTop).append(gotoBottom);\n  if (showPinToc) {\n    tocMenu.append(forceSideBar);\n  }\n  target.append(tocMenu);\n}\n\nfunction MakeBackLinkHTML(url_info: IURLInfo) {\n  const title_href = `<a href=${url_info.url}>${url_info.title}</a>`;\n  const class_link = `link-box description truncate-css`;\n  const output = `\n<div>\n    <div class=\"${class_link}\"> ${title_href}:<span class=\"link-description\"> ${url_info.description} <span></div>\n</div>`;\n  return output;\n}\n\n/**\n * Generates HTML for the link tabs structure\n * @returns The HTML string for tabs\n */\nexport function createLinkTabsHTML(): string {\n  return `\n<ul class=\"nav nav-tabs nav-fill\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#incoming\" type=\"button\" role=\"tab\" aria-controls=\"incoming\" aria-selected=\"true\">Links to here</button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#outgoing\" type=\"button\" role=\"tab\" aria-controls=\"outgoing\" aria-selected=\"false\">Link from here</button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#graph\" type=\"button\" role=\"tab\" aria-controls=\"outgoing\" aria-selected=\"false\">Graph</button>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"myTabContent\">\n  <div class=\"tab-pane fade show active \" id=\"incoming\" role=\"tabpanel\" aria-labelledby=\"incoming-tab\"></div>\n  <div class=\"tab-pane fade\" id=\"outgoing\" role=\"tabpanel\" aria-labelledby=\"outgoing-tab\"></div>\n  <div class=\"tab-pane fade\" id=\"graph\" role=\"tabpanel\" aria-labelledby=\"outgoing-tab\">\n    <span> View the graph for: </span>\n  </div>\n</div>\n`;\n}\n\n/**\n * Creates HTML for the graph link\n * @param pagePath The current page path\n * @returns HTML string for the graph link\n */\nexport function createGraphLinkHTML(pagePath: string): string {\n  const strippedPagePath = pagePath.replace(/\\//g, \"\");\n  return `<a href='/graph#${strippedPagePath}'>${pagePath} (${strippedPagePath}) </a>`;\n}\n\n/**\n * Filter and sort links by size\n * @param links Array of link paths\n * @param allUrls URL info map\n * @returns Filtered and sorted links\n */\nexport function filterAndSortLinks(\n  links: string[] = [],\n  allUrls: IURLInfoMap\n): string[] {\n  // Filter out invalid links\n  const validLinks = links.filter(link => allUrls[link]);\n\n  // Sort by doc_size descending\n  return validLinks.sort(\n    (a, b) => Number(allUrls[b].doc_size) - Number(allUrls[a].doc_size)\n  );\n}\n\n/**\n * Adds links to the page\n * @param allUrls URL info map\n * @param currentURL Optional URL for testing (defaults to document.URL)\n * @param jQueryElement Optional jQuery element for testing\n */\nasync function AddLinksToPage(\n  allUrls: IURLInfoMap,\n  currentURL: string = document.URL,\n  jQueryElement: any = $(\"#links-to-page\")\n) {\n  // Extract page path from URL\n  const page_path = new URL(currentURL).pathname;\n  const backlinks = allUrls[page_path]?.incoming_links || [];\n  const frontlinks = allUrls[page_path]?.outgoing_links || [];\n\n  if (backlinks.length === 0 && frontlinks.length === 0) {\n    console.log(`No backlinks for the page ${page_path}`);\n    return;\n  }\n\n  let link_parent_location = jQueryElement;\n  if (!link_parent_location || link_parent_location.length === 0) {\n    console.log(\"No back_link_location\");\n    return;\n  }\n\n  // Append tabs structure\n  link_parent_location.append(createLinkTabsHTML());\n\n  // Process incoming links\n  let incoming_location = link_parent_location.find(\"#incoming\");\n  const sortedBacklinks = filterAndSortLinks(backlinks, allUrls);\n\n  for (const link of sortedBacklinks) {\n    const url_info = allUrls[link];\n    incoming_location.append(MakeBackLinkHTML(url_info));\n  }\n\n  // Process outgoing links\n  let outgoing_location = link_parent_location.find(\"#outgoing\");\n  const sortedFrontlinks = filterAndSortLinks(frontlinks, allUrls);\n\n  for (const link of sortedFrontlinks) {\n    const url_info = allUrls[link];\n    outgoing_location.append(MakeBackLinkHTML(url_info));\n  }\n\n  // Add graph link\n  console.log(\"Added Graph\");\n  const graph_location = link_parent_location.find(\"#graph\");\n  graph_location.append(createGraphLinkHTML(page_path));\n}\nfunction make_html_summary_link(link, url_info: IURLInfo) {\n  const attribution = `(From:<a href='${url_info.url}'> ${url_info.title}</a>)`;\n\n  return `<div>\n        <i> ${url_info.description}</i> ${attribution}\n    </div>`;\n}\n\nfunction make_html_summary_link_error(link, error) {\n  return `<span class='text-danger'>Error: Invalid link for ${link.attr(\n    \"href\"\n  )} ${error} </span>`;\n}\n\nfunction AddSummarysToPage(backLinks: IBacklinks) {\n  const summary_links = $.makeArray($(\".summary-link\"));\n  summary_links.forEach(raw_link => {\n    const link = $(raw_link);\n    try {\n      console.log(link.attr(\"href\"));\n\n      let ref = link.attr(\"href\");\n\n      // Resolve redirect\n      if (backLinks.redirects[ref] != undefined) {\n        ref = backLinks.redirects[ref];\n      }\n      // Look up in url info\n      if (backLinks.url_info[ref] == undefined) {\n        link.html(make_html_summary_link_error(link, \"not found in url info\"));\n        return;\n      }\n\n      link.html(make_html_summary_link(link, backLinks.url_info[ref]));\n    } catch (e) {\n      link.html(make_html_summary_link_error(link, e));\n    }\n  });\n}\n\nasync function add_link_loader() {\n  AddLinksToPage(await get_link_info());\n  AddSummarysToPage(await get_back_links());\n}\n\nexport interface IBacklinks {\n  redirects: { [key: string]: string };\n  url_info: IURLInfoMap;\n}\n\nlet cached_back_links: IBacklinks = null;\nasync function get_back_links(): Promise<IBacklinks> {\n  if (cached_back_links != null) {\n    return cached_back_links;\n  }\n  const url = window.location.href;\n  const prodPrefix = \"https://idvork.in\";\n  const isProd = url.includes(prodPrefix);\n\n  var backlinks_url = \"\";\n  if (isProd) {\n    backlinks_url =\n      \"https://raw.githubusercontent.com/idvorkin/idvorkin.github.io/master/back-links.json?flush_cache=True\";\n  } else {\n    backlinks_url = \"/back-links.json\";\n  }\n\n  const backlinksJson = (await ($.getJSON(backlinks_url) as any)) as IBacklinks;\n  cached_back_links = backlinksJson;\n  return cached_back_links;\n}\n\nfunction search() {\n  $(\"#autocomplete-search-box-button\").click();\n}\n\nfunction keyboard_shortcut_loader() {\n  const mouseTrap: any = Mousetrap();\n  mouseTrap.bind(\"s\", e => search());\n  mouseTrap.bind(\"t\", e => ForceShowRightSideBar());\n  mouseTrap.bind(\"p\", e => SwapProdAndTest());\n  mouseTrap.bind(\"a\", e => (location.href = \"/all\"));\n  mouseTrap.bind(\"m\", e => (location.href = \"/toc\"));\n  mouseTrap.bind(\"6\", e => (location.href = \"/ig66\"));\n\n  let shortcutHelp = `\nTry these shortcuts:\n  s - search\n  / - start chatting with others\n  t - force sidebar\n  p - swap prod and test\n  z - surprise me\n  a - all posts\n  m - global toc\n  6 - family journal\n  `;\n  mouseTrap.bind(\"?\", e => alert(shortcutHelp));\n}\n\n/**\n * Replaces placeholder links in the document with their corresponding list content.\n * @param listReplacements - An object mapping placeholder texts to list elements.\n */\nfunction replacePlaceholdersWithLists(\n  listReplacements: Record<string, Element>\n) {\n  Object.entries(listReplacements).forEach(([placeholderText, list]) => {\n    const placeholderLink = $(`a[href=${placeholderText}]`).first();\n    if (!placeholderLink.length) return; // Placeholder not found, skip\n\n    const listClone = $(list).clone();\n    listClone.children().first().remove(); // Remove the 'lookup id' from the list\n    placeholderLink.replaceWith(listClone);\n\n    // remove the list from the document\n    $(list).remove();\n  });\n}\n\n/**\n * Builds a map of list replacements by scanning the document for specially formatted lists.\n * @returns An object where keys are placeholder texts and values are the corresponding list elements.\n */\nfunction buildListReplacementMap(): Record<string, Element> {\n  const replacements: Record<string, Element> = {};\n  $(\"ul\").each((_, list) => {\n    const firstListItem = list.firstElementChild;\n    if (!firstListItem) return;\n\n    const firstItemText = firstListItem.textContent;\n    if (!firstItemText || !firstItemText.startsWith(\"l\")) return;\n\n    const listId = parseInt(firstItemText.substring(1));\n    if (isNaN(listId)) return;\n\n    replacements[firstItemText] = list;\n  });\n  return replacements;\n}\n\n/**\n * Replaces list placeholders in tables with actual list content.\n * This function orchestrates the process of finding and replacing placeholders.\n */\nfunction replaceListPlaceholdersInTables() {\n  console.log(\"🔄 Replacing List Placeholders in Tables\");\n  const listReplacements = buildListReplacementMap();\n  replacePlaceholdersWithLists(listReplacements);\n}\n\nfunction load_globals() {\n  $(add_link_loader);\n  $(keyboard_shortcut_loader);\n\n  // Replace list placeholders in tables\n  $(document).ready(replaceListPlaceholdersInTables);\n\n  console.log(\"🚀 About to call initRecentPosts from main.ts\");\n  initRecentPosts();\n  console.log(\"✅ Called initRecentPosts from main.ts\");\n\n  // Initialize recent posts if the container exists\n  if (document.getElementById(\"last-modified-posts\")) {\n    console.log(\"🚀 About to call initRecentAllPosts from main.ts\");\n    initRecentAllPosts();\n    console.log(\"✅ Called initRecentAllPosts from main.ts\");\n  }\n\n  // Dynamically load the graph module only on the graph page\n  if (window.location.pathname === \"/graph\") {\n    console.log(\"📊 On graph page, importing graph module\");\n    import(\"./graph\")\n      .then(() => console.log(\"✅ Graph module loaded successfully\"))\n      .catch(err => console.error(\"❌ Error loading graph module:\", err));\n  }\n\n  $(function () {\n    generateToc(\"ui-toc\", true);\n    generateToc(\"ui-toc-affix\", false);\n  });\n}\n\nexport {\n  load_globals,\n  get_link_info,\n  MakeBackLinkHTML,\n  shuffle,\n  random_from_list,\n  append_randomizer_div,\n};\n","/**\n * Recent Posts Display Module\n *\n * Fetches and displays the most recently modified posts\n * from the backlinks.json file.\n */\n\nimport { IURLInfoMap, IURLInfo } from \"./shared\";\n\n/**\n * Updates the recent posts container with post data\n */\nasync function updateRecentPosts(): Promise<void> {\n  console.log(\"🔍 updateRecentPosts function called\");\n\n  const recentPostsContainer = document.getElementById(\"recent-posts\");\n  console.log(\"🔍 recent-posts container element:\", recentPostsContainer);\n\n  if (!recentPostsContainer) {\n    console.error(\"❌ recent-posts container not found in DOM\");\n    return;\n  }\n\n  try {\n    console.log(\"🔍 Fetching back-links.json...\");\n    // Fetch the backlinks data\n    const response = await fetch(\"/back-links.json\");\n    const data = await response.json();\n    console.log(\"🔍 Received data from back-links.json:\", data);\n    console.log(\"🔍 Keys in data:\", Object.keys(data));\n\n    // Check if the expected structure exists\n    if (!data.url_info) {\n      console.error(\"❌ Missing url_info in data structure\");\n      recentPostsContainer.innerHTML =\n        \"<p>Error: Could not load recent posts data.</p>\";\n      return;\n    }\n\n    const urlInfoMap: IURLInfoMap = data.url_info;\n    console.log(\n      \"🔍 Number of entries in urlInfoMap:\",\n      Object.keys(urlInfoMap).length\n    );\n\n    // Convert to array of pages for easier processing\n    const pages = Object.entries(urlInfoMap).map(([url, metadata]) => ({\n      url,\n      title: metadata.title || url,\n      description: metadata.description || \"\",\n      doc_size: metadata.doc_size || 0,\n      last_modified: metadata.last_modified || \"\",\n    }));\n    console.log(\"🔍 Transformed pages array, length:\", pages.length);\n\n    // Filter out pages that are likely redirects (these have empty descriptions and titles)\n    const realPages = pages.filter(\n      page =>\n        page.description &&\n        page.description.trim() !== \"\" &&\n        page.title &&\n        page.title.trim() !== \"\" &&\n        page.title !== page.url // Ensure title is not the same as URL (fallback case)\n    );\n    console.log(\"🔍 Filtered real pages, length:\", realPages.length);\n    console.log(\"🔍 First 3 real pages:\", realPages.slice(0, 3));\n\n    // Sort by last_modified date (newest first)\n    const sortedPages = realPages.sort((a, b) => {\n      if (a.last_modified && b.last_modified) {\n        console.log(\n          \"🔍 Comparing last_modified dates:\",\n          a.url,\n          a.last_modified,\n          \"vs\",\n          b.url,\n          b.last_modified\n        );\n        return (\n          new Date(b.last_modified).getTime() -\n          new Date(a.last_modified).getTime()\n        );\n      }\n      // Fallback to doc_size if last_modified is not available\n      return b.doc_size - a.doc_size;\n    });\n    console.log(\n      \"🔍 Sorted pages, first 5:\",\n      sortedPages.slice(0, 5).map(p => ({\n        url: p.url,\n        title: p.title,\n        last_modified: p.last_modified,\n      }))\n    );\n\n    // Take the top 5 most recent posts\n    const recentPages = sortedPages.slice(0, 5);\n\n    // Create the HTML\n    if (recentPages.length === 0) {\n      console.warn(\"⚠️ No recent pages found after filtering and sorting\");\n      recentPostsContainer.innerHTML = \"<p>No recent posts found.</p>\";\n      return;\n    }\n\n    const html = `\n      <ul>\n        ${recentPages\n          .map(\n            page => `\n          <li>\n            <a href=\"${page.url}\">${page.title}</a> - \n            ${page.description.split(\"\\n\")[0].substring(0, 100)}${\n              page.description.length > 100 ? \"...\" : \"\"\n            }\n          </li>\n        `\n          )\n          .join(\"\")}\n      </ul>\n    `;\n\n    console.log(\n      \"🔍 Updating recent-posts content with HTML\",\n      html.substring(0, 100) + \"...\"\n    );\n    recentPostsContainer.innerHTML = html;\n    console.log(\"✅ Recent posts updated successfully\");\n  } catch (error) {\n    console.error(\"❌ Error loading recent posts:\", error);\n    recentPostsContainer.innerHTML =\n      \"<p>Error loading recent posts. Please try again later.</p>\";\n  }\n}\n\n/**\n * Initializes the recent posts component\n */\nexport function initRecentPosts(): void {\n  console.log(\"🔍 initRecentPosts called\");\n\n  // Check if document is already loaded\n  if (document.readyState === \"loading\") {\n    // Document still loading, add event listener\n    console.log(\"🔍 Document still loading, adding DOMContentLoaded listener\");\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      console.log(\n        \"🔍 DOMContentLoaded event fired, calling updateRecentPosts()\"\n      );\n      updateRecentPosts();\n    });\n  } else {\n    // Document already loaded, run immediately\n    console.log(\n      \"🔍 Document already loaded, calling updateRecentPosts() immediately\"\n    );\n    updateRecentPosts();\n  }\n\n  console.log(\"🔍 initRecentPosts completed initial setup\");\n}\n","/**\n * Recent Posts Display Module\n *\n * Fetches and displays all posts sorted by last modification date\n * from the backlinks.json file.\n */\n\nimport { IURLInfoMap, get_link_info } from \"./shared\";\n\ninterface PageInfo {\n  url: string;\n  title: string;\n  description: string;\n  doc_size: number;\n  last_modified: string;\n}\n\n/**\n * Updates the recent posts container with post data\n */\nasync function updateRecentPosts(): Promise<void> {\n  console.log(\"🔍 updateRecentPosts function called\");\n\n  const recentContainer = document.getElementById(\"last-modified-posts\");\n  console.log(\"🔍 recent-posts container element:\", recentContainer);\n\n  if (!recentContainer) {\n    console.error(\"❌ recent-posts container not found in DOM\");\n    return;\n  }\n\n  try {\n    console.log(\"🔍 Fetching back-links.json...\");\n    // Fetch the backlinks data using the shared function\n    const urlInfoMap = await get_link_info();\n    console.log(\n      \"🔍 Number of entries in urlInfoMap:\",\n      Object.keys(urlInfoMap).length\n    );\n\n    // Convert to array of pages for easier processing\n    const pages: PageInfo[] = Object.entries(urlInfoMap).map(\n      ([url, metadata]) => ({\n        url,\n        title: metadata.title || url,\n        description: metadata.description || \"\",\n        doc_size: metadata.doc_size || 0,\n        last_modified: metadata.last_modified || \"\",\n      })\n    );\n    console.log(\"🔍 Transformed pages array, length:\", pages.length);\n\n    // Filter out pages that are likely redirects (these have empty descriptions and titles)\n    const realPages = pages.filter(\n      page =>\n        page.description &&\n        page.description.trim() !== \"\" &&\n        page.title &&\n        page.title.trim() !== \"\"\n    );\n    console.log(\"🔍 Filtered real pages, length:\", realPages.length);\n\n    // Sort by last_modified date (newest first)\n    const sortedPages = realPages.sort((a, b) => {\n      if (a.last_modified && b.last_modified) {\n        return (\n          new Date(b.last_modified).getTime() -\n          new Date(a.last_modified).getTime()\n        );\n      }\n      // Fallback to doc_size if last_modified is not available\n      return b.doc_size - a.doc_size;\n    });\n\n    // Create the HTML\n    if (sortedPages.length === 0) {\n      console.warn(\"⚠️ No pages found after filtering and sorting\");\n      recentContainer.innerHTML = \"<p>No modified posts found.</p>\";\n      return;\n    }\n\n    // Define how many posts to show initially and in the expanded section\n    const initialPostsCount = 15;\n    const remainingPosts = sortedPages.slice(initialPostsCount);\n\n    // Group initial posts by month/year for better organization\n    const groupedPages: { [key: string]: PageInfo[] } = {};\n\n    sortedPages.slice(0, initialPostsCount).forEach(page => {\n      if (!page.last_modified) return;\n\n      const date = new Date(page.last_modified);\n      const monthYear = `${date.toLocaleString(\"default\", {\n        month: \"long\",\n      })} ${date.getFullYear()}`;\n\n      if (!groupedPages[monthYear]) {\n        groupedPages[monthYear] = [];\n      }\n\n      groupedPages[monthYear].push(page);\n    });\n\n    // Create HTML with grouped structure for initial posts\n    let html = \"\";\n\n    Object.entries(groupedPages).forEach(([monthYear, pages]) => {\n      html += `\n        <h3>${monthYear}</h3>\n        <ul class=\"last-modified-list\">\n          ${pages\n            .map(page => {\n              const date = new Date(page.last_modified);\n              const formattedDate = date.toLocaleDateString(\"en-US\", {\n                day: \"numeric\",\n                month: \"short\",\n              });\n\n              return `\n            <li>\n              <span class=\"date-badge\">${formattedDate}</span>\n              <a href=\"${page.url}\">${page.title}</a>\n              <p class=\"description\">${page.description\n                .split(\"\\n\")[0]\n                .substring(0, 150)}${\n                page.description.length > 150 ? \"...\" : \"\"\n              }</p>\n            </li>\n          `;\n            })\n            .join(\"\")}\n        </ul>\n      `;\n    });\n\n    // Add the \"Remaining Modified Files\" section if there are more posts\n    if (remainingPosts.length > 0) {\n      // Group remaining posts by month/year\n      const remainingGroupedPages: { [key: string]: PageInfo[] } = {};\n\n      remainingPosts.forEach(page => {\n        if (!page.last_modified) return;\n\n        const date = new Date(page.last_modified);\n        const monthYear = `${date.toLocaleString(\"default\", {\n          month: \"long\",\n        })} ${date.getFullYear()}`;\n\n        if (!remainingGroupedPages[monthYear]) {\n          remainingGroupedPages[monthYear] = [];\n        }\n\n        remainingGroupedPages[monthYear].push(page);\n      });\n\n      // Create the remaining posts HTML (initially hidden)\n      let remainingHtml = \"\";\n\n      Object.entries(remainingGroupedPages).forEach(([monthYear, pages]) => {\n        remainingHtml += `\n          <h3>${monthYear}</h3>\n          <ul class=\"last-modified-list\">\n            ${pages\n              .map(page => {\n                const date = new Date(page.last_modified);\n                const formattedDate = date.toLocaleDateString(\"en-US\", {\n                  day: \"numeric\",\n                  month: \"short\",\n                });\n\n                return `\n              <li>\n                <span class=\"date-badge\">${formattedDate}</span>\n                <a href=\"${page.url}\">${page.title}</a>\n                <p class=\"description\">${page.description\n                  .split(\"\\n\")[0]\n                  .substring(0, 150)}${\n                  page.description.length > 150 ? \"...\" : \"\"\n                }</p>\n              </li>\n            `;\n              })\n              .join(\"\")}\n          </ul>\n        `;\n      });\n\n      // Add the toggle section\n      html += `\n        <div class=\"remaining-posts-section\">\n          <h2 id=\"remaining-posts-toggle\" class=\"remaining-toggle\">\n            <span class=\"toggle-icon\">▶</span> Remaining Modified Files (${remainingPosts.length} more)\n          </h2>\n          <div id=\"remaining-posts-content\" class=\"remaining-content\" style=\"display: none;\">\n            ${remainingHtml}\n          </div>\n        </div>\n      `;\n    }\n\n    // Add some CSS for styling\n    html = `\n      <style>\n        .last-modified-list {\n          list-style-type: none;\n          padding-left: 0;\n        }\n        .last-modified-list li {\n          margin-bottom: 1.5rem;\n          position: relative;\n        }\n        .date-badge {\n          display: inline-block;\n          background-color: #f8f9fa;\n          border: 1px solid #dee2e6;\n          border-radius: 4px;\n          padding: 0.2rem 0.5rem;\n          margin-right: 0.5rem;\n          font-size: 0.8rem;\n        }\n        .description {\n          margin-top: 0.5rem;\n          margin-bottom: 0;\n          color: #6c757d;\n        }\n        .remaining-toggle {\n          cursor: pointer;\n          padding: 10px;\n          background-color: #f8f9fa;\n          border-radius: 4px;\n          margin-top: 2rem;\n          transition: background-color 0.3s;\n        }\n        .remaining-toggle:hover {\n          background-color: #e9ecef;\n        }\n        .toggle-icon {\n          display: inline-block;\n          transition: transform 0.3s;\n        }\n        .toggle-icon.open {\n          transform: rotate(90deg);\n        }\n      </style>\n      ${html}\n    `;\n\n    console.log(\n      \"🔍 Updating recent-posts content with HTML\",\n      html.substring(0, 100) + \"...\"\n    );\n    recentContainer.innerHTML = html;\n\n    // Add event listener for the toggle\n    const toggleElement = document.getElementById(\"remaining-posts-toggle\");\n    if (toggleElement) {\n      toggleElement.addEventListener(\"click\", function () {\n        const contentElement = document.getElementById(\n          \"remaining-posts-content\"\n        );\n        const iconElement = this.querySelector(\".toggle-icon\");\n\n        if (contentElement.style.display === \"none\") {\n          contentElement.style.display = \"block\";\n          iconElement.classList.add(\"open\");\n        } else {\n          contentElement.style.display = \"none\";\n          iconElement.classList.remove(\"open\");\n        }\n      });\n    }\n\n    console.log(\"✅ Recent posts updated successfully\");\n  } catch (error) {\n    console.error(\"❌ Error loading recent posts:\", error);\n    recentContainer.innerHTML =\n      \"<p>Error loading modified posts. Please try again later.</p>\";\n  }\n}\n\n/**\n * Initializes the recent posts component\n */\nexport function initRecentAllPosts(): void {\n  console.log(\"🔍 initRecentAllPosts called\");\n\n  // Check if document is already loaded\n  if (document.readyState === \"loading\") {\n    // Document still loading, add event listener\n    console.log(\"🔍 Document still loading, adding DOMContentLoaded listener\");\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      console.log(\n        \"🔍 DOMContentLoaded event fired, calling updateRecentPosts()\"\n      );\n      updateRecentPosts();\n    });\n  } else {\n    // Document already loaded, run immediately\n    console.log(\n      \"🔍 Document already loaded, calling updateRecentPosts() immediately\"\n    );\n    updateRecentPosts();\n  }\n\n  console.log(\"🔍 initRecentAllPosts completed initial setup\");\n}\n","// For autocomplete\nconst { autocomplete, getAlgoliaResults } = window[\"@algolia/autocomplete-js\"];\nimport { get_link_info, random_from_list } from \"./shared\";\n\n// Adding a query paramater.\n// import instantsearch from \"algoliasearch\";\n\nconst search_placeholder_text = \"Search Igor's Musings ...\";\n\nfunction getParameterByName(name, url): string {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return \"\";\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\nfunction InstantSearchHitTemplate(hit) {\n  // https://www.algolia.com/doc/api-reference/widgets/infinite-hits/js/\n  try {\n    let url = hit.url;\n    if (hit.anchor) {\n      url += `#${hit.anchor}`;\n    }\n    const highlighted = hit._highlightResult;\n\n    if (!highlighted) {\n      console.log(\"No Highlight\", hit);\n    }\n    const title = highlighted.title.value;\n    const content = highlighted?.content?.value ?? \"\";\n    // <section class=\"notepad-post-excerpt\"><p>${content}</p></section>\n\n    const string_rep = `\n           <span onClick=\"window.location='${url}';\">\n              <b> <a href=\"${url}\">${title}</a></b> <span>${content}</span>\n           </span>\n        `;\n    return string_rep;\n  } catch (err) {\n    console.log(\"Error in hitTemplate\", err, hit);\n  }\n  return \"invalid HTML\";\n}\n\ndeclare function instantsearch(l: any): any;\ndeclare function algoliasearch(l: any, l2: any): any;\n\nfunction CreateSearch(appid, search_api_key, index_name, initial_query) {\n  // Instanciating InstantSearch.js with Algolia credentials\n  const searchClient = algoliasearch(appid, search_api_key);\n  const search = instantsearch({\n    searchClient: searchClient,\n    indexName: index_name,\n    searchParameters: {\n      query: initial_query,\n    },\n  });\n\n  // Adding searchbar and results widgets\n  search.addWidget(\n    // @ts-ignore:TS2339\n    instantsearch.widgets.searchBox({\n      container: \"#search-box\",\n      placeholder: search_placeholder_text,\n      poweredBy: true, // This is required if you're on the free Community plan\n      showSubmit: false,\n      showReset: false,\n      showLoadingIndicator: false,\n    })\n  );\n\n  search.addWidget(\n    // @ts-ignore:TS2339\n    instantsearch.widgets.infiniteHits({\n      container: \"#search-hits\",\n      templates: {\n        item: InstantSearchHitTemplate,\n      },\n      item({ item }) {\n        return `Result: ${item.name}`;\n      },\n    })\n  );\n\n  return search;\n}\n\n// Copied from the docs, but this isn't working for me.\nfunction AutoCompleteHitTemplateWithComponentDoesNotWork({\n  item,\n  components,\n  createElement,\n  fragments,\n}) {\n  console.log(item);\n  return components.Highlight({ hit: item });\n}\n\n// Algolia uses some PREACT thing, which this project does not support\n// Reach way into algolia and build the HTML manually\nfunction AutoCompleteHitTemplate({ item, createElement }) {\n  // https://www.algolia.com/doc/api-reference/widgets/infinite-hits/js/\n  return createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: InstantSearchHitTemplate(item),\n    },\n  });\n}\n\nasync function get_random_post() {\n  const all_url_info = await get_link_info();\n  //  Yuk, find a clearere way to do this\n  const all_pages = Object.entries(all_url_info) // returns a list of [url, info]\n    .map(e => e[1]);\n  const random_post = random_from_list(all_pages);\n  const ret = {\n    title: random_post[\"title\"],\n    url: random_post[\"url\"],\n    description: random_post[\"description\"],\n  };\n  return ret;\n}\n\n/**\n * Gets recent posts from the back-links.json file\n * Returns the specified number of most recently modified posts\n */\nasync function get_recent_posts(count: number = 4) {\n  try {\n    const all_url_info = await get_link_info();\n\n    // Convert to array of pages for easier processing\n    const pages = Object.entries(all_url_info).map(([url, metadata]) => ({\n      url,\n      title: metadata.title || url,\n      description: metadata.description || \"\",\n      doc_size: metadata.doc_size || 0,\n      last_modified: metadata.last_modified || \"\",\n    }));\n\n    // Filter out pages that are likely redirects (these have empty descriptions and titles)\n    const realPages = pages.filter(\n      page =>\n        page.description &&\n        page.description.trim() !== \"\" &&\n        page.title &&\n        page.title.trim() !== \"\"\n    );\n\n    // Sort by last_modified date (newest first)\n    const sortedPages = realPages.sort((a, b) => {\n      if (a.last_modified && b.last_modified) {\n        return (\n          new Date(b.last_modified).getTime() -\n          new Date(a.last_modified).getTime()\n        );\n      }\n      // Fallback to doc_size if last_modified is not available\n      return b.doc_size - a.doc_size;\n    });\n\n    // Take the top N most recent posts\n    return sortedPages.slice(0, count);\n  } catch (error) {\n    console.error(\"❌ Error loading recent posts:\", error);\n    return [];\n  }\n}\n\n/**\n * Gets random posts for search results\n * @param count Number of random posts to return (default: 3)\n */\nasync function GetRandomSearchResults(count: number = 3) {\n  return {\n    sourceId: \"random_posts\",\n    async getItems() {\n      const sized_array = new Array(count).join(\"_\").split(\"_\");\n      const random_posts = await Promise.all(\n        sized_array.map(async e => get_random_post())\n      );\n      return random_posts;\n    },\n    getItemUrl({ item }) {\n      const ret = item.url;\n      return ret;\n    },\n    templates: {\n      item({ item, createElement }) {\n        return createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: `\n            <span onClick=\"window.location='${item.url}';\" >\n           <b> <a href=\"${item.url}\">${item.title}</a></b>\n            <span>${item.description}</span>\n            </span>\n            `,\n          },\n        });\n      },\n      header({ createElement }) {\n        return createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: \"<i style='color:grey'>Random posts ...</i>\",\n          },\n        });\n      },\n    },\n  };\n}\n\n/**\n * Gets recent posts for search results\n * @param count Number of recent posts to return (default: 4)\n */\nasync function GetRecentSearchResults(count: number = 4) {\n  return {\n    sourceId: \"recent_posts\",\n    async getItems() {\n      const recentPosts = await get_recent_posts(count);\n      return recentPosts;\n    },\n    getItemUrl({ item }) {\n      const ret = item.url;\n      return ret;\n    },\n    templates: {\n      item({ item, createElement }) {\n        return createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: `\n            <span onClick=\"window.location='${item.url}';\" >\n           <b> <a href=\"${item.url}\">${item.title}</a></b>\n            <span>${item.description}</span>\n            </span>\n            `,\n          },\n        });\n      },\n      header({ createElement }) {\n        return createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: \"<i style='color:grey'>Recent posts ...</i>\",\n          },\n        });\n      },\n    },\n  };\n}\n\n/**\n * Gets featured posts from Algolia search\n * @param searchClient Algolia search client\n * @param index_name Index name to search\n * @param query Search query\n * @param hitsPerPage Number of results to return (default: 3)\n * @param includeFamilyJournal Whether to include family journal posts\n */\nfunction GetAlgoliaResults(\n  searchClient,\n  index_name,\n  query,\n  hitsPerPage: number = 3,\n  includeFamilyJournal = false\n) {\n  // By default don't include family journal.\n  let filter = \"NOT tags:family-journal\";\n  if (includeFamilyJournal) {\n    filter = \"\";\n  }\n\n  return {\n    sourceId: \"featured_posts\",\n    getItems() {\n      return getAlgoliaResults({\n        searchClient,\n        queries: [\n          {\n            indexName: index_name,\n            query,\n            filters: filter,\n            params: {\n              hitsPerPage: hitsPerPage,\n              highlightPreTag: \"<span style='background:yellow'>\",\n              highlightPostTag: \"</span>\",\n            },\n          },\n        ],\n      });\n    },\n    templates: {\n      item: AutoCompleteHitTemplate,\n      header({ createElement }) {\n        return createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: \"<i style='color:grey'>Featured posts ...</i>\",\n          },\n        });\n      },\n    },\n    getItemUrl({ item }) {\n      let url = item.url;\n      if (item.anchor) {\n        url += `#${item.anchor}`;\n      }\n      const ret = url;\n      return ret;\n    },\n  };\n}\n\n/**\n * Creates an autocomplete search component\n * @param appid Algolia app ID\n * @param search_api_key Algolia search API key\n * @param index_name Algolia index name\n * @param autocomplete_id ID of the autocomplete element\n * @param includeFamilyJournal Whether to include family journal posts\n * @param featuredCount Number of featured posts to show (default: 3)\n * @param recentCount Number of recent posts to show (default: 4)\n * @param randomCount Number of random posts to show (default: 3)\n */\nasync function CreateAutoComplete(\n  appid,\n  search_api_key,\n  index_name,\n  autocomplete_id,\n  includeFamilyJournal,\n  featuredCount: number = 3,\n  recentCount: number = 4,\n  randomCount: number = 3\n) {\n  const searchClient = algoliasearch(appid, search_api_key);\n  const randomSearchResults = await GetRandomSearchResults(randomCount);\n  const recentSearchResults = await GetRecentSearchResults(recentCount);\n\n  function GetSources({ query }) {\n    const isEmptySearch = query.length === 0;\n    if (isEmptySearch) {\n      // Searching for a space gives nice default results, so when no results search for that ...\n      query = \" \";\n    }\n\n    // Get featured posts (from Algolia search)\n    const featuredPosts = GetAlgoliaResults(\n      searchClient,\n      index_name,\n      query,\n      isEmptySearch ? featuredCount : 10, // Show N featured posts when empty, more when searching\n      includeFamilyJournal\n    );\n\n    // For empty search, show featured, recent, and random posts\n    // For actual search, just show search results\n    if (isEmptySearch) {\n      return [featuredPosts, recentSearchResults, randomSearchResults];\n    } else {\n      return [featuredPosts];\n    }\n  }\n\n  // Make sure we have the element\n  // autocomplete_id can be either '#id' or just 'id'\n  const elementId = autocomplete_id.startsWith(\"#\")\n    ? autocomplete_id\n    : `#${autocomplete_id}`;\n  if ($(elementId).length === 0) {\n    console.log(\n      \"No autocomplete element found\",\n      \"autocomplete_id\",\n      autocomplete_id\n    );\n    return;\n  }\n\n  // Setup Auto Complete Stuff\n  return autocomplete({\n    container: elementId,\n    placeholder: search_placeholder_text,\n    getSources: GetSources,\n    debug: false,\n    openOnFocus: true,\n    detachedMediaQuery: \"\",\n  });\n}\n\nexport { CreateSearch, getParameterByName, CreateAutoComplete };\n","// One of the imports is goofy\n// @ts-ignore:TS2792\nimport { SunburstClickEvent } from \"plotly.js\";\nimport { shuffle, random_from_list, append_randomizer_div } from \"./index\";\nimport {\n  isNullishCoalesce,\n  isTypeAliasDeclaration,\n} from \"../node_modules/typescript/lib/typescript\";\nclass TreeNode {\n  name: string;\n  children: [TreeNode];\n  value: number;\n  constructor({\n    name,\n    value = 25,\n    children = [],\n  }: {\n    name;\n    value?;\n    children?;\n  }) {\n    this.name = name;\n    // Keep it interesting\n    this.children = shuffle(children);\n    this.value = value;\n  }\n}\nfunction add_random_prompts() {\n  const map_category_to_prompts = category_to_prompts();\n  for (const category of map_category_to_prompts.keys()) {\n    render_prompt_for_category(category, map_category_to_prompts.get(category));\n  }\n}\n\nfunction render_prompt_for_category(category, prompts_for_category) {\n  //print one of the prompts\n  let get_random_prompt_html = () =>\n    `<span>${random_from_list(\n      prompts_for_category\n    )}</span><span style=\"float: right; cursor: pointer;\" title=\"Click for another prompt\">🔄</span>`;\n\n  // add a place holder for random div.\n  const new_element = $(`<div class=\"alert alert-primary\" role=\"alert\"/>`);\n  $(category).after(new_element);\n  append_randomizer_div(new_element, get_random_prompt_html);\n}\n\n// The prompts page has a bunch of lists of prompts\n// Would be nice to \"pick a random one\" to make it less intimidating\n// So can add a box at the top with a random prompt on top\n// And a random per section prompt\n\nfunction category_to_prompts() {\n  // prompt_categories are H3s with a UL under them, and the li's under there are the prompt.\n  const starting_node = $(\"h3\").first();\n  let current_category = starting_node;\n  let prompts_for_category = [];\n  let map_category_to_prompts = new Map();\n  for (let node = starting_node; node.length != 0; node = $(node).next()) {\n    if (node.prop(\"tagName\") == \"H3\") {\n      // Build prompt map\n      map_category_to_prompts.set(current_category, prompts_for_category);\n\n      // start processing next categroy\n      current_category = node;\n      prompts_for_category = [];\n      continue;\n    }\n\n    // in a category, prompts are the children of the first unordered list, so skip\n    // stuff that isn't a list\n    if (node.prop(\"tagName\") != \"UL\") {\n      continue;\n    }\n    // we should now be the first list in the category\n    prompts_for_category = Array.from($(node).find(\"li\")).map(li =>\n      $(li).text()\n    );\n  }\n\n  map_category_to_prompts.set(current_category, prompts_for_category);\n\n  // Remove any categories that\n\n  return map_category_to_prompts;\n}\n// sunburst format is an inorder traversal of the tree.\n// good thing to unit test\n\nfunction* breadth_first_walk(node: TreeNode) {\n  if (!node) {\n    return;\n  }\n  let Q = [];\n  Q.push([node, null as TreeNode]);\n  while (Q.length > 0) {\n    const [current, parent]: [TreeNode, TreeNode] = Q.shift();\n    for (const child of current.children ?? []) {\n      Q.push([child, current]);\n    }\n    yield [current, parent];\n  }\n}\n\nfunction tree_to_plotly_data_format(root) {\n  // Plotly needs a tree to be flattened into a set of lists\n  // ids\n  // labels\n  // parents\n  // values\n\n  // JScript Experts: Is there a desctructing for this?\n  const names_parent_names = Array.from(breadth_first_walk(root)).map(\n    ([n, p]) => [n.name, p?.name]\n  );\n\n  return {\n    ids: names_parent_names.map(([n, p]) => n),\n    labels: names_parent_names.map(([n, p]) => n),\n    parents: names_parent_names.map(([n, p]) => p),\n  };\n}\n\nfunction category_to_prompts_text() {\n  const map = category_to_prompts();\n  const list = Array.from(map.entries()).map(([k, v], _index) => [\n    (k as any).text(),\n    v,\n  ]);\n  return new Map(list as any);\n}\n\n// We have a tree of nested categories. [node(category, children)]\n// and prompts stored in a map[category, prompt]\n// Join and walk\n\nfunction random_prompt_for_label(label, tree_node, map_node_to_prompts) {\n  // Find the label in the tree\n  // recall bread first search returns a parent as well.\n  const [clicked_node, _parent] = Array.from(\n    breadth_first_walk(tree_node)\n  ).find(([current, _parent]) => current.name == label);\n\n  // console.log(Array.from(breadth_first_walk(tree_node)));\n  // console.log(\"Label\", label);\n  // console.log(\"Clicked Node\", clicked_node);\n  // console.log(map_node_to_prompts);\n\n  // Gather all the prompts for the children of the clicked node.\n  let all_prompts = Array.from(breadth_first_walk(clicked_node))\n    .map(([node, _parent]) => node) // returns node and parent\n    .filter(node => map_node_to_prompts.has(node.name))\n    .map(node =>\n      map_node_to_prompts\n        .get(node.name)\n        .map(prompt => `${node.name}: ${prompt}`)\n    )\n    .flat();\n\n  return random_from_list(all_prompts);\n}\n\nasync function add_sunburst(\n  plot_element_id,\n  random_text_div_id,\n  root: TreeNode\n) {\n  const sunburst_tree_flat = tree_to_plotly_data_format(root);\n  var sunburst_data = {\n    type: \"sunburst\",\n    outsidetextfont: { size: 20, color: \"#377eb8\" },\n    // leaf: {opacity: 0.4},\n    hoverinfo: \"none\",\n    marker: { line: { width: 2 } },\n    maxdepth: 2,\n    displayModeBar: false,\n  };\n  Object.assign(sunburst_data, sunburst_tree_flat);\n  delete (sunburst_data as any).values; // remove values to avoid sizing pie slices\n\n  var sunburst_layout = {\n    margin: { l: 0, r: 0, b: 0, t: 0 },\n    sunburstcolorway: [\"#636efa\", \"#ef553b\", \"#00cc96\"],\n  };\n  const config = {\n    displayModeBar: false,\n  };\n\n  const sunburstPlot = await Plotly.newPlot(\n    plot_element_id,\n    [sunburst_data] as any,\n    sunburst_layout,\n    config\n  );\n  const set_random_prompt_text = text => {\n    console.log(\"set_random_prompt_text\", text);\n    $(`#${random_text_div_id}`).text(text);\n  };\n\n  // Set click handler for div\n  $(`#${random_text_div_id}`)\n    .first()\n    .click(() => {\n      const label = $(\"#sunburst text:first\").text(); // Hack should use an API to find center text\n      const prompt = random_prompt_for_label(\n        label,\n        root,\n        category_to_prompts_text()\n      );\n      set_random_prompt_text(prompt);\n    });\n\n  sunburstPlot.on(\"plotly_sunburstclick\", event => {\n    const label = event.points[0].label;\n    const prompt = random_prompt_for_label(\n      label,\n      root,\n      category_to_prompts_text()\n    );\n    set_random_prompt_text(prompt);\n  });\n}\n\nconst UT = {\n  breadth_first_walk: breadth_first_walk, // for UT\n  shuffle: shuffle,\n};\n\n// How do I export things only for testing?\n// I guess they should be in their own module\nexport { add_random_prompts, add_sunburst, TreeNode, UT, shuffle };\n","// Only include this in the html files, one per file\n// This allows code to seet things to refactor\nimport {\n  add_sunburst,\n  add_random_prompts,\n  TreeNode,\n  shuffle,\n} from \"./random-prompter\";\nimport { get_link_info } from \"./index\";\nimport { get } from \"lodash-es\";\nimport { append_randomizer_div, random_from_list } from \"./index\";\nimport { add_imported_blog_posts, add_eulogy_roles } from \"./blogger_import.js\";\n\nclass SevenHabits {\n  get_tree() {\n    const root = new TreeNode({\n      name: \"7H \",\n      children: [\n        new TreeNode({ name: \"\" }),\n        new TreeNode({ name: \"Be Proactive\" }),\n        new TreeNode({ name: \"Begin with the end in mind\" }),\n        new TreeNode({ name: \"First things First\" }),\n        new TreeNode({ name: \"Think Win/Win\" }),\n        new TreeNode({ name: \"First Understand\" }),\n        new TreeNode({ name: \"Synergize\" }),\n        new TreeNode({ name: \"Sharpen the Saw\" }),\n      ],\n    });\n    return root;\n  }\n}\n\nclass ThingsIEnjoy {\n  get_tree() {\n    const health = new TreeNode({\n      name: \"Health\",\n      children: [\n        { name: \"Physical\" },\n        { name: \"Emotional\" },\n        { name: \"Cognative\" },\n      ],\n      value: 31,\n    });\n    const magic = new TreeNode({\n      name: \"Magic\",\n      children: [\n        new TreeNode({ name: \"Card Magic\" }),\n        new TreeNode({ name: \"Coin Magic\" }),\n        new TreeNode({ name: \"Band Magic\" }),\n      ],\n    });\n    const hobbies = new TreeNode({\n      name: \"Hobbies\",\n      children: [\n        new TreeNode({ name: \"Biking\" }),\n        new TreeNode({ name: \"Tech\" }),\n        new TreeNode({ name: \"Juggling\" }),\n      ],\n    });\n    const relationships = new TreeNode({\n      name: \"Relationships\",\n      children: [\n        new TreeNode({ name: \"Zach\" }),\n        new TreeNode({ name: \"Amelia\" }),\n        new TreeNode({ name: \"Tori\" }),\n        new TreeNode({ name: \"Friends\" }),\n      ],\n    });\n    const joy = new TreeNode({\n      name: \"Joy\",\n      children: [\n        new TreeNode({ name: \"Balloons\" }),\n        new TreeNode({ name: \"Joy to Others\" }),\n      ],\n    });\n\n    return new TreeNode({\n      name: \"Invest in\",\n      children: [health, magic, hobbies, relationships, joy],\n    });\n  }\n}\n\n// TODO: De-Dup from blogger_import.ts\n\nfunction makePostPreviewHTML({ url, title, description }) {\n  // TODO: HACK: Strip to the right of Week number\n  const title_href = `<a href='${url}'}>${title}</a>`;\n  // random id for audio player\n  const id = \"audio_player_\" + Math.floor(Math.random() * 10000000000);\n  // filename is URL with '/' turned to '_'\n  const filename = url.replace(/\\//g, \"_\");\n  // console.log(post)\n  return `\n    <div>\n        <audio id='${id}'>\n          <source src=\"https://github.com/idvorkin/blob/raw/master/url_info_voices/igor/${filename}.mp3\" type=\"audio/mp3\">\n        </audio>\n      ${title_href}:  <b><a class='lead' onclick=\"toggle_play_pause('${id}')\">🔈</a></b> ${description}\n    </div>\n  `;\n}\n\nasync function make_random_post_html() {\n  const all_url_info = await get_link_info();\n  //  Yuk, find a clearere way to do this\n  const all_pages = Object.entries(all_url_info) // returns a list of [url, info]\n    .map(e => e[1]);\n  const random_post = random_from_list(all_pages);\n  return makePostPreviewHTML({\n    url: random_post[\"url\"],\n    title: random_post[\"title\"],\n    description: random_post[\"description\"],\n  });\n}\n\nfunction load_random_eulogy() {\n  add_eulogy_roles(\"#e1\");\n  add_eulogy_roles(\"#e2\");\n  add_eulogy_roles(\"#e3\");\n}\n\nfunction load_enjoy2() {\n  add_sunburst(\"sunburst\", \"sunburst_text\", new ThingsIEnjoy().get_tree());\n  add_random_prompts();\n  add_imported_blog_posts(); // has a random achievement post\n  add_eulogy_roles(\"#random-eulogy-role\");\n  append_randomizer_div(\"#random-blog-posts\", make_random_post_html as any);\n}\nfunction load_7_habits() {\n  add_sunburst(\"sunburst\", \"sunburst_text\", new SevenHabits().get_tree());\n  add_random_prompts();\n}\nfunction load_ig66() {\n  add_imported_blog_posts();\n}\nfunction load_balance() {\n  make_balance_chart_by_desired_time_rest(\"balance-heatmap-rest\");\n  make_balance_chart_by_work(\"balance-heatmap-work\");\n  make_radar_map(\"balance-radar-map-ideal\");\n}\nconst UT = {\n  SevenHabits,\n  ThingsIEnjoy,\n};\n\nconst months = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\nasync function make_radar_map(div) {\n  const data = [\n    {\n      type: \"scatterpolar\",\n      r: [8, 8, 8, 5, 8, 8, 8],\n      theta: [\n        \"Work\",\n        \"Tech\",\n        \"Health\",\n        \"Hobbies\",\n        \"Relationships\",\n        \"Magic\",\n        \"Work\",\n      ],\n      name: \"2020 Goal\",\n      fill: \"toself\",\n    },\n    {\n      type: \"scatterpolar\",\n      r: [7, 7, 5, 5, 5, 9, 7],\n      theta: [\n        \"Work\",\n        \"Tech\",\n        \"Health\",\n        \"Hobbies\",\n        \"Relationships\",\n        \"Magic\",\n        \"Work\",\n      ],\n      name: \"2020 Actual\",\n      fill: \"toself\",\n    },\n  ];\n\n  const layout = {\n    polar: {\n      radialaxis: {\n        visible: true,\n        range: [0, 10],\n      },\n    },\n    showlegend: true,\n  };\n  const config = {\n    displayModeBar: false,\n  };\n\n  Plotly.newPlot(div, data as any, layout, config);\n}\n\nconst row_height = 20;\nconst heatmap_base = 100;\nconst ideal_color = \"#00BF00\";\nasync function make_balance_chart_by_work(div) {\n  const roles = [\"Tech\", \"Work\"];\n  const layout = {\n    height: row_height * roles.length + heatmap_base,\n    margin: {\n      t: 5,\n    },\n    pad: 0,\n  };\n  const color_scale = [\n    [0.0, \"darkblue\"],\n    [0.4, \"blue\"],\n    [0.5, ideal_color],\n    [0.6, \"darkred\"],\n    [1.0, \"red\"],\n  ];\n  const gap_desire_over_time = [\n    [7, 4, 7, 8, 2, 4, 2, 3, 2, 8], //  Tech\n    [10, 7, 5, 5, 3, 5, 6, 6, 7, 5], //  Work\n  ];\n\n  const data = [\n    {\n      colorscale: color_scale,\n      zmin: 0,\n      zmax: 10,\n      x: months.slice(2, 13),\n      y: roles,\n      z: gap_desire_over_time,\n      type: \"heatmap\",\n    },\n  ];\n  const config = {\n    displayModeBar: false,\n  };\n\n  await (Plotly as any).newPlot(div, data, layout, config);\n}\n\n// Could be over or under\n// GREEN be Good,\n// RED be Bad\nasync function make_balance_chart_by_desired_time_rest(div) {\n  const roles = [\"Health\", \"Hobbies\", \"Family\", \"Magic\"];\n  const gap_desire_over_time = [\n    // J, F, M, A, M, J, J, A, S, O, N, D\n    [4, 4, 3, 4, 5, 3, 2, 2, 3, 2], // Health\n    [4, 4, 3, 4, 5, 4, 4, 2, 4, 5], // Hobbies\n    [2, 3, 3, 4, 1, 5, 4, 3, 2, 4], // Family\n    [5, 5, 5, 4, 5, 5, 4, 5, 4, 5], //  Magic\n  ];\n\n  const color_scale = [\n    [0.0, \"red\"],\n    [0.4, \"darkred\"],\n    [0.5, ideal_color],\n    [0.6, \"blue\"],\n    [1.0, \"darkblue\"],\n  ];\n  const data = [\n    {\n      colorscale: color_scale,\n      zmin: 0,\n      zmax: 10,\n      x: months.slice(2, 13),\n      y: roles.reverse(),\n      z: gap_desire_over_time.reverse(),\n      type: \"heatmap\",\n    },\n  ];\n  const config = {\n    displayModeBar: false,\n  };\n  const layout = {\n    height: row_height * roles.length + heatmap_base,\n    margin: {\n      t: 5,\n    },\n    pad: 0,\n  };\n\n  await (Plotly as any).newPlot(div, data, layout, config);\n}\n\nexport {\n  UT,\n  load_enjoy2,\n  load_7_habits,\n  makePostPreviewHTML,\n  load_ig66,\n  load_balance,\n  load_random_eulogy,\n};\n","import { random_from_list, append_randomizer_div } from \"./index\";\nfunction html_for_blogpost(post) {\n  const item = $(\"<div/>\");\n  // TODO: HACK: Strip to the right of Week number\n  const title_href = `<h4> <a href='${post.url}'}>${post.title}</a></h4>`;\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  item.append(title_href);\n  // HACK: Upsize to larger thumbnail, seems like blogger auto resizes to include a 320 image as well.\n  const thumbnail_url = post.thumbnail.replace(\"s72-c\", \"s320\");\n\n  const published_date = new Date(post.published);\n  const excerptDisplayText = `\n    <div> ${\n      monthNames[published_date.getMonth()]\n    } ${published_date.getFullYear()} - ${post.excerpt}\n    </div>\n   `;\n  if (post.thumbnail != \"\") {\n    console.log(post.title);\n    console.log(published_date);\n    item.append(\n      // `<div> <a href='${post.url}'}><img src='${thumbnail_url}'/></div>`\n      `\n      <div style='overflow:auto'>\n\n      <a href='${post.url}'}><img class=\"img-fluid\" style='float:left; margin-right:10px' src='${thumbnail_url}'/></a>\n      ${excerptDisplayText}\n      </div>`\n    );\n  } else {\n    item.append(excerptDisplayText);\n  }\n  const ret = item.html();\n  return ret;\n}\n\nfunction get_achievement_posts(imported_posts: Array<any>) {\n  return imported_posts.filter(post =>\n    post.title.toLowerCase().includes(\"achievement\")\n  );\n}\nfunction get_recent_posts(imported_posts: Array<any>) {\n  return imported_posts.filter(post => post.tags.includes(\"family-journal\"));\n}\n\nfunction ProcessImports(posts: Array<any>) {\n  console.log(\"Processing\", posts.length, \"posts\");\n  if (!posts) {\n    console.log(`No posts being imported`);\n    return;\n  }\n\n  //\n  // Import all history\n  const random_div = \"#random-post\";\n  const achievement_div = \"#achievment\";\n  const random_recent = \"#random-recent\";\n\n  append_randomizer_div(random_div, () =>\n    html_for_blogpost(random_from_list(posts))\n  );\n\n  // Add a random achievement post\n  append_randomizer_div(achievement_div, () =>\n    html_for_blogpost(random_from_list(get_achievement_posts(posts)))\n  );\n  append_randomizer_div(random_recent, () =>\n    html_for_blogpost(random_from_list(get_recent_posts(posts)))\n  );\n}\n\nfunction add_imported_blog_posts() {\n  const imported_posts_url = \"/ig66/ig66-export.json\";\n  $.getJSON(imported_posts_url, ProcessImports);\n}\n//\n// Todo put in own file\ninterface Role {\n  title: string;\n  summary: string;\n  full_text: string;\n}\n\ninterface Roles {\n  roles: Role[];\n}\n\nfunction html_for_role(role: Role) {\n  // url encode the role title\n  const role_file_name = role.title.replace(/ /g, \"%20\");\n  const voices = [\"igor\", \"ammon\"];\n  const random_voice = voices[Math.floor(Math.random() * voices.length)];\n  // Yucky - toggle_play_pause is a global function in enjoy2.md - bleh,  so brittle\n  return `\n  <div>\n    <audio id=\"eulogy-player\">\n      <source src=\"https://github.com/idvorkin/blob/raw/master/read_eulogy/${random_voice}/${role_file_name}.mp3\" type=\"audio/mp3\">\n    </audio>\n  <b>${role.title} <a class='lead' onclick=\"toggle_play_pause('eulogy-player')\">🔈</a></b> - ${role.summary}\n  </div>\n  `;\n}\n\nfunction ProcessEulogy(div: string, roles: Roles) {\n  if (!roles) {\n    console.log(`No roles being imported`);\n    return;\n  }\n  console.log(\"Processing\", roles.roles.length, \"roles\");\n\n  // Import all history\n  append_randomizer_div(div, () =>\n    html_for_role(random_from_list(roles.roles))\n  );\n}\n\nfunction add_eulogy_roles(div: string) {\n  const imported_posts_url = \"/eulogy.json\";\n  $.getJSON(imported_posts_url, (roles: Roles) => ProcessEulogy(div, roles));\n}\n\nexport { add_imported_blog_posts, add_eulogy_roles, html_for_role };\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$9FOw8","$jkv39","console","log","window","location","pathname","includes","hash","substr","$3f9e20f190ef602c$var$pages","$3f9e20f190ef602c$var$initial_expanded_url","$3f9e20f190ef602c$var$loadPages","linkInfo","get_link_info","values","map","p","url","expanded","slug","href","split","forEach","$3f9e20f190ef602c$var$initializeGraphWhenReady","ForceGraph","error","script","document","createElement","src","onload","$3f9e20f190ef602c$var$initializeGraphWithLib","head","appendChild","$3f9e20f190ef602c$var$is_valid_url","$3f9e20f190ef602c$var$node_for_url","pages","filter","$3f9e20f190ef602c$var$build_graph_data","visible_pages","page","visible_links","$3f9e20f190ef602c$var$build_links","links","outgoing_links","concat","incoming_links","target","push","source","value","newly_visible_pages","l","nodes","$3f9e20f190ef602c$var$TextLabelNodeCanvas","node","ctx","globalScale","outgoingCount","length","expandedText","label","fontSize","font","bckgDimensions","measureText","width","fillStyle","fillRect","x","y","textAlign","textBaseline","color","fillText","__bckgDimensions","$3f9e20f190ef602c$var$TextLabelNodePointerAreaPaint","$3f9e20f190ef602c$var$initializeGraph","graphElement","getElementById","loadingElement","style","display","Graph","graphData","nodeLabel","nodeAutoColorBy","nodeCanvasObject","nodePointerAreaPaint","onNodeRightClick","open","onNodeClick","expanded_nodes","setTimeout","center_on_node","centerAt","zoom","update_detail","g_last_detail_node","html","MakeBackLinkHTML","detail","innerHTML","open_goto_control","collapse_all_except_active","$","ready","on","addEventListener","readyState","random_from_list","shuffle","append_randomizer_div","load_globals","CreateAutoComplete","initRecentAllPosts","add_random_prompts","add_sunburst","TreeNode","load_enjoy2","load_7_habits","makePostPreviewHTML","load_ig66","load_balance","load_random_eulogy","defer","focusSearch","searchInput","focus","Mousetrap","bind","tocElement","searchElement","items","then","keys","$5c367f1c83ef0920$export$f6f0b6976f5f23e5","list","Math","floor","random","$5c367f1c83ef0920$export$448332262467e042","array","currentIndex","randomIndex","$5c367f1c83ef0920$export$7691c4557333f2d2","parent_id","random_html_factory","$parent","new_element","empty","append","click","event","tagName","$5c367f1c83ef0920$export$46c928bda6aa7b36","$5c367f1c83ef0920$var$cached_link_info","isProd","current_url","backlinks_url","response","fetch","data","json","url_info","$417ebc8475d6fc5d$export$fc303307c4ed1d41","$417ebc8475d6fc5d$export$38653e1d7f0b5689","$2fm61","$67yMS","$417ebc8475d6fc5d$var$tocExpand","$417ebc8475d6fc5d$var$checkExpandToggle","toc","toggle","addClass","text","removeClass","$417ebc8475d6fc5d$var$ForceShowRightSideBar","mainContent","tocDropUp","$417ebc8475d6fc5d$var$generateToc","showPinToc","Toc","level","top","class","ulClass","targetId","tocMenu","backToTop","gotoBottom","forceSideBar","preventDefault","stopPropagation","scrollTo","body","scrollHeight","title_href","title","description","$417ebc8475d6fc5d$export$ce1ac25e84725475","allUrls","validLinks","link","sort","a","b","Number","doc_size","$417ebc8475d6fc5d$var$AddLinksToPage","currentURL","URL","jQueryElement","page_path","backlinks","frontlinks","link_parent_location","incoming_location","find","outgoing_location","graph_location","$417ebc8475d6fc5d$export$934ccb756bec6a91","pagePath","strippedPagePath","replace","$417ebc8475d6fc5d$var$make_html_summary_link_error","attr","$417ebc8475d6fc5d$var$add_link_loader","backLinks","$417ebc8475d6fc5d$var$get_back_links","summary_links","makeArray","raw_link","ref","undefined","redirects","$417ebc8475d6fc5d$var$make_html_summary_link","attribution","$417ebc8475d6fc5d$var$cached_back_links","getJSON","$417ebc8475d6fc5d$var$keyboard_shortcut_loader","mouseTrap","$417ebc8475d6fc5d$var$SwapProdAndTest","prodPrefix","testPrefix","newURL","shortcutHelp","alert","$417ebc8475d6fc5d$var$replaceListPlaceholdersInTables","$417ebc8475d6fc5d$var$replacePlaceholdersWithLists","listReplacements","entries","placeholderText","placeholderLink","first","listClone","clone","children","remove","replaceWith","$417ebc8475d6fc5d$var$buildListReplacementMap","replacements","each","_","firstListItem","firstElementChild","firstItemText","textContent","startsWith","isNaN","parseInt","substring","initRecentPosts","Promise","resolve","catch","$3900136bb96a6238$var$updateRecentPosts","recentPostsContainer","urlInfoMap","metadata","last_modified","realPages","trim","slice","sortedPages","Date","getTime","recentPages","warn","join","$3900136bb96a6238$export$95771618035e82ed","$75f29f91bc155aaa$export$559328b3f08f1a41","$75f29f91bc155aaa$var$updateRecentPosts","recentContainer","remainingPosts","groupedPages","date","monthYear","toLocaleString","month","getFullYear","formattedDate","toLocaleDateString","day","remainingGroupedPages","remainingHtml","toggleElement","contentElement","iconElement","querySelector","classList","add","$bd9399c7e2744abd$export$b960629124c745df","autocomplete","$bd9399c7e2744abd$var$autocomplete","getAlgoliaResults","$bd9399c7e2744abd$var$getAlgoliaResults","$bd9399c7e2744abd$var$AutoCompleteHitTemplate","item","dangerouslySetInnerHTML","__html","$bd9399c7e2744abd$var$InstantSearchHitTemplate","hit","anchor","highlighted","_highlightResult","content","$bd9399c7e2744abd$var$get_random_post","all_pages","random_post","$bd9399c7e2744abd$var$get_recent_posts","count","all_url_info","$bd9399c7e2744abd$var$GetRandomSearchResults","sourceId","getItems","sized_array","Array","all","getItemUrl","templates","header","$bd9399c7e2744abd$var$GetRecentSearchResults","appid","search_api_key","index_name","autocomplete_id","includeFamilyJournal","featuredCount","recentCount","randomCount","searchClient","algoliasearch","randomSearchResults","recentSearchResults","elementId","container","placeholder","getSources","query","isEmptySearch","featuredPosts","$bd9399c7e2744abd$var$GetAlgoliaResults","hitsPerPage","queries","indexName","filters","params","highlightPreTag","highlightPostTag","debug","openOnFocus","detachedMediaQuery","$6d425df71f5a07e7$export$2eba8ec3a333fdbb","$6d425df71f5a07e7$export$859810117f914263","$6d425df71f5a07e7$export$722c014d8e7c7fc6","constructor","name","map_category_to_prompts","$6d425df71f5a07e7$var$category_to_prompts","category","$6d425df71f5a07e7$var$render_prompt_for_category","prompts_for_category","after","starting_node","current_category","Map","next","prop","from","li","$6d425df71f5a07e7$var$breadth_first_walk","Q","current","parent","shift","child","$6d425df71f5a07e7$var$category_to_prompts_text","k","_index","$6d425df71f5a07e7$var$random_prompt_for_label","tree_node","map_node_to_prompts","clicked_node","_parent","all_prompts","has","prompt","flat","plot_element_id","random_text_div_id","root","sunburst_tree_flat","$6d425df71f5a07e7$var$tree_to_plotly_data_format","names_parent_names","ids","labels","parents","sunburst_data","type","outsidetextfont","size","hoverinfo","marker","line","maxdepth","displayModeBar","assign","sunburstPlot","Plotly","newPlot","margin","r","t","sunburstcolorway","set_random_prompt_text","points","$9f283bd0ad425971$export$2a7b436ba2130b9d","$9f283bd0ad425971$export$a05fecdd139cc0d6","$9f283bd0ad425971$export$ed4ccdb0ea359d16","$9f283bd0ad425971$export$690b8256aeac9ddf","$9f283bd0ad425971$export$5971d3574f6a5694","$9f283bd0ad425971$export$be5467d8e644e939","$ccYjL","$7Ztr4","$9f283bd0ad425971$var$SevenHabits","get_tree","$9f283bd0ad425971$var$ThingsIEnjoy","health","magic","hobbies","relationships","joy","filename","$9f283bd0ad425971$var$make_random_post_html","add_eulogy_roles","add_imported_blog_posts","$9f283bd0ad425971$var$make_balance_chart_by_desired_time_rest","$9f283bd0ad425971$var$make_balance_chart_by_work","$9f283bd0ad425971$var$make_radar_map","$9f283bd0ad425971$var$months","div","theta","fill","polar","radialaxis","visible","range","showlegend","$9f283bd0ad425971$var$ideal_color","roles","layout","height","$9f283bd0ad425971$var$row_height","pad","colorscale","zmin","zmax","z","reverse","gap_desire_over_time","$92ca6dc26425dcae$export$42081a69ee292945","$92ca6dc26425dcae$export$13004ff06099531d","$92ca6dc26425dcae$var$html_for_blogpost","post","thumbnail_url","thumbnail","published_date","published","excerptDisplayText","monthNames","getMonth","excerpt","$92ca6dc26425dcae$var$ProcessImports","posts","imported_posts","toLowerCase","tags","$92ca6dc26425dcae$var$ProcessEulogy","$92ca6dc26425dcae$export$d5d79470c0eabcc3","role","role_file_name","voices","random_voice","summary"],"version":3,"file":"index.js.map"}