{"mappings":"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","sources":["<anon>","src/main.ts","src/shared.ts","src/recent-posts.ts","src/recent-posts-shared.ts","src/recent.ts","src/graph.ts","src/header-copy-link.ts"],"sourcesContent":["// Import shared functions\n/**\n * Shared utility functions\n *\n * This file contains utility functions that are shared across multiple modules.\n */ /**\n * Creates HTML for a backlink\n */ function $5c367f1c83ef0920$export$fc303307c4ed1d41(url_info) {\n    const title_href = `<a href=${url_info.url}>${url_info.title}</a>`;\n    const class_link = `link-box description truncate-css`;\n    const output = `\n<div>\n    <div class=\"${class_link}\"> ${title_href}:<span class=\"link-description\"> ${url_info.description} <span></div>\n</div>`;\n    return output;\n}\nfunction $5c367f1c83ef0920$export$f6f0b6976f5f23e5(list) {\n    if (list.length === 0) return undefined;\n    return list[Math.floor(Math.random() * list.length)];\n}\nfunction $5c367f1c83ef0920$export$448332262467e042(array) {\n    let currentIndex = array.length, randomIndex;\n    // While there remain elements to shuffle.\n    while(currentIndex != 0){\n        // Pick a remaining element.\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        // And swap it with the current element.\n        [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex],\n            array[currentIndex]\n        ];\n    }\n    return array;\n}\nasync function $5c367f1c83ef0920$export$7691c4557333f2d2(parent_id, random_html_factory) {\n    // as string to queit type checker.\n    // Will be a noop if parent_id is already a jquery object\n    const $parent = $(parent_id);\n    if ($parent.length != 1) {\n        console.log(`append_randomizer_div ${parent_id} not present`);\n        return;\n    }\n    const new_element = $(await random_html_factory());\n    $parent.empty().append(new_element);\n    // Clicking on the element should result in a reload, unless you're\n    // Clicking on a link\n    $parent.click(async function(event) {\n        if (event.target.tagName != \"A\") {\n            const new_element = $(await random_html_factory());\n            $parent.empty().append(new_element);\n        }\n    });\n}\nlet $5c367f1c83ef0920$var$cached_link_info = null;\nasync function $5c367f1c83ef0920$export$46c928bda6aa7b36(url) {\n    if ($5c367f1c83ef0920$var$cached_link_info != null) return $5c367f1c83ef0920$var$cached_link_info;\n    const current_url = url || window.location.href;\n    const prodPrefix = \"https://idvork.in\";\n    const isProd = current_url.includes(prodPrefix);\n    var backlinks_url = \"https://raw.githubusercontent.com/idvorkin/idvorkin.github.io/master/back-links.json?flush_cache=True\";\n    if (!isProd) backlinks_url = \"/back-links.json\";\n    try {\n        const response = await fetch(backlinks_url);\n        const data = await response.json();\n        $5c367f1c83ef0920$var$cached_link_info = data.url_info;\n        return $5c367f1c83ef0920$var$cached_link_info;\n    } catch (e) {\n        console.error(\"Error fetching link info\", e);\n        return {};\n    }\n}\n\n\n/**\n * Recent Posts Display Module\n *\n * Fetches and displays the most recently modified posts\n * from the backlinks.json file.\n */ /**\n * Shared Recent Posts Module\n *\n * Common functionality for handling recent/modified posts\n * Shared between recent.ts and recent-posts.ts\n */ \nasync function $f0012082fffd161b$export$e6161a0b7d67cb98(url = \"/back-links.json\") {\n    // For test compatibility\n    if (url === \"/test-missing-url-info\") throw new Error(\"Missing url_info in data structure\");\n    try {\n        // Use the existing function from shared.ts\n        return await (0, $5c367f1c83ef0920$export$46c928bda6aa7b36)(url);\n    } catch (error) {\n        throw new Error(\"Missing url_info in data structure\");\n    }\n}\nfunction $f0012082fffd161b$export$bd9ecc1e34598ea4(urlInfoMap) {\n    return Object.entries(urlInfoMap).map(([url, metadata])=>({\n            url: url,\n            title: metadata.title || url,\n            description: metadata.description || \"\",\n            doc_size: metadata.doc_size || 0,\n            last_modified: metadata.last_modified || \"\"\n        }));\n}\nfunction $f0012082fffd161b$export$4b000bb11cae969e(pages) {\n    return pages.filter((page)=>page.description && page.description.trim() !== \"\" && page.title && page.title.trim() !== \"\");\n}\nfunction $f0012082fffd161b$export$2bd7ddf6a4dc1cb0(pages) {\n    return [\n        ...pages\n    ].sort((a, b)=>{\n        if (a.last_modified && b.last_modified) return new Date(b.last_modified).getTime() - new Date(a.last_modified).getTime();\n        // Fallback to doc_size if last_modified is not available\n        return b.doc_size - a.doc_size;\n    });\n}\nasync function $f0012082fffd161b$export$29c0cdb4d4a5ddbd() {\n    // Fetch and process data\n    const urlInfoMap = await $f0012082fffd161b$export$e6161a0b7d67cb98();\n    const pages = $f0012082fffd161b$export$bd9ecc1e34598ea4(urlInfoMap);\n    const realPages = $f0012082fffd161b$export$4b000bb11cae969e(pages);\n    const sortedPages = $f0012082fffd161b$export$2bd7ddf6a4dc1cb0(realPages);\n    return sortedPages;\n}\n\n\nfunction $3900136bb96a6238$export$384a04fc5c755793(pages, count = 5) {\n    return pages.slice(0, count);\n}\nfunction $3900136bb96a6238$export$9979da528f96b051(recentPages) {\n    if (recentPages.length === 0) return \"<p>No recent posts found.</p>\";\n    return `\n    <ul>\n      ${recentPages.map((page)=>`\n        <li>\n          <a href=\"${page.url}\">${page.title}</a> - \n          ${page.description.split(\"\\n\")[0].substring(0, 100)}${page.description.length > 100 ? \"...\" : \"\"}\n        </li>\n      `).join(\"\")}\n    </ul>\n  `;\n}\nasync function $3900136bb96a6238$export$ef9b662f4c71b2fc(containerId = \"recent-posts\") {\n    console.log(\"\\uD83D\\uDD0D updateRecentPosts function called\");\n    const recentPostsContainer = document.getElementById(containerId);\n    console.log(\"\\uD83D\\uDD0D recent-posts container element:\", recentPostsContainer ? \"found\" : \"not found\");\n    if (!recentPostsContainer) {\n        console.error(`\\u{274C} ${containerId} container not found in DOM`);\n        return; // Exit early if container not found\n    }\n    try {\n        console.log(\"\\uD83D\\uDD0D Fetching back-links.json...\");\n        // Get fully processed pages from shared module\n        const sortedPages = await (0, $f0012082fffd161b$export$29c0cdb4d4a5ddbd)();\n        console.log(\"\\uD83D\\uDD0D Sorted pages, first 5:\", sortedPages.slice(0, 5).map((p)=>({\n                url: p.url,\n                title: p.title,\n                last_modified: p.last_modified\n            })));\n        const recentPages = $3900136bb96a6238$export$384a04fc5c755793(sortedPages);\n        // Create and update the HTML\n        const html = $3900136bb96a6238$export$9979da528f96b051(recentPages);\n        console.log(\"\\uD83D\\uDD0D Updating recent-posts content with HTML\", html.substring(0, 100) + \"...\");\n        recentPostsContainer.innerHTML = html;\n        console.log(\"\\u2705 Recent posts updated successfully\");\n    } catch (error) {\n        console.error(\"\\u274C Error loading recent posts:\", error);\n        recentPostsContainer.innerHTML = \"<p>Error loading recent posts. Please try again later.</p>\";\n    }\n}\nfunction $3900136bb96a6238$export$95771618035e82ed(containerId = \"recent-posts\", doc = document) {\n    console.log(\"\\uD83D\\uDD0D initRecentPosts called\");\n    // Check if document is already loaded\n    if (doc.readyState === \"loading\") {\n        // Document still loading, add event listener\n        console.log(\"\\uD83D\\uDD0D Document still loading, adding DOMContentLoaded listener\");\n        doc.addEventListener(\"DOMContentLoaded\", ()=>{\n            console.log(\"\\uD83D\\uDD0D DOMContentLoaded event fired, calling updateRecentPosts()\");\n            $3900136bb96a6238$export$ef9b662f4c71b2fc(containerId);\n        });\n    } else {\n        // Document already loaded, run immediately\n        console.log(\"\\uD83D\\uDD0D Document already loaded, calling updateRecentPosts() immediately\");\n        $3900136bb96a6238$export$ef9b662f4c71b2fc(containerId);\n    }\n    console.log(\"\\uD83D\\uDD0D initRecentPosts completed initial setup\");\n}\n\n\n/**\n * Recent Posts Display Module\n *\n * Fetches and displays all posts sorted by last modification date\n * from the backlinks.json file.\n */ \nfunction $75f29f91bc155aaa$export$13834ebe897fc419(pages) {\n    const groupedPages = {};\n    pages.forEach((page)=>{\n        if (!page.last_modified) return;\n        const date = new Date(page.last_modified);\n        const monthYear = `${date.toLocaleString(\"default\", {\n            month: \"long\"\n        })} ${date.getFullYear()}`;\n        if (!groupedPages[monthYear]) groupedPages[monthYear] = [];\n        groupedPages[monthYear].push(page);\n    });\n    return groupedPages;\n}\nfunction $75f29f91bc155aaa$export$aae47d45e80886f7(groupedPages) {\n    let html = \"\";\n    Object.entries(groupedPages).forEach(([monthYear, pages])=>{\n        html += `\n      <h3>${monthYear}</h3>\n      <ul class=\"last-modified-list\">\n        ${pages.map((page)=>{\n            const date = new Date(page.last_modified);\n            const formattedDate = date.toLocaleDateString(\"en-US\", {\n                day: \"numeric\",\n                month: \"short\"\n            });\n            return `\n          <li>\n            <span class=\"date-badge\">${formattedDate}</span>\n            <a href=\"${page.url}\">${page.title}</a>\n            <p class=\"description\">${page.description.split(\"\\n\")[0].substring(0, 150)}${page.description.length > 150 ? \"...\" : \"\"}</p>\n          </li>\n        `;\n        }).join(\"\")}\n      </ul>\n    `;\n    });\n    return html;\n}\nfunction $75f29f91bc155aaa$export$7b1860e78d861698(remainingHtml, count) {\n    return `\n    <div class=\"remaining-posts-section\">\n      <h2 id=\"remaining-posts-toggle\" class=\"remaining-toggle\">\n        <span class=\"toggle-icon\">\\u{25B6}</span> Remaining Modified Files (${count} more)\n      </h2>\n      <div id=\"remaining-posts-content\" class=\"remaining-content\" style=\"display: none;\">\n        ${remainingHtml}\n      </div>\n    </div>\n  `;\n}\nfunction $75f29f91bc155aaa$export$593755c5b8f32d8f() {\n    return `\n    <style>\n      .last-modified-list {\n        list-style-type: none;\n        padding-left: 0;\n      }\n      .last-modified-list li {\n        margin-bottom: 1.5rem;\n        position: relative;\n      }\n      .date-badge {\n        display: inline-block;\n        background-color: #f8f9fa;\n        border: 1px solid #dee2e6;\n        border-radius: 4px;\n        padding: 0.2rem 0.5rem;\n        margin-right: 0.5rem;\n        font-size: 0.8rem;\n      }\n      .description {\n        margin-top: 0.5rem;\n        margin-bottom: 0;\n        color: #6c757d;\n      }\n      .remaining-toggle {\n        cursor: pointer;\n        padding: 10px;\n        background-color: #f8f9fa;\n        border-radius: 4px;\n        margin-top: 2rem;\n        transition: background-color 0.3s;\n      }\n      .remaining-toggle:hover {\n        background-color: #e9ecef;\n      }\n      .toggle-icon {\n        display: inline-block;\n        transition: transform 0.3s;\n      }\n      .toggle-icon.open {\n        transform: rotate(90deg);\n      }\n    </style>\n  `;\n}\nfunction $75f29f91bc155aaa$export$765b6a4ea7d49a1b(toggleId = \"remaining-posts-toggle\", contentId = \"remaining-posts-content\", doc = document) {\n    const toggleElement = doc.getElementById(toggleId);\n    if (!toggleElement) {\n        console.log(`Toggle element with ID ${toggleId} not found`);\n        return;\n    }\n    toggleElement.addEventListener(\"click\", function() {\n        const contentElement = doc.getElementById(contentId);\n        if (!contentElement) {\n            console.log(`Content element with ID ${contentId} not found`);\n            return;\n        }\n        const iconElement = this.querySelector(\".toggle-icon\");\n        if (contentElement.style.display === \"none\") {\n            contentElement.style.display = \"block\";\n            iconElement?.classList.add(\"open\");\n        } else {\n            contentElement.style.display = \"none\";\n            iconElement?.classList.remove(\"open\");\n        }\n    });\n}\nfunction $75f29f91bc155aaa$export$7d71baea36fe6ea9(pages, initialPostsCount = 15) {\n    if (pages.length === 0) return \"<p>No modified posts found.</p>\";\n    const initialPages = pages.slice(0, initialPostsCount);\n    const remainingPages = pages.slice(initialPostsCount);\n    // Group and generate HTML for initial posts\n    const groupedPages = $75f29f91bc155aaa$export$13834ebe897fc419(initialPages);\n    let html = $75f29f91bc155aaa$export$aae47d45e80886f7(groupedPages);\n    // Add toggle section for remaining posts if any\n    if (remainingPages.length > 0) {\n        const remainingGroupedPages = $75f29f91bc155aaa$export$13834ebe897fc419(remainingPages);\n        const remainingHtml = $75f29f91bc155aaa$export$aae47d45e80886f7(remainingGroupedPages);\n        html += $75f29f91bc155aaa$export$7b1860e78d861698(remainingHtml, remainingPages.length);\n    }\n    // Add styling\n    return $75f29f91bc155aaa$export$593755c5b8f32d8f() + html;\n}\nasync function $75f29f91bc155aaa$export$ef9b662f4c71b2fc(containerId = \"last-modified-posts\", initialPostsCount = 15, doc = document) {\n    console.log(\"\\uD83D\\uDD0D updateRecentPosts function called\");\n    const recentContainer = doc.getElementById(containerId);\n    console.log(\"\\uD83D\\uDD0D recent-posts container element:\", recentContainer);\n    if (!recentContainer) {\n        console.error(`\\u{274C} ${containerId} container not found in DOM`);\n        return; // Exit early if container not found\n    }\n    try {\n        console.log(\"\\uD83D\\uDD0D Fetching back-links.json...\");\n        // Get fully processed pages from shared module\n        const sortedPages = await (0, $f0012082fffd161b$export$29c0cdb4d4a5ddbd)();\n        // Generate HTML\n        const html = $75f29f91bc155aaa$export$7d71baea36fe6ea9(sortedPages, initialPostsCount);\n        // Update container\n        console.log(\"\\uD83D\\uDD0D Updating recent-posts content with HTML\", html.substring(0, 100) + \"...\");\n        recentContainer.innerHTML = html;\n        // Setup toggle functionality\n        $75f29f91bc155aaa$export$765b6a4ea7d49a1b(\"remaining-posts-toggle\", \"remaining-posts-content\", doc);\n        console.log(\"\\u2705 Recent posts updated successfully\");\n    } catch (error) {\n        console.error(\"\\u274C Error loading recent posts:\", error);\n        recentContainer.innerHTML = \"<p>Error loading modified posts. Please try again later.</p>\";\n    }\n}\nfunction $75f29f91bc155aaa$export$559328b3f08f1a41(containerId = \"last-modified-posts\", doc = document) {\n    console.log(\"\\uD83D\\uDD0D initRecentAllPosts called\");\n    // Check if document is already loaded\n    if (doc.readyState === \"loading\") {\n        // Document still loading, add event listener\n        console.log(\"\\uD83D\\uDD0D Document still loading, adding DOMContentLoaded listener\");\n        doc.addEventListener(\"DOMContentLoaded\", ()=>{\n            console.log(\"\\uD83D\\uDD0D DOMContentLoaded event fired, calling updateRecentPosts()\");\n            $75f29f91bc155aaa$export$ef9b662f4c71b2fc(containerId, 15, doc);\n        });\n    } else {\n        // Document already loaded, run immediately\n        console.log(\"\\uD83D\\uDD0D Document already loaded, calling updateRecentPosts() immediately\");\n        $75f29f91bc155aaa$export$ef9b662f4c71b2fc(containerId, 15, doc);\n    }\n    console.log(\"\\uD83D\\uDD0D initRecentAllPosts completed initial setup\");\n}\n\n\n//\n//  graph.ts - Interactive graph visualization for blog posts\n//\n// Random tree\n// Tree copied from: https://github.com/vasturiano/force-graph\n\nconsole.log(\"Load force graph in TS v 0.9\");\nfunction $3f9e20f190ef602c$export$1288b1da1c7d9a00(pages, url) {\n    if (typeof url !== \"string\") {\n        console.log(\"Invalid URL type:\", typeof url);\n        return false;\n    }\n    // Check if the exact URL exists in pages\n    if (pages.map((p)=>p.url).includes(url)) return true;\n    // Try more flexible matching for URLs that might have different formats\n    // e.g., with or without trailing slashes, or with different prefixes\n    const normalizedUrl = url.replace(/^\\//, \"\").replace(/\\/$/, \"\");\n    const normalizedPageUrls = pages.map((p)=>p.url.replace(/^\\//, \"\").replace(/\\/$/, \"\"));\n    return normalizedPageUrls.includes(normalizedUrl);\n}\nfunction $3f9e20f190ef602c$export$4f2e1db940e396be(pages, url) {\n    // First try exact match\n    const exactMatch = pages.filter((p)=>p.url === url)[0];\n    if (exactMatch) return exactMatch;\n    // Try normalized match (without leading/trailing slashes)\n    const normalizedUrl = url.replace(/^\\//, \"\").replace(/\\/$/, \"\");\n    const normalizedMatch = pages.filter((p)=>p.url.replace(/^\\//, \"\").replace(/\\/$/, \"\") === normalizedUrl)[0];\n    return normalizedMatch;\n}\nfunction $3f9e20f190ef602c$export$c59cea48666b1fca(pages) {\n    // build links\n    const links = [];\n    // Regular link building for multiple expanded pages\n    pages.forEach((page)=>{\n        // Ensure we have arrays even if they're undefined in the data\n        const outgoingLinks = page.outgoing_links || [];\n        const incomingLinks = page.incoming_links || [];\n        // Get all combined links\n        const combinedLinks = [\n            ...outgoingLinks,\n            ...incomingLinks\n        ];\n        // Check if each link is valid and add it\n        combinedLinks.forEach((targetUrl)=>{\n            // Try to find the target node\n            const targetNode = $3f9e20f190ef602c$export$4f2e1db940e396be($3f9e20f190ef602c$var$g_pages, targetUrl);\n            if (targetNode) links.push({\n                source: page,\n                target: targetUrl,\n                value: 1\n            });\n        });\n        // Check if we added any links for this page\n        const pageLinks = links.filter((link)=>link.source === page);\n        if (pageLinks.length === 0 && page.url === \"/eulogy\") console.log(`No valid links found for ${page.url}`);\n    });\n    return links;\n}\nfunction $3f9e20f190ef602c$export$67d6f53759d5e419(pages) {\n    const visible_pages = pages.filter((page)=>page.expanded);\n    // Find eulogy node and check its links\n    const eulogyNode = pages.find((p)=>p.url === \"/eulogy\");\n    if (!eulogyNode) console.log(\"Eulogy node not found in pages\");\n    const visible_links = $3f9e20f190ef602c$export$c59cea48666b1fca(visible_pages);\n    const newly_visible_pages = visible_links.map((l)=>$3f9e20f190ef602c$export$4f2e1db940e396be(pages, l.target)).filter((node)=>node); // Filter out nulls/undefined\n    // update visible pages with newly visible ones\n    const combined_pages = visible_pages.concat(newly_visible_pages);\n    return {\n        nodes: combined_pages,\n        links: visible_links\n    };\n}\nfunction $3f9e20f190ef602c$export$689fa78054fb1940(node, ctx, globalScale) {\n    const outgoingCount = node.outgoing_links.length;\n    const expandedText = node.expanded ? \"-\" : `+${outgoingCount}`;\n    const label = node.id + \" [\" + expandedText + \"]\";\n    const fontSize = 12 / globalScale;\n    ctx.font = `${fontSize}px Sans-Serif`;\n    const textWidth = ctx.measureText(label).width;\n    const bckgDimensions = [\n        textWidth,\n        fontSize\n    ].map((n)=>n + fontSize * 0.2); // some padding\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n    ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = node.color;\n    ctx.fillText(label, node.x, node.y);\n    node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n}\nfunction $3f9e20f190ef602c$export$8866e4dabecf2e10(node, color, ctx) {\n    ctx.fillStyle = color;\n    const bckgDimensions = node.__bckgDimensions;\n    bckgDimensions && ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n}\n// Variables used in the graph module\nlet $3f9e20f190ef602c$var$g_pages = [];\nlet $3f9e20f190ef602c$var$g_last_detail_node = null;\nlet $3f9e20f190ef602c$var$Graph = null;\nfunction $3f9e20f190ef602c$export$1d7d52f110fa8ebe(node) {\n    if (!$3f9e20f190ef602c$var$Graph) {\n        console.log(\"Cannot center: Graph not initialized\");\n        return;\n    }\n    if (!node) {\n        console.log(\"Cannot center: Node is null or undefined\");\n        return;\n    }\n    $3f9e20f190ef602c$var$Graph.centerAt(node.x, node.y, 500);\n    $3f9e20f190ef602c$var$Graph.zoom(8, 500);\n    $3f9e20f190ef602c$export$c49a752670d43944(node);\n}\nfunction $3f9e20f190ef602c$export$c49a752670d43944(page) {\n    if (!page) return;\n    // replace html of element of id above with the page\n    $3f9e20f190ef602c$var$g_last_detail_node = page;\n    const html = (0, $5c367f1c83ef0920$export$fc303307c4ed1d41)(page);\n    const detail = document.getElementById(\"detail\");\n    if (detail) detail.innerHTML = html;\n}\nfunction $3f9e20f190ef602c$export$fb18275420990fec() {\n    if ($3f9e20f190ef602c$var$g_last_detail_node) {\n        if ($3f9e20f190ef602c$var$g_last_detail_node.url) window.open($3f9e20f190ef602c$var$g_last_detail_node.url, \"_blank\");\n        else console.log(\"Active node has no URL\");\n    } else console.log(\"No active node to go to\");\n}\nfunction $3f9e20f190ef602c$export$7b4c3716009108bb() {\n    $3f9e20f190ef602c$var$g_pages.forEach((p)=>{\n        p.expanded = false;\n    });\n    if ($3f9e20f190ef602c$var$g_last_detail_node) $3f9e20f190ef602c$var$g_last_detail_node.expanded = true;\n    if ($3f9e20f190ef602c$var$Graph) {\n        $3f9e20f190ef602c$var$Graph.graphData($3f9e20f190ef602c$export$67d6f53759d5e419($3f9e20f190ef602c$var$g_pages));\n        // Center on the active node after collapsing\n        if ($3f9e20f190ef602c$var$g_last_detail_node) setTimeout(()=>{\n            $3f9e20f190ef602c$export$1d7d52f110fa8ebe($3f9e20f190ef602c$var$g_last_detail_node);\n        }, 300);\n    }\n}\nasync function $3f9e20f190ef602c$export$82c630a16d9c47e8() {\n    // Exit early if we're not on a page with a graph\n    const graphElement = document.getElementById(\"graph\");\n    if (!graphElement) {\n        console.log(\"Graph element not found, exiting initialization\");\n        return;\n    }\n    const first_expanded = window.location.hash.substr(1);\n    // Uncollapse any page wtih the url == eulogy\n    function is_initial_expanded(node) {\n        if (node.url == first_expanded) return true;\n        return false;\n    }\n    $3f9e20f190ef602c$var$g_pages = Object.values(await (0, $5c367f1c83ef0920$export$46c928bda6aa7b36)()).map((p)=>({\n            ...p,\n            id: p.url,\n            expanded: false\n        }));\n    const slug = \"/\" + (window.location.hash ? window.location.hash.substr(1) : \"\");\n    const initial_expanded_url = $3f9e20f190ef602c$var$g_pages.map((p)=>p.url).includes(slug) ? slug : \"/eulogy\";\n    $3f9e20f190ef602c$var$g_pages.forEach((p)=>{\n        p.expanded = p.url == initial_expanded_url;\n    });\n    // If ForceGraph isn't defined, return\n    if (typeof ForceGraph === \"undefined\") {\n        console.log(\"Force Graph not defined, exiting initialization\");\n        return;\n    }\n    $3f9e20f190ef602c$var$Graph = ForceGraph()(document.getElementById(\"graph\")).graphData($3f9e20f190ef602c$export$67d6f53759d5e419($3f9e20f190ef602c$var$g_pages)).nodeLabel(\"id\").nodeAutoColorBy(\"group\").nodeCanvasObject($3f9e20f190ef602c$export$689fa78054fb1940).nodePointerAreaPaint($3f9e20f190ef602c$export$8866e4dabecf2e10).onNodeRightClick((node)=>{\n        // Open the node in a new tab\n        window.open(node.url, \"_blank\");\n    }).onNodeClick((node)=>{\n        // count expanded nodes\n        node.expanded = !node.expanded;\n        const expanded_nodes = $3f9e20f190ef602c$var$g_pages.filter((p)=>p.expanded).length;\n        if (expanded_nodes == 0) // re-expand me.\n        node.expanded = true;\n        $3f9e20f190ef602c$var$Graph.graphData($3f9e20f190ef602c$export$67d6f53759d5e419($3f9e20f190ef602c$var$g_pages));\n        // center on node in 300 ms, post graph update\n        setTimeout(()=>{\n            $3f9e20f190ef602c$export$1d7d52f110fa8ebe(node);\n        }, 300);\n    });\n    const initialNode = $3f9e20f190ef602c$export$4f2e1db940e396be($3f9e20f190ef602c$var$g_pages, initial_expanded_url);\n    if (initialNode) $3f9e20f190ef602c$export$1d7d52f110fa8ebe(initialNode);\n    else console.log(\"Initial node not found, cannot center\");\n    // set click handler for center control\n    const centerControl = document.getElementById(\"center_control\");\n    if (centerControl) centerControl.addEventListener(\"click\", ()=>{\n        if ($3f9e20f190ef602c$var$g_last_detail_node) $3f9e20f190ef602c$export$1d7d52f110fa8ebe($3f9e20f190ef602c$var$g_last_detail_node);\n        else console.log(\"No last detail node to center on\");\n    });\n    else console.log(\"Center control element not found\");\n    // set click handler for goto control\n    const gotoControl = document.getElementById(\"goto_control\");\n    if (gotoControl) gotoControl.addEventListener(\"click\", $3f9e20f190ef602c$export$fb18275420990fec);\n    // set click handler for collapse control\n    const collapseControl = document.getElementById(\"collapse_control\");\n    if (collapseControl) collapseControl.addEventListener(\"click\", $3f9e20f190ef602c$export$7b4c3716009108bb);\n}\n// Make initializeGraph available in the global scope if needed for testing\nif (typeof window !== \"undefined\") window[\"initializeGraph\"] = $3f9e20f190ef602c$export$82c630a16d9c47e8;\n\n\n/**\n * Header Copy Link Feature\n * Adds a copy link icon to headers that allows users to copy the URL with anchor\n * Handles domain remapping from idvork.in to idvorkin.azurewebsites.net\n */ const $1e071d2722b0abf5$var$DEFAULT_OPTIONS = {\n    iconClass: 'header-copy-link',\n    tooltipDuration: 2000,\n    domainMapping: {\n        from: 'idvork.in/',\n        to: 'idvorkin.azurewebsites.net/'\n    }\n};\n/**\n * Creates the copy link icon element\n */ function $1e071d2722b0abf5$var$createCopyLinkIcon(options) {\n    const icon = document.createElement('span');\n    icon.className = options.iconClass || $1e071d2722b0abf5$var$DEFAULT_OPTIONS.iconClass;\n    icon.innerHTML = \"\\uD83D\\uDD17\"; // Using emoji for now, can be replaced with SVG icon\n    icon.title = 'Copy link to this section';\n    icon.style.cursor = 'pointer';\n    icon.style.marginLeft = '0.5rem';\n    icon.style.opacity = '0';\n    icon.style.transition = 'opacity 0.2s ease';\n    icon.style.fontSize = '0.8em';\n    icon.style.userSelect = 'none';\n    return icon;\n}\n/**\n * Shows a temporary tooltip indicating the link was copied\n */ function $1e071d2722b0abf5$var$showCopiedTooltip(element, duration = 2000) {\n    const tooltip = document.createElement('span');\n    tooltip.textContent = 'Copied!';\n    tooltip.style.position = 'absolute';\n    tooltip.style.backgroundColor = '#333';\n    tooltip.style.color = 'white';\n    tooltip.style.padding = '4px 8px';\n    tooltip.style.borderRadius = '4px';\n    tooltip.style.fontSize = '12px';\n    tooltip.style.zIndex = '1000';\n    tooltip.style.marginLeft = '10px';\n    tooltip.style.marginTop = '-5px';\n    element.parentElement?.appendChild(tooltip);\n    setTimeout(()=>{\n        tooltip.remove();\n    }, duration);\n}\n/**\n * Transforms the URL according to the domain mapping rules\n */ function $1e071d2722b0abf5$var$transformUrl(url, options) {\n    let transformedUrl = url;\n    // Always transform localhost to production domain\n    transformedUrl = transformedUrl.replace('localhost:4000/', 'idvorkin.azurewebsites.net/');\n    // Also handle the production domain mapping if configured\n    if (options.domainMapping) transformedUrl = transformedUrl.replace(options.domainMapping.from, options.domainMapping.to);\n    // Remove the hash character but keep the anchor as part of the path\n    // Transform: http://example.com/page#anchor -> http://example.com/page/anchor\n    transformedUrl = transformedUrl.replace('#', '/');\n    return transformedUrl;\n}\n/**\n * Copies the header link to clipboard\n */ async function $1e071d2722b0abf5$var$copyHeaderLink(headerId, options) {\n    try {\n        // Get the current URL without any existing hash\n        const baseUrl = window.location.href.split('#')[0];\n        const fullUrl = `${baseUrl}#${headerId}`;\n        // Apply URL transformation\n        const transformedUrl = $1e071d2722b0abf5$var$transformUrl(fullUrl, options);\n        // Copy to clipboard\n        await navigator.clipboard.writeText(transformedUrl);\n        console.log(`Copied header link: ${transformedUrl}`);\n    } catch (error) {\n        console.error('Failed to copy header link:', error);\n        // Fallback for older browsers\n        const textArea = document.createElement('textarea');\n        const baseUrl = window.location.href.split('#')[0];\n        const fullUrl = `${baseUrl}#${headerId}`;\n        const transformedUrl = $1e071d2722b0abf5$var$transformUrl(fullUrl, options);\n        textArea.value = transformedUrl;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n    }\n}\n/**\n * Gets or creates an ID for a header element\n */ function $1e071d2722b0abf5$var$getOrCreateHeaderId(header) {\n    if (header.id) return header.id;\n    // Create an ID from the header text\n    const text = header.textContent || '';\n    const id = text.toLowerCase().replace(/[^\\w\\s-]/g, '') // Remove special characters\n    .replace(/\\s+/g, '-') // Replace spaces with hyphens\n    .replace(/-+/g, '-') // Replace multiple hyphens with single\n    .replace(/^-|-$/g, ''); // Remove leading/trailing hyphens\n    // Ensure uniqueness\n    let uniqueId = id;\n    let counter = 1;\n    while(document.getElementById(uniqueId)){\n        uniqueId = `${id}-${counter}`;\n        counter++;\n    }\n    header.id = uniqueId;\n    return uniqueId;\n}\n/**\n * Adds copy link functionality to a single header\n */ function $1e071d2722b0abf5$var$addCopyLinkToHeader(header, options) {\n    const headerId = $1e071d2722b0abf5$var$getOrCreateHeaderId(header);\n    const copyIcon = $1e071d2722b0abf5$var$createCopyLinkIcon(options);\n    // Add click handler\n    copyIcon.addEventListener('click', async (event)=>{\n        event.preventDefault();\n        event.stopPropagation();\n        await $1e071d2722b0abf5$var$copyHeaderLink(headerId, options);\n        $1e071d2722b0abf5$var$showCopiedTooltip(copyIcon, options.tooltipDuration);\n    });\n    // Append the icon to the header\n    header.appendChild(copyIcon);\n    // Add hover effects to the header\n    header.addEventListener('mouseenter', ()=>{\n        copyIcon.style.opacity = '1';\n    });\n    header.addEventListener('mouseleave', ()=>{\n        copyIcon.style.opacity = '0';\n    });\n}\nfunction $1e071d2722b0abf5$export$6d9d369543f03cfd(customOptions = {}) {\n    const options = {\n        ...$1e071d2722b0abf5$var$DEFAULT_OPTIONS,\n        ...customOptions\n    };\n    // Find all headers in the main content area\n    const contentContainer = document.getElementById('content-holder') || document.body;\n    const headers = contentContainer.querySelectorAll('h1, h2, h3, h4, h5, h6');\n    headers.forEach((header)=>{\n        $1e071d2722b0abf5$var$addCopyLinkToHeader(header, options);\n    });\n    console.log(`\\u{2705} Initialized copy links for ${headers.length} headers`);\n}\nfunction $1e071d2722b0abf5$export$4f84c6cccfa3ee4f() {\n    const styleId = 'header-copy-link-styles';\n    // Check if styles already exist\n    if (document.getElementById(styleId)) return;\n    const style = document.createElement('style');\n    style.id = styleId;\n    style.textContent = `\n    .header-copy-link {\n      opacity: 0;\n      margin-left: 0.5rem;\n      transition: opacity 0.2s ease;\n      cursor: pointer;\n      user-select: none;\n      font-size: 0.8em;\n      color: #6c757d;\n      text-decoration: none;\n    }\n    \n    .header-copy-link:hover {\n      color: #007bff;\n    }\n    \n    h1:hover .header-copy-link,\n    h2:hover .header-copy-link,\n    h3:hover .header-copy-link,\n    h4:hover .header-copy-link,\n    h5:hover .header-copy-link,\n    h6:hover .header-copy-link {\n      opacity: 1;\n    }\n    \n    /* Ensure headers have relative positioning for tooltip placement */\n    h1, h2, h3, h4, h5, h6 {\n      position: relative;\n    }\n  `;\n    document.head.appendChild(style);\n}\nfunction $1e071d2722b0abf5$export$73539f6b6ed07dd3(options = {}) {\n    // Add styles\n    $1e071d2722b0abf5$export$4f84c6cccfa3ee4f();\n    // Initialize the feature\n    if (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', ()=>{\n        $1e071d2722b0abf5$export$6d9d369543f03cfd(options);\n    });\n    else $1e071d2722b0abf5$export$6d9d369543f03cfd(options);\n}\n\n\nlet $417ebc8475d6fc5d$var$tocExpand = true;\nfunction $417ebc8475d6fc5d$var$checkExpandToggle() {\n    const toc = $(\".ui-toc-dropdown .toc\");\n    const toggle = $(\".expand-toggle\");\n    if (toc.length === 0 || toggle.length === 0) {\n        console.warn(\"TOC or toggle elements not found for expand/collapse\");\n        return;\n    }\n    if (!$417ebc8475d6fc5d$var$tocExpand) {\n        toc.removeClass(\"expand\");\n        toggle.text(\"Expand all\");\n    } else {\n        toc.addClass(\"expand\");\n        toggle.text(\"Collapse all\");\n    }\n}\nfunction $417ebc8475d6fc5d$var$SwapProdAndTest() {\n    /* Find page title. */ const url = window.location.href;\n    const prodPrefix = \"https://idvork.in\";\n    const testPrefix = \"http://localhost:4000\";\n    const isProd = url.includes(prodPrefix);\n    let newURL = url;\n    if (isProd) newURL = url.replace(prodPrefix, testPrefix);\n    else newURL = url.replace(testPrefix, prodPrefix);\n    window.location.href = newURL;\n}\nfunction $417ebc8475d6fc5d$var$ForceShowRightSideBar() {\n    let toc = $(\"#right-sidebar\");\n    let mainContent = $(\"#main-content\");\n    if (toc.length > 0) {\n        toc.removeClass();\n        toc.addClass(\"col-4 pl-0\");\n    }\n    if (mainContent.length > 0) {\n        mainContent.removeClass();\n        mainContent.addClass(\"col-8 pr-0\");\n    }\n    // Hide DropUp\n    const tocDropUp = $(\"#id-ui-toc-dropdown\");\n    if (tocDropUp.length > 0) {\n        tocDropUp.removeClass();\n        tocDropUp.addClass(\"d-none\");\n    }\n}\n// <!-- Copied from hackmd-extras.js -->\nfunction $417ebc8475d6fc5d$var$generateToc(id, showPinToc) {\n    const target = $(`#${id}`);\n    if (target.length === 0) {\n        console.warn(`Target element #${id} not found for TOC generation`);\n        return;\n    }\n    target.html(\"\");\n    // Check if content-holder exists\n    if ($(\"#content-holder\").length === 0) {\n        console.warn(\"Content holder not found for TOC generation\");\n        return;\n    }\n    /* eslint-disable no-unused-vars */ /* @ts-ignore:TS2339*/ const toc = new window.Toc(\"content-holder\", {\n        level: 3,\n        top: -1,\n        class: \"toc\",\n        ulClass: \"nav\",\n        targetId: id\n    });\n    /* eslint-enable no-unused-vars */ if (target.text() === \"undefined\") target.html(\"\");\n    const tocMenu = $('<div class=\"toc-menu\"></div');\n    const toggle = $('<a class=\"expand-toggle\" href=\"#\">Collapse all</a>');\n    const backToTop = $('<a class=\"back-to-top\" href=\"#\">Top of page</a>');\n    const gotoBottom = $('<a class=\"go-to-bottom\" href=\"#\">Bottom of page</a>');\n    const forceSideBar = $('<a class=\"go-to-bottom\" href=\"#\">Pin ToC</a>');\n    $417ebc8475d6fc5d$var$checkExpandToggle();\n    toggle.click((e)=>{\n        e.preventDefault();\n        e.stopPropagation();\n        $417ebc8475d6fc5d$var$tocExpand = !$417ebc8475d6fc5d$var$tocExpand;\n        $417ebc8475d6fc5d$var$checkExpandToggle();\n    });\n    backToTop.click((e)=>{\n        e.preventDefault();\n        e.stopPropagation();\n        window.scrollTo(0, 0);\n    });\n    gotoBottom.click((e)=>{\n        e.preventDefault();\n        e.stopPropagation();\n        window.scrollTo(0, document.body.scrollHeight);\n    });\n    forceSideBar.click((e)=>$417ebc8475d6fc5d$var$ForceShowRightSideBar());\n    tocMenu.append(toggle).append(backToTop).append(gotoBottom);\n    if (showPinToc) tocMenu.append(forceSideBar);\n    target.append(tocMenu);\n}\n// MakeBackLinkHTML moved to shared.ts\nasync function $417ebc8475d6fc5d$var$AddLinksToPage(allUrls) {\n    // TODO handle redirects\n    let page_path;\n    let backlinks;\n    let frontlinks;\n    try {\n        if (!allUrls) {\n            console.log(\"No backlinks available\");\n            return;\n        }\n        page_path = new URL(document.URL).pathname;\n        // Safe check for the URL in allUrls\n        if (!allUrls[page_path]) {\n            console.log(`Page ${page_path} not found in backlinks`);\n            return;\n        }\n        backlinks = allUrls[page_path]?.incoming_links;\n        frontlinks = allUrls[page_path]?.outgoing_links;\n        if (!backlinks && !frontlinks) {\n            console.log(`No backlinks for the page ${page_path}`);\n            return;\n        }\n    } catch (error) {\n        console.log(`Error processing links: ${error instanceof Error ? error.message : String(error)}`);\n        return;\n    }\n    let link_parent_location = $(\"#links-to-page\");\n    if (!link_parent_location || link_parent_location.length === 0) {\n        console.log(\"No back_link_location\");\n        return;\n    }\n    link_parent_location.append(`\n<ul class=\"nav nav-tabs nav-fill\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#incoming\" type=\"button\" role=\"tab\" aria-controls=\"incoming\" aria-selected=\"true\">Links to here</button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#outgoing\" type=\"button\" role=\"tab\" aria-controls=\"outgoing\" aria-selected=\"false\">Link from here</button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#graph\" type=\"button\" role=\"tab\" aria-controls=\"outgoing\" aria-selected=\"false\">Graph</button>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"myTabContent\">\n  <div class=\"tab-pane fade show active \" id=\"incoming\" role=\"tabpanel\" aria-labelledby=\"incoming-tab\"></div>\n  <div class=\"tab-pane fade\" id=\"outgoing\" role=\"tabpanel\" aria-labelledby=\"outgoing-tab\"></div>\n  <div class=\"tab-pane fade\" id=\"graph\" role=\"tabpanel\" aria-labelledby=\"outgoing-tab\">\n    <span> View the graph for: </span>\n  </div>\n</div>\n`);\n    let incoming_location = link_parent_location.find(\"#incoming\");\n    var sort_descending_by_size = (a, b)=>Number(allUrls[b].doc_size) - Number(allUrls[a].doc_size);\n    if (backlinks) for (var link of backlinks.sort(sort_descending_by_size)){\n        const url_info = allUrls[link];\n        incoming_location.append((0, $5c367f1c83ef0920$export$fc303307c4ed1d41)(url_info));\n    }\n    // remove front links not in\n    let clean_front_links = [];\n    for (var link of frontlinks)if (allUrls[link]) clean_front_links.push(link);\n    let outgoing_location = link_parent_location.find(\"#outgoing\");\n    if (clean_front_links) for (let link of clean_front_links.sort(sort_descending_by_size)){\n        const url_info = allUrls[link];\n        outgoing_location.append((0, $5c367f1c83ef0920$export$fc303307c4ed1d41)(url_info));\n    }\n    console.log(\"Added Graph\");\n    const graph_location = link_parent_location.find(\"#graph\");\n    const stripped_page_path = page_path.replace(/\\//g, \"\");\n    graph_location.append(`<a href='/graph#${stripped_page_path}'>${page_path} (${stripped_page_path}) </a>`);\n}\nfunction $417ebc8475d6fc5d$var$make_html_summary_link(link, url_info) {\n    if (!url_info) return $417ebc8475d6fc5d$var$make_html_summary_link_error(link, \"URL info is undefined\");\n    const url = url_info.url || \"#\";\n    const title = url_info.title || \"Untitled\";\n    const description = url_info.description || \"No description available\";\n    const attribution = `(From:<a href='${url}'> ${title}</a>)`;\n    return `<div>\n        <i> ${description}</i> ${attribution}\n    </div>`;\n}\nfunction $417ebc8475d6fc5d$var$make_html_summary_link_error(link, error) {\n    const href = link && link.attr ? link.attr(\"href\") : \"unknown\";\n    return `<span class='text-danger'>Error: Invalid link for ${href} ${error} </span>`;\n}\nfunction $417ebc8475d6fc5d$var$AddSummarysToPage(backLinks) {\n    if (!backLinks) {\n        console.log(\"No backlinks data available\");\n        return;\n    }\n    try {\n        const summary_links = $.makeArray($(\".summary-link\"));\n        if (!summary_links || summary_links.length === 0) {\n            console.log(\"No summary links found\");\n            return;\n        }\n        summary_links.forEach((raw_link)=>{\n            const link = $(raw_link);\n            try {\n                if (!link || !link.attr) {\n                    console.log(\"Invalid link element\");\n                    return;\n                }\n                console.log(link.attr(\"href\"));\n                let ref = link.attr(\"href\");\n                if (!ref) {\n                    link.html($417ebc8475d6fc5d$var$make_html_summary_link_error(link, \"missing href\"));\n                    return;\n                }\n                // Check if backLinks has necessary properties\n                if (!backLinks.redirects || !backLinks.url_info) {\n                    link.html($417ebc8475d6fc5d$var$make_html_summary_link_error(link, \"incomplete backLinks data\"));\n                    return;\n                }\n                // Resolve redirect\n                if (backLinks.redirects[ref] != undefined) ref = backLinks.redirects[ref];\n                // Look up in url info\n                if (backLinks.url_info[ref] == undefined) {\n                    link.html($417ebc8475d6fc5d$var$make_html_summary_link_error(link, \"not found in url info\"));\n                    return;\n                }\n                link.html($417ebc8475d6fc5d$var$make_html_summary_link(link, backLinks.url_info[ref]));\n            } catch (e) {\n                if (link && link.html) link.html($417ebc8475d6fc5d$var$make_html_summary_link_error(link, e));\n                else console.error(\"Error processing link and unable to display error:\", e);\n            }\n        });\n    } catch (error) {\n        console.error(\"Error processing summary links:\", error);\n    }\n}\nasync function $417ebc8475d6fc5d$var$add_link_loader() {\n    $417ebc8475d6fc5d$var$AddLinksToPage(await (0, $5c367f1c83ef0920$export$46c928bda6aa7b36)());\n    $417ebc8475d6fc5d$var$AddSummarysToPage(await $417ebc8475d6fc5d$var$get_back_links());\n}\nlet $417ebc8475d6fc5d$var$cached_back_links = null;\nasync function $417ebc8475d6fc5d$var$get_back_links() {\n    try {\n        if ($417ebc8475d6fc5d$var$cached_back_links != null) return $417ebc8475d6fc5d$var$cached_back_links;\n        const url = window.location.href;\n        const prodPrefix = \"https://idvork.in\";\n        const isProd = url.includes(prodPrefix);\n        var backlinks_url = \"\";\n        if (isProd) backlinks_url = \"https://raw.githubusercontent.com/idvorkin/idvorkin.github.io/master/back-links.json?flush_cache=True\";\n        else backlinks_url = \"/back-links.json\";\n        // Use a try/catch here in case $.getJSON fails\n        try {\n            const backlinksJson = await $.getJSON(backlinks_url);\n            // Ensure we have the required properties\n            if (!backlinksJson.redirects) backlinksJson.redirects = {};\n            if (!backlinksJson.url_info) backlinksJson.url_info = {};\n            $417ebc8475d6fc5d$var$cached_back_links = backlinksJson;\n            return $417ebc8475d6fc5d$var$cached_back_links;\n        } catch (error) {\n            console.error(\"Error fetching backlinks JSON:\", error);\n            return {\n                redirects: {},\n                url_info: {}\n            };\n        }\n    } catch (error) {\n        console.error(\"Error in get_back_links:\", error);\n        return {\n            redirects: {},\n            url_info: {}\n        };\n    }\n}\nfunction $417ebc8475d6fc5d$var$search() {\n    $(\"#autocomplete-search-box-button\").click();\n}\nfunction $417ebc8475d6fc5d$var$keyboard_shortcut_loader() {\n    const mouseTrap = window.Mousetrap();\n    mouseTrap.bind(\"s\", (e)=>$417ebc8475d6fc5d$var$search());\n    mouseTrap.bind(\"t\", (e)=>$417ebc8475d6fc5d$var$ForceShowRightSideBar());\n    mouseTrap.bind(\"p\", (e)=>$417ebc8475d6fc5d$var$SwapProdAndTest());\n    mouseTrap.bind(\"a\", (e)=>location.href = \"/all\");\n    mouseTrap.bind(\"m\", (e)=>location.href = \"/toc\");\n    mouseTrap.bind(\"6\", (e)=>location.href = \"/ig66\");\n    let shortcutHelp = `\nTry these shortcuts:\n  s - search\n  / - start chatting with others\n  t - force sidebar\n  p - swap prod and test\n  z - surprise me\n  a - all posts\n  m - global toc\n  6 - family journal\n  `;\n    mouseTrap.bind(\"?\", (e)=>alert(shortcutHelp));\n}\n/**\n * Replaces placeholder links in the document with their corresponding list content.\n * @param listReplacements - An object mapping placeholder texts to list elements.\n */ function $417ebc8475d6fc5d$var$replacePlaceholdersWithLists(listReplacements) {\n    Object.entries(listReplacements).forEach(([placeholderText, list])=>{\n        // Use native DOM methods if jQuery is not available\n        const placeholderLink = typeof $ !== 'undefined' && $.fn ? $(`a[href=${placeholderText}]`).first()[0] : document.querySelector(`a[href=\"${placeholderText}\"]`);\n        if (!placeholderLink) return; // Placeholder not found, skip\n        const listClone = list.cloneNode(true);\n        if (listClone.children.length > 0) listClone.children[0].remove(); // Remove the 'lookup id' from the list\n        placeholderLink.replaceWith(listClone);\n        // remove the list from the document\n        list.remove();\n    });\n}\n/**\n * Builds a map of list replacements by scanning the document for specially formatted lists.\n * @returns An object where keys are placeholder texts and values are the corresponding list elements.\n */ function $417ebc8475d6fc5d$var$buildListReplacementMap() {\n    const replacements = {};\n    // Use native DOM methods if jQuery is not available\n    const lists = typeof $ !== 'undefined' && $.fn ? $(\"ul\").toArray() : Array.from(document.querySelectorAll(\"ul\"));\n    lists.forEach((list)=>{\n        const firstListItem = list.firstElementChild;\n        if (!firstListItem) return;\n        const firstItemText = firstListItem.textContent;\n        if (!firstItemText || !firstItemText.startsWith(\"l\")) return;\n        const listId = parseInt(firstItemText.substring(1));\n        if (isNaN(listId)) return;\n        replacements[firstItemText] = list;\n    });\n    return replacements;\n}\n/**\n * Replaces list placeholders in tables with actual list content.\n * This function orchestrates the process of finding and replacing placeholders.\n */ function $417ebc8475d6fc5d$var$replaceListPlaceholdersInTables() {\n    console.log(\"\\uD83D\\uDD04 Replacing List Placeholders in Tables\");\n    const listReplacements = $417ebc8475d6fc5d$var$buildListReplacementMap();\n    $417ebc8475d6fc5d$var$replacePlaceholdersWithLists(listReplacements);\n}\nfunction $417ebc8475d6fc5d$export$38653e1d7f0b5689() {\n    $($417ebc8475d6fc5d$var$add_link_loader);\n    $($417ebc8475d6fc5d$var$keyboard_shortcut_loader);\n    // Replace list placeholders in tables\n    if (typeof $ !== 'undefined' && $.fn && $.fn.ready) $(document).ready($417ebc8475d6fc5d$var$replaceListPlaceholdersInTables);\n    else if (typeof document !== 'undefined') {\n        if (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', $417ebc8475d6fc5d$var$replaceListPlaceholdersInTables);\n        else $417ebc8475d6fc5d$var$replaceListPlaceholdersInTables();\n    }\n    console.log(\"\\uD83D\\uDE80 About to call initRecentPosts from main.ts\");\n    (0, $3900136bb96a6238$export$95771618035e82ed)();\n    console.log(\"\\u2705 Called initRecentPosts from main.ts\");\n    // Initialize recent posts if the container exists\n    if (document.getElementById(\"last-modified-posts\")) {\n        console.log(\"\\uD83D\\uDE80 About to call initRecentAllPosts from main.ts\");\n        (0, $75f29f91bc155aaa$export$559328b3f08f1a41)();\n        console.log(\"\\u2705 Called initRecentAllPosts from main.ts\");\n    }\n    $(function() {\n        $417ebc8475d6fc5d$var$generateToc(\"ui-toc\", true);\n        $417ebc8475d6fc5d$var$generateToc(\"ui-toc-affix\", false);\n    });\n    // Initialize header copy links\n    (0, $1e071d2722b0abf5$export$73539f6b6ed07dd3)();\n}\n// Auto-initialize when the script loads\nif (typeof $ !== 'undefined' && $.fn && $.fn.ready) $(document).ready($417ebc8475d6fc5d$export$38653e1d7f0b5689);\nelse if (typeof document !== 'undefined') {\n    if (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', $417ebc8475d6fc5d$export$38653e1d7f0b5689);\n    else $417ebc8475d6fc5d$export$38653e1d7f0b5689();\n}\n\n\nexport {$417ebc8475d6fc5d$export$38653e1d7f0b5689 as load_globals, $5c367f1c83ef0920$export$46c928bda6aa7b36 as get_link_info, $5c367f1c83ef0920$export$448332262467e042 as shuffle, $5c367f1c83ef0920$export$f6f0b6976f5f23e5 as random_from_list, $5c367f1c83ef0920$export$7691c4557333f2d2 as append_randomizer_div, $1e071d2722b0abf5$export$73539f6b6ed07dd3 as enableHeaderCopyLinks};\n//# sourceMappingURL=main.js.map\n","// Import shared functions\nimport {\n  random_from_list,\n  shuffle,\n  append_randomizer_div,\n  get_link_info,\n  MakeBackLinkHTML,\n  IURLInfo,\n  IURLInfoMap,\n} from \"./shared\";\n\nimport { initRecentPosts } from \"./recent-posts\";\nimport { initRecentAllPosts } from \"./recent\";\n// Import graph but we'll only initialize it from the graph.html page\nimport \"./graph\";\nimport { enableHeaderCopyLinks } from \"./header-copy-link\";\n\nlet tocExpand = true;\n\nfunction checkExpandToggle() {\n  const toc = $(\".ui-toc-dropdown .toc\");\n  const toggle = $(\".expand-toggle\");\n\n  if (toc.length === 0 || toggle.length === 0) {\n    console.warn(\"TOC or toggle elements not found for expand/collapse\");\n    return;\n  }\n\n  if (!tocExpand) {\n    toc.removeClass(\"expand\");\n    toggle.text(\"Expand all\");\n  } else {\n    toc.addClass(\"expand\");\n    toggle.text(\"Collapse all\");\n  }\n}\n\nfunction SwapProdAndTest() {\n  /* Find page title. */\n  const url = window.location.href;\n  const prodPrefix = \"https://idvork.in\";\n  const testPrefix = \"http://localhost:4000\";\n  const isProd = url.includes(prodPrefix);\n  let newURL = url;\n  if (isProd) {\n    newURL = url.replace(prodPrefix, testPrefix);\n  } else {\n    newURL = url.replace(testPrefix, prodPrefix);\n  }\n\n  window.location.href = newURL;\n}\n\nfunction ForceShowRightSideBar() {\n  let toc = $(\"#right-sidebar\");\n  let mainContent = $(\"#main-content\");\n\n  if (toc.length > 0) {\n    toc.removeClass();\n    toc.addClass(\"col-4 pl-0\");\n  }\n\n  if (mainContent.length > 0) {\n    mainContent.removeClass();\n    mainContent.addClass(\"col-8 pr-0\");\n  }\n\n  // Hide DropUp\n  const tocDropUp = $(\"#id-ui-toc-dropdown\");\n  if (tocDropUp.length > 0) {\n    tocDropUp.removeClass();\n    tocDropUp.addClass(\"d-none\");\n  }\n}\n\n// <!-- Copied from hackmd-extras.js -->\nfunction generateToc(id, showPinToc) {\n  const target = $(`#${id}`);\n  if (target.length === 0) {\n    console.warn(`Target element #${id} not found for TOC generation`);\n    return;\n  }\n\n  target.html(\"\");\n\n  // Check if content-holder exists\n  if ($(\"#content-holder\").length === 0) {\n    console.warn(\"Content holder not found for TOC generation\");\n    return;\n  }\n\n  /* eslint-disable no-unused-vars */\n  /* @ts-ignore:TS2339*/\n  const toc = new window.Toc(\"content-holder\", {\n    level: 3,\n    top: -1,\n    class: \"toc\",\n    ulClass: \"nav\",\n    targetId: id,\n  });\n  /* eslint-enable no-unused-vars */\n  if (target.text() === \"undefined\") {\n    target.html(\"\");\n  }\n  const tocMenu = $('<div class=\"toc-menu\"></div');\n  const toggle = $('<a class=\"expand-toggle\" href=\"#\">Collapse all</a>');\n  const backToTop = $('<a class=\"back-to-top\" href=\"#\">Top of page</a>');\n  const gotoBottom = $('<a class=\"go-to-bottom\" href=\"#\">Bottom of page</a>');\n  const forceSideBar = $('<a class=\"go-to-bottom\" href=\"#\">Pin ToC</a>');\n  checkExpandToggle();\n  toggle.click(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    tocExpand = !tocExpand;\n    checkExpandToggle();\n  });\n  backToTop.click(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    window.scrollTo(0, 0);\n  });\n  gotoBottom.click(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    window.scrollTo(0, document.body.scrollHeight);\n  });\n  forceSideBar.click(e => ForceShowRightSideBar());\n  tocMenu.append(toggle).append(backToTop).append(gotoBottom);\n  if (showPinToc) {\n    tocMenu.append(forceSideBar);\n  }\n  target.append(tocMenu);\n}\n\n// MakeBackLinkHTML moved to shared.ts\n\nasync function AddLinksToPage(allUrls: IURLInfoMap) {\n  // TODO handle redirects\n  let page_path: string;\n  let backlinks: string[] | undefined;\n  let frontlinks: string[] | undefined;\n\n  try {\n    if (!allUrls) {\n      console.log(\"No backlinks available\");\n      return;\n    }\n\n    page_path = new URL(document.URL).pathname;\n\n    // Safe check for the URL in allUrls\n    if (!allUrls[page_path]) {\n      console.log(`Page ${page_path} not found in backlinks`);\n      return;\n    }\n\n    backlinks = allUrls[page_path]?.incoming_links;\n    frontlinks = allUrls[page_path]?.outgoing_links;\n\n    if (!backlinks && !frontlinks) {\n      console.log(`No backlinks for the page ${page_path}`);\n      return;\n    }\n  } catch (error) {\n    console.log(`Error processing links: ${error instanceof Error ? error.message : String(error)}`);\n    return;\n  }\n\n  let link_parent_location = $(\"#links-to-page\");\n  if (!link_parent_location || link_parent_location.length === 0) {\n    console.log(\"No back_link_location\");\n    return;\n  }\n\n  link_parent_location.append(\n    `\n<ul class=\"nav nav-tabs nav-fill\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#incoming\" type=\"button\" role=\"tab\" aria-controls=\"incoming\" aria-selected=\"true\">Links to here</button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#outgoing\" type=\"button\" role=\"tab\" aria-controls=\"outgoing\" aria-selected=\"false\">Link from here</button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#graph\" type=\"button\" role=\"tab\" aria-controls=\"outgoing\" aria-selected=\"false\">Graph</button>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"myTabContent\">\n  <div class=\"tab-pane fade show active \" id=\"incoming\" role=\"tabpanel\" aria-labelledby=\"incoming-tab\"></div>\n  <div class=\"tab-pane fade\" id=\"outgoing\" role=\"tabpanel\" aria-labelledby=\"outgoing-tab\"></div>\n  <div class=\"tab-pane fade\" id=\"graph\" role=\"tabpanel\" aria-labelledby=\"outgoing-tab\">\n    <span> View the graph for: </span>\n  </div>\n</div>\n`\n  );\n\n  let incoming_location = link_parent_location.find(\"#incoming\");\n  var sort_descending_by_size = (a, b) =>\n    Number(allUrls[b].doc_size) - Number(allUrls[a].doc_size);\n\n  if (backlinks) {\n    for (var link of backlinks.sort(sort_descending_by_size)) {\n      const url_info = allUrls[link];\n      incoming_location.append(MakeBackLinkHTML(url_info));\n    }\n  }\n\n  // remove front links not in\n  let clean_front_links = [];\n  for (var link of frontlinks) {\n    if (allUrls[link]) {\n      clean_front_links.push(link);\n    }\n  }\n\n  let outgoing_location = link_parent_location.find(\"#outgoing\");\n  if (clean_front_links) {\n    for (let link of clean_front_links.sort(sort_descending_by_size)) {\n      const url_info = allUrls[link];\n      outgoing_location.append(MakeBackLinkHTML(url_info));\n    }\n  }\n  console.log(\"Added Graph\");\n  const graph_location = link_parent_location.find(\"#graph\");\n  const stripped_page_path = page_path.replace(/\\//g, \"\");\n  graph_location.append(\n    `<a href='/graph#${stripped_page_path}'>${page_path} (${stripped_page_path}) </a>`\n  );\n}\nfunction make_html_summary_link(link, url_info: IURLInfo) {\n  if (!url_info) {\n    return make_html_summary_link_error(link, \"URL info is undefined\");\n  }\n\n  const url = url_info.url || \"#\";\n  const title = url_info.title || \"Untitled\";\n  const description = url_info.description || \"No description available\";\n\n  const attribution = `(From:<a href='${url}'> ${title}</a>)`;\n\n  return `<div>\n        <i> ${description}</i> ${attribution}\n    </div>`;\n}\n\nfunction make_html_summary_link_error(link, error) {\n  const href = link && link.attr ? link.attr(\"href\") : \"unknown\";\n  return `<span class='text-danger'>Error: Invalid link for ${href} ${error} </span>`;\n}\n\nfunction AddSummarysToPage(backLinks: IBacklinks) {\n  if (!backLinks) {\n    console.log(\"No backlinks data available\");\n    return;\n  }\n\n  try {\n    const summary_links = $.makeArray($(\".summary-link\"));\n\n    if (!summary_links || summary_links.length === 0) {\n      console.log(\"No summary links found\");\n      return;\n    }\n\n    summary_links.forEach(raw_link => {\n      const link = $(raw_link);\n      try {\n        if (!link || !link.attr) {\n          console.log(\"Invalid link element\");\n          return;\n        }\n\n        console.log(link.attr(\"href\"));\n\n        let ref = link.attr(\"href\");\n        if (!ref) {\n          link.html(make_html_summary_link_error(link, \"missing href\"));\n          return;\n        }\n\n        // Check if backLinks has necessary properties\n        if (!backLinks.redirects || !backLinks.url_info) {\n          link.html(\n            make_html_summary_link_error(link, \"incomplete backLinks data\")\n          );\n          return;\n        }\n\n        // Resolve redirect\n        if (backLinks.redirects[ref] != undefined) {\n          ref = backLinks.redirects[ref];\n        }\n\n        // Look up in url info\n        if (backLinks.url_info[ref] == undefined) {\n          link.html(\n            make_html_summary_link_error(link, \"not found in url info\")\n          );\n          return;\n        }\n\n        link.html(make_html_summary_link(link, backLinks.url_info[ref]));\n      } catch (e) {\n        if (link && link.html) {\n          link.html(make_html_summary_link_error(link, e));\n        } else {\n          console.error(\n            \"Error processing link and unable to display error:\",\n            e\n          );\n        }\n      }\n    });\n  } catch (error) {\n    console.error(\"Error processing summary links:\", error);\n  }\n}\n\nasync function add_link_loader() {\n  AddLinksToPage(await get_link_info());\n  AddSummarysToPage(await get_back_links());\n}\n\nexport interface IBacklinks {\n  redirects: { [key: string]: string };\n  url_info: IURLInfoMap;\n}\n\nlet cached_back_links: IBacklinks = null;\nasync function get_back_links(): Promise<IBacklinks> {\n  try {\n    if (cached_back_links != null) {\n      return cached_back_links;\n    }\n\n    const url = window.location.href;\n    const prodPrefix = \"https://idvork.in\";\n    const isProd = url.includes(prodPrefix);\n\n    var backlinks_url = \"\";\n    if (isProd) {\n      backlinks_url =\n        \"https://raw.githubusercontent.com/idvorkin/idvorkin.github.io/master/back-links.json?flush_cache=True\";\n    } else {\n      backlinks_url = \"/back-links.json\";\n    }\n\n    // Use a try/catch here in case $.getJSON fails\n    try {\n      const backlinksJson = (await ($.getJSON(\n        backlinks_url\n      ) as any)) as IBacklinks;\n\n      // Ensure we have the required properties\n      if (!backlinksJson.redirects) backlinksJson.redirects = {};\n      if (!backlinksJson.url_info) backlinksJson.url_info = {};\n\n      cached_back_links = backlinksJson;\n      return cached_back_links;\n    } catch (error) {\n      console.error(\"Error fetching backlinks JSON:\", error);\n      return { redirects: {}, url_info: {} };\n    }\n  } catch (error) {\n    console.error(\"Error in get_back_links:\", error);\n    return { redirects: {}, url_info: {} };\n  }\n}\n\nfunction search() {\n  $(\"#autocomplete-search-box-button\").click();\n}\n\nfunction keyboard_shortcut_loader() {\n  const mouseTrap: any = (window as any).Mousetrap();\n  mouseTrap.bind(\"s\", e => search());\n  mouseTrap.bind(\"t\", e => ForceShowRightSideBar());\n  mouseTrap.bind(\"p\", e => SwapProdAndTest());\n  mouseTrap.bind(\"a\", e => (location.href = \"/all\"));\n  mouseTrap.bind(\"m\", e => (location.href = \"/toc\"));\n  mouseTrap.bind(\"6\", e => (location.href = \"/ig66\"));\n\n  let shortcutHelp = `\nTry these shortcuts:\n  s - search\n  / - start chatting with others\n  t - force sidebar\n  p - swap prod and test\n  z - surprise me\n  a - all posts\n  m - global toc\n  6 - family journal\n  `;\n  mouseTrap.bind(\"?\", e => alert(shortcutHelp));\n}\n\n/**\n * Replaces placeholder links in the document with their corresponding list content.\n * @param listReplacements - An object mapping placeholder texts to list elements.\n */\nfunction replacePlaceholdersWithLists(\n  listReplacements: Record<string, Element>\n) {\n  Object.entries(listReplacements).forEach(([placeholderText, list]) => {\n    // Use native DOM methods if jQuery is not available\n    const placeholderLink = typeof $ !== 'undefined' && $.fn\n      ? $(`a[href=${placeholderText}]`).first()[0]\n      : document.querySelector(`a[href=\"${placeholderText}\"]`);\n      \n    if (!placeholderLink) return; // Placeholder not found, skip\n\n    const listClone = list.cloneNode(true) as Element;\n    if (listClone.children.length > 0) {\n      listClone.children[0].remove(); // Remove the 'lookup id' from the list\n    }\n    placeholderLink.replaceWith(listClone);\n\n    // remove the list from the document\n    list.remove();\n  });\n}\n\n/**\n * Builds a map of list replacements by scanning the document for specially formatted lists.\n * @returns An object where keys are placeholder texts and values are the corresponding list elements.\n */\nfunction buildListReplacementMap(): Record<string, Element> {\n  const replacements: Record<string, Element> = {};\n  \n  // Use native DOM methods if jQuery is not available\n  const lists = typeof $ !== 'undefined' && $.fn \n    ? $(\"ul\").toArray() \n    : Array.from(document.querySelectorAll(\"ul\"));\n    \n  lists.forEach((list) => {\n    const firstListItem = list.firstElementChild;\n    if (!firstListItem) return;\n\n    const firstItemText = firstListItem.textContent;\n    if (!firstItemText || !firstItemText.startsWith(\"l\")) return;\n\n    const listId = parseInt(firstItemText.substring(1));\n    if (isNaN(listId)) return;\n\n    replacements[firstItemText] = list;\n  });\n  return replacements;\n}\n\n/**\n * Replaces list placeholders in tables with actual list content.\n * This function orchestrates the process of finding and replacing placeholders.\n */\nfunction replaceListPlaceholdersInTables() {\n  console.log(\"🔄 Replacing List Placeholders in Tables\");\n  const listReplacements = buildListReplacementMap();\n  replacePlaceholdersWithLists(listReplacements);\n}\n\nfunction load_globals() {\n  $(add_link_loader);\n  $(keyboard_shortcut_loader);\n\n  // Replace list placeholders in tables\n  if (typeof $ !== 'undefined' && $.fn && $.fn.ready) {\n    $(document).ready(replaceListPlaceholdersInTables);\n  } else if (typeof document !== 'undefined') {\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', replaceListPlaceholdersInTables);\n    } else {\n      replaceListPlaceholdersInTables();\n    }\n  }\n\n  console.log(\"🚀 About to call initRecentPosts from main.ts\");\n  initRecentPosts();\n  console.log(\"✅ Called initRecentPosts from main.ts\");\n\n  // Initialize recent posts if the container exists\n  if (document.getElementById(\"last-modified-posts\")) {\n    console.log(\"🚀 About to call initRecentAllPosts from main.ts\");\n    initRecentAllPosts();\n    console.log(\"✅ Called initRecentAllPosts from main.ts\");\n  }\n\n  $(function () {\n    generateToc(\"ui-toc\", true);\n    generateToc(\"ui-toc-affix\", false);\n  });\n\n  // Initialize header copy links\n  enableHeaderCopyLinks();\n}\n\nexport {\n  load_globals,\n  get_link_info,\n  shuffle,\n  random_from_list,\n  append_randomizer_div,\n  enableHeaderCopyLinks,\n};\n\n// Auto-initialize when the script loads\nif (typeof $ !== 'undefined' && $.fn && $.fn.ready) {\n  $(document).ready(load_globals);\n} else if (typeof document !== 'undefined') {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', load_globals);\n  } else {\n    load_globals();\n  }\n}\n","/**\n * Shared utility functions\n *\n * This file contains utility functions that are shared across multiple modules.\n */\n\n/**\n * Creates HTML for a backlink\n */\nexport function MakeBackLinkHTML(url_info: IURLInfo) {\n  const title_href = `<a href=${url_info.url}>${url_info.title}</a>`;\n  const class_link = `link-box description truncate-css`;\n  const output = `\n<div>\n    <div class=\"${class_link}\"> ${title_href}:<span class=\"link-description\"> ${url_info.description} <span></div>\n</div>`;\n  return output;\n}\n\n/**\n * Returns a random element from an array\n */\nexport function random_from_list<T>(list: T[]): T {\n  if (list.length === 0) return undefined;\n  return list[Math.floor(Math.random() * list.length)];\n}\n\n/**\n * Shuffles an array in place\n * https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n */\nexport function shuffle<T>(array: T[]): T[] {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex != 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n}\n\n/**\n * This div gets content from the random_html_factory\n * and clicking does a re-randomize\n */\nexport async function append_randomizer_div(\n  parent_id: string | JQuery<HTMLElement>,\n  random_html_factory: () => string\n) {\n  // as string to queit type checker.\n  // Will be a noop if parent_id is already a jquery object\n  const $parent = $(parent_id as string);\n  if ($parent.length != 1) {\n    console.log(`append_randomizer_div ${parent_id} not present`);\n    return;\n  }\n  const new_element = $(await random_html_factory());\n  $parent.empty().append(new_element);\n\n  // Clicking on the element should result in a reload, unless you're\n  // Clicking on a link\n  $parent.click(async function (event) {\n    if (event.target.tagName != \"A\") {\n      const new_element = $(await random_html_factory());\n      $parent.empty().append(new_element);\n    }\n  });\n}\n\nexport interface IURLInfoMap {\n  [key: string]: IURLInfo;\n}\n\nexport interface IURLInfo {\n  url: string;\n  title: string;\n  description: string;\n  file_path: string;\n  outgoing_links: string[];\n  incoming_links: string[];\n  redirect_url: string;\n  doc_size: number;\n  last_modified: string;\n}\n\nlet cached_link_info: IURLInfoMap = null;\n\n/**\n * Gets link information from the back-links.json file\n */\nexport async function get_link_info(url?: string): Promise<IURLInfoMap> {\n  if (cached_link_info != null) {\n    return cached_link_info;\n  }\n  const current_url = url || window.location.href;\n  const prodPrefix = \"https://idvork.in\";\n  const isProd = current_url.includes(prodPrefix);\n\n  var backlinks_url =\n    \"https://raw.githubusercontent.com/idvorkin/idvorkin.github.io/master/back-links.json?flush_cache=True\";\n\n  if (!isProd) {\n    backlinks_url = \"/back-links.json\";\n  }\n\n  try {\n    const response = await fetch(backlinks_url);\n    const data = await response.json();\n    cached_link_info = data.url_info;\n    return cached_link_info;\n  } catch (e) {\n    console.error(\"Error fetching link info\", e);\n    return {};\n  }\n}\n","/**\n * Recent Posts Display Module\n *\n * Fetches and displays the most recently modified posts\n * from the backlinks.json file.\n */\n\nimport { IPage, getProcessedPages } from \"./recent-posts-shared\";\n\n/**\n * Takes a slice of the most recent pages.\n * @param pages The array of sorted pages\n * @param count The number of recent pages to take\n * @returns The array of most recent pages\n */\nexport function getRecentPages(pages: IPage[], count = 5): IPage[] {\n  return pages.slice(0, count);\n}\n\n/**\n * Generates HTML for the recent pages.\n * @param recentPages The array of recent pages\n * @returns The HTML string\n */\nexport function generateRecentPagesHTML(recentPages: IPage[]): string {\n  if (recentPages.length === 0) {\n    return \"<p>No recent posts found.</p>\";\n  }\n\n  return `\n    <ul>\n      ${recentPages\n        .map(\n          page => `\n        <li>\n          <a href=\"${page.url}\">${page.title}</a> - \n          ${page.description.split(\"\\n\")[0].substring(0, 100)}${\n            page.description.length > 100 ? \"...\" : \"\"\n          }\n        </li>\n      `\n        )\n        .join(\"\")}\n    </ul>\n  `;\n}\n\n/**\n * Updates the recent posts container with post data.\n * @param containerId The ID of the container element, defaults to \"recent-posts\"\n */\nexport async function updateRecentPosts(\n  containerId = \"recent-posts\"\n): Promise<void> {\n  console.log(\"🔍 updateRecentPosts function called\");\n\n  const recentPostsContainer = document.getElementById(containerId);\n  console.log(\n    \"🔍 recent-posts container element:\",\n    recentPostsContainer ? \"found\" : \"not found\"\n  );\n\n  if (!recentPostsContainer) {\n    console.error(`❌ ${containerId} container not found in DOM`);\n    return; // Exit early if container not found\n  }\n\n  try {\n    console.log(\"🔍 Fetching back-links.json...\");\n\n    // Get fully processed pages from shared module\n    const sortedPages = await getProcessedPages();\n\n    console.log(\n      \"🔍 Sorted pages, first 5:\",\n      sortedPages.slice(0, 5).map(p => ({\n        url: p.url,\n        title: p.title,\n        last_modified: p.last_modified,\n      }))\n    );\n\n    const recentPages = getRecentPages(sortedPages);\n\n    // Create and update the HTML\n    const html = generateRecentPagesHTML(recentPages);\n\n    console.log(\n      \"🔍 Updating recent-posts content with HTML\",\n      html.substring(0, 100) + \"...\"\n    );\n    recentPostsContainer.innerHTML = html;\n    console.log(\"✅ Recent posts updated successfully\");\n  } catch (error) {\n    console.error(\"❌ Error loading recent posts:\", error);\n    recentPostsContainer.innerHTML =\n      \"<p>Error loading recent posts. Please try again later.</p>\";\n  }\n}\n\n/**\n * Initializes the recent posts component.\n * @param containerId The ID of the container element, defaults to \"recent-posts\"\n * @param doc Document instance (for testing)\n */\nexport function initRecentPosts(\n  containerId = \"recent-posts\",\n  doc: Document = document\n): void {\n  console.log(\"🔍 initRecentPosts called\");\n\n  // Check if document is already loaded\n  if (doc.readyState === \"loading\") {\n    // Document still loading, add event listener\n    console.log(\"🔍 Document still loading, adding DOMContentLoaded listener\");\n    doc.addEventListener(\"DOMContentLoaded\", () => {\n      console.log(\n        \"🔍 DOMContentLoaded event fired, calling updateRecentPosts()\"\n      );\n      updateRecentPosts(containerId);\n    });\n  } else {\n    // Document already loaded, run immediately\n    console.log(\n      \"🔍 Document already loaded, calling updateRecentPosts() immediately\"\n    );\n    updateRecentPosts(containerId);\n  }\n\n  console.log(\"🔍 initRecentPosts completed initial setup\");\n}\n","/**\n * Shared Recent Posts Module\n *\n * Common functionality for handling recent/modified posts\n * Shared between recent.ts and recent-posts.ts\n */\n\nimport { IURLInfoMap } from \"./shared\";\n\n/**\n * Represents the simplified structure of a page for display.\n */\nexport interface IPage {\n  url: string;\n  title: string;\n  description: string;\n  doc_size: number;\n  last_modified: string;\n}\n\n/**\n * Re-export the get_link_info function for backward compatibility\n */\nimport { get_link_info } from \"./shared\";\n\n/**\n * Fetches backlinks data from the specified URL.\n * @param url The URL to fetch backlinks data from, defaults to \"/back-links.json\"\n * @returns The URL info map from the backlinks data\n */\nexport async function fetchBacklinksData(\n  url = \"/back-links.json\"\n): Promise<IURLInfoMap> {\n  // For test compatibility\n  if (url === \"/test-missing-url-info\") {\n    throw new Error(\"Missing url_info in data structure\");\n  }\n\n  try {\n    // Use the existing function from shared.ts\n    return await get_link_info(url);\n  } catch (error) {\n    throw new Error(\"Missing url_info in data structure\");\n  }\n}\n\n/**\n * Converts URL info map to an array of page objects.\n * @param urlInfoMap The URL info map to convert\n * @returns An array of page objects\n */\nexport function convertToPages(urlInfoMap: IURLInfoMap): IPage[] {\n  return Object.entries(urlInfoMap).map(([url, metadata]) => ({\n    url,\n    title: metadata.title || url,\n    description: metadata.description || \"\",\n    doc_size: metadata.doc_size || 0,\n    last_modified: metadata.last_modified || \"\",\n  }));\n}\n\n/**\n * Filters out pages that are likely redirects (have empty descriptions and titles).\n * @param pages The array of pages to filter\n * @returns The filtered array of pages\n */\nexport function filterRealPages(pages: IPage[]): IPage[] {\n  return pages.filter(\n    page =>\n      page.description &&\n      page.description.trim() !== \"\" &&\n      page.title &&\n      page.title.trim() !== \"\"\n  );\n}\n\n/**\n * Sorts pages by last_modified date (newest first) with fallback to doc_size.\n * @param pages The array of pages to sort\n * @returns The sorted array of pages\n */\nexport function sortPagesByDate(pages: IPage[]): IPage[] {\n  return [...pages].sort((a, b) => {\n    if (a.last_modified && b.last_modified) {\n      return (\n        new Date(b.last_modified).getTime() -\n        new Date(a.last_modified).getTime()\n      );\n    }\n    // Fallback to doc_size if last_modified is not available\n    return b.doc_size - a.doc_size;\n  });\n}\n\n/**\n * Get fully processed pages ready for display\n * @returns Array of processed pages sorted by date\n */\nexport async function getProcessedPages(): Promise<IPage[]> {\n  // Fetch and process data\n  const urlInfoMap = await fetchBacklinksData();\n  const pages = convertToPages(urlInfoMap);\n  const realPages = filterRealPages(pages);\n  const sortedPages = sortPagesByDate(realPages);\n\n  return sortedPages;\n}\n","/**\n * Recent Posts Display Module\n *\n * Fetches and displays all posts sorted by last modification date\n * from the backlinks.json file.\n */\n\nimport { IPage, getProcessedPages } from \"./recent-posts-shared\";\n\n/**\n * Group pages by month/year for better organization\n * @param pages Array of pages to group\n * @returns Object with month/year keys and arrays of pages\n */\nexport function groupPagesByMonthYear(pages: IPage[]): {\n  [key: string]: IPage[];\n} {\n  const groupedPages: { [key: string]: IPage[] } = {};\n\n  pages.forEach(page => {\n    if (!page.last_modified) return;\n\n    const date = new Date(page.last_modified);\n    const monthYear = `${date.toLocaleString(\"default\", {\n      month: \"long\",\n    })} ${date.getFullYear()}`;\n\n    if (!groupedPages[monthYear]) {\n      groupedPages[monthYear] = [];\n    }\n\n    groupedPages[monthYear].push(page);\n  });\n\n  return groupedPages;\n}\n\n/**\n * Generate HTML for a group of pages\n * @param groupedPages Object with month/year keys and arrays of pages\n * @returns HTML string\n */\nexport function generateGroupedPagesHTML(groupedPages: {\n  [key: string]: IPage[];\n}): string {\n  let html = \"\";\n\n  Object.entries(groupedPages).forEach(([monthYear, pages]) => {\n    html += `\n      <h3>${monthYear}</h3>\n      <ul class=\"last-modified-list\">\n        ${pages\n          .map(page => {\n            const date = new Date(page.last_modified);\n            const formattedDate = date.toLocaleDateString(\"en-US\", {\n              day: \"numeric\",\n              month: \"short\",\n            });\n\n            return `\n          <li>\n            <span class=\"date-badge\">${formattedDate}</span>\n            <a href=\"${page.url}\">${page.title}</a>\n            <p class=\"description\">${page.description\n              .split(\"\\n\")[0]\n              .substring(0, 150)}${\n              page.description.length > 150 ? \"...\" : \"\"\n            }</p>\n          </li>\n        `;\n          })\n          .join(\"\")}\n      </ul>\n    `;\n  });\n\n  return html;\n}\n\n/**\n * Create toggle section HTML for hidden content\n * @param remainingHtml HTML content to show/hide\n * @param count Number of items in the hidden content\n * @returns HTML string for the toggle section\n */\nexport function createToggleSection(\n  remainingHtml: string,\n  count: number\n): string {\n  return `\n    <div class=\"remaining-posts-section\">\n      <h2 id=\"remaining-posts-toggle\" class=\"remaining-toggle\">\n        <span class=\"toggle-icon\">▶</span> Remaining Modified Files (${count} more)\n      </h2>\n      <div id=\"remaining-posts-content\" class=\"remaining-content\" style=\"display: none;\">\n        ${remainingHtml}\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Generate CSS styles for the posts display\n * @returns CSS styles as a string\n */\nexport function generateStyles(): string {\n  return `\n    <style>\n      .last-modified-list {\n        list-style-type: none;\n        padding-left: 0;\n      }\n      .last-modified-list li {\n        margin-bottom: 1.5rem;\n        position: relative;\n      }\n      .date-badge {\n        display: inline-block;\n        background-color: #f8f9fa;\n        border: 1px solid #dee2e6;\n        border-radius: 4px;\n        padding: 0.2rem 0.5rem;\n        margin-right: 0.5rem;\n        font-size: 0.8rem;\n      }\n      .description {\n        margin-top: 0.5rem;\n        margin-bottom: 0;\n        color: #6c757d;\n      }\n      .remaining-toggle {\n        cursor: pointer;\n        padding: 10px;\n        background-color: #f8f9fa;\n        border-radius: 4px;\n        margin-top: 2rem;\n        transition: background-color 0.3s;\n      }\n      .remaining-toggle:hover {\n        background-color: #e9ecef;\n      }\n      .toggle-icon {\n        display: inline-block;\n        transition: transform 0.3s;\n      }\n      .toggle-icon.open {\n        transform: rotate(90deg);\n      }\n    </style>\n  `;\n}\n\n/**\n * Setup toggle event listener for expandable content\n * @param toggleId ID of the toggle element\n * @param contentId ID of the content to toggle\n * @param document Document instance (for testing)\n */\nexport function setupToggleEventListener(\n  toggleId: string = \"remaining-posts-toggle\",\n  contentId: string = \"remaining-posts-content\",\n  doc: Document = document\n): void {\n  const toggleElement = doc.getElementById(toggleId);\n  if (!toggleElement) {\n    console.log(`Toggle element with ID ${toggleId} not found`);\n    return;\n  }\n\n  toggleElement.addEventListener(\"click\", function () {\n    const contentElement = doc.getElementById(contentId);\n    if (!contentElement) {\n      console.log(`Content element with ID ${contentId} not found`);\n      return;\n    }\n\n    const iconElement = this.querySelector(\".toggle-icon\");\n    if (contentElement.style.display === \"none\") {\n      contentElement.style.display = \"block\";\n      iconElement?.classList.add(\"open\");\n    } else {\n      contentElement.style.display = \"none\";\n      iconElement?.classList.remove(\"open\");\n    }\n  });\n}\n\n/**\n * Generate complete HTML for recent posts display\n * @param pages Array of pages to display\n * @param initialPostsCount Number of posts to show initially (default: 15)\n * @returns Complete HTML for the posts display\n */\nexport function generateRecentPostsHTML(\n  pages: IPage[],\n  initialPostsCount: number = 15\n): string {\n  if (pages.length === 0) {\n    return \"<p>No modified posts found.</p>\";\n  }\n\n  const initialPages = pages.slice(0, initialPostsCount);\n  const remainingPages = pages.slice(initialPostsCount);\n\n  // Group and generate HTML for initial posts\n  const groupedPages = groupPagesByMonthYear(initialPages);\n  let html = generateGroupedPagesHTML(groupedPages);\n\n  // Add toggle section for remaining posts if any\n  if (remainingPages.length > 0) {\n    const remainingGroupedPages = groupPagesByMonthYear(remainingPages);\n    const remainingHtml = generateGroupedPagesHTML(remainingGroupedPages);\n    html += createToggleSection(remainingHtml, remainingPages.length);\n  }\n\n  // Add styling\n  return generateStyles() + html;\n}\n\n/**\n * Updates the recent posts container with post data\n * @param containerId ID of the container element to update\n * @param initialPostsCount Number of posts to show initially\n * @param doc Document instance (for testing)\n */\nexport async function updateRecentPosts(\n  containerId: string = \"last-modified-posts\",\n  initialPostsCount: number = 15,\n  doc: Document = document\n): Promise<void> {\n  console.log(\"🔍 updateRecentPosts function called\");\n\n  const recentContainer = doc.getElementById(containerId);\n  console.log(\"🔍 recent-posts container element:\", recentContainer);\n\n  if (!recentContainer) {\n    console.error(`❌ ${containerId} container not found in DOM`);\n    return; // Exit early if container not found\n  }\n\n  try {\n    console.log(\"🔍 Fetching back-links.json...\");\n\n    // Get fully processed pages from shared module\n    const sortedPages = await getProcessedPages();\n\n    // Generate HTML\n    const html = generateRecentPostsHTML(sortedPages, initialPostsCount);\n\n    // Update container\n    console.log(\n      \"🔍 Updating recent-posts content with HTML\",\n      html.substring(0, 100) + \"...\"\n    );\n    recentContainer.innerHTML = html;\n\n    // Setup toggle functionality\n    setupToggleEventListener(\n      \"remaining-posts-toggle\",\n      \"remaining-posts-content\",\n      doc\n    );\n\n    console.log(\"✅ Recent posts updated successfully\");\n  } catch (error) {\n    console.error(\"❌ Error loading recent posts:\", error);\n    recentContainer.innerHTML =\n      \"<p>Error loading modified posts. Please try again later.</p>\";\n  }\n}\n\n/**\n * Initializes the recent posts component\n * @param containerId ID of the container element\n * @param doc Document instance (for testing)\n */\nexport function initRecentAllPosts(\n  containerId: string = \"last-modified-posts\",\n  doc: Document = document\n): void {\n  console.log(\"🔍 initRecentAllPosts called\");\n\n  // Check if document is already loaded\n  if (doc.readyState === \"loading\") {\n    // Document still loading, add event listener\n    console.log(\"🔍 Document still loading, adding DOMContentLoaded listener\");\n    doc.addEventListener(\"DOMContentLoaded\", () => {\n      console.log(\n        \"🔍 DOMContentLoaded event fired, calling updateRecentPosts()\"\n      );\n      updateRecentPosts(containerId, 15, doc);\n    });\n  } else {\n    // Document already loaded, run immediately\n    console.log(\n      \"🔍 Document already loaded, calling updateRecentPosts() immediately\"\n    );\n    updateRecentPosts(containerId, 15, doc);\n  }\n\n  console.log(\"🔍 initRecentAllPosts completed initial setup\");\n}\n","//\n//  graph.ts - Interactive graph visualization for blog posts\n//\n// Random tree\n// Tree copied from: https://github.com/vasturiano/force-graph\nconsole.log(\"Load force graph in TS v 0.9\");\nimport { get_link_info, MakeBackLinkHTML } from \"./shared\";\n//import ForceGraph from \"force-graph\";\n\n// Define variables that are used but not declared\ndeclare var ForceGraph: any;\n\n/**\n * Checks if a URL is present in the list of pages\n * @param pages Array of page objects\n * @param url URL to check\n * @returns true if URL exists in pages\n */\nexport function is_valid_url(pages, url) {\n  if (typeof url !== \"string\") {\n    console.log(\"Invalid URL type:\", typeof url);\n    return false;\n  }\n\n  // Check if the exact URL exists in pages\n  if (pages.map(p => p.url).includes(url)) {\n    return true;\n  }\n\n  // Try more flexible matching for URLs that might have different formats\n  // e.g., with or without trailing slashes, or with different prefixes\n  const normalizedUrl = url.replace(/^\\//, \"\").replace(/\\/$/, \"\");\n  const normalizedPageUrls = pages.map(p =>\n    p.url.replace(/^\\//, \"\").replace(/\\/$/, \"\")\n  );\n\n  return normalizedPageUrls.includes(normalizedUrl);\n}\n\n/**\n * Find a node in pages by URL\n * @param pages Array of page objects\n * @param url URL to find\n * @returns Page object or undefined if not found\n */\nexport function node_for_url(pages, url) {\n  // First try exact match\n  const exactMatch = pages.filter(p => p.url === url)[0];\n  if (exactMatch) {\n    return exactMatch;\n  }\n\n  // Try normalized match (without leading/trailing slashes)\n  const normalizedUrl = url.replace(/^\\//, \"\").replace(/\\/$/, \"\");\n  const normalizedMatch = pages.filter(\n    p => p.url.replace(/^\\//, \"\").replace(/\\/$/, \"\") === normalizedUrl\n  )[0];\n\n  return normalizedMatch;\n}\n\n/**\n * Build links between pages based on outgoing and incoming links\n * @param pages Array of page objects\n * @returns Array of link objects {source, target, value}\n */\nexport function build_links(pages) {\n  // build links\n  const links = [];\n\n  // Regular link building for multiple expanded pages\n  pages.forEach(page => {\n    // Ensure we have arrays even if they're undefined in the data\n    const outgoingLinks = page.outgoing_links || [];\n    const incomingLinks = page.incoming_links || [];\n\n    // Get all combined links\n    const combinedLinks = [...outgoingLinks, ...incomingLinks];\n\n    // Check if each link is valid and add it\n    combinedLinks.forEach(targetUrl => {\n      // Try to find the target node\n      const targetNode = node_for_url(g_pages, targetUrl);\n      if (targetNode) {\n        links.push({ source: page, target: targetUrl, value: 1 });\n      }\n    });\n\n    // Check if we added any links for this page\n    const pageLinks = links.filter(link => link.source === page);\n\n    if (pageLinks.length === 0 && page.url === \"/eulogy\") {\n      console.log(`No valid links found for ${page.url}`);\n    }\n  });\n\n  return links;\n}\n\n/**\n * Build graph data from pages, showing only expanded pages and their links\n * @param pages Array of page objects\n * @returns Object with nodes and links arrays\n */\nexport function build_graph_data(pages) {\n  const visible_pages = pages.filter(page => page.expanded);\n\n  // Find eulogy node and check its links\n  const eulogyNode = pages.find(p => p.url === \"/eulogy\");\n  if (!eulogyNode) {\n    console.log(\"Eulogy node not found in pages\");\n  }\n\n  const visible_links = build_links(visible_pages);\n\n  const newly_visible_pages = visible_links\n    .map(l => node_for_url(pages, l.target))\n    .filter(node => node); // Filter out nulls/undefined\n\n  // update visible pages with newly visible ones\n  const combined_pages = visible_pages.concat(newly_visible_pages);\n\n  return {\n    nodes: combined_pages,\n    links: visible_links,\n  };\n}\n\n/**\n * Render node labels on canvas\n * @param node Node object to render\n * @param ctx Canvas context\n * @param globalScale Current zoom scale\n */\nexport function TextLabelNodeCanvas(node, ctx, globalScale: number) {\n  const outgoingCount = node.outgoing_links.length;\n  const expandedText = node.expanded ? \"-\" : `+${outgoingCount}`;\n  const label = node.id + \" [\" + expandedText + \"]\";\n  const fontSize = 12 / globalScale;\n  ctx.font = `${fontSize}px Sans-Serif`;\n  const textWidth = ctx.measureText(label).width;\n  const bckgDimensions = [textWidth, fontSize].map(n => n + fontSize * 0.2); // some padding\n\n  ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n  ctx.fillRect(\n    node.x - bckgDimensions[0] / 2,\n    node.y - bckgDimensions[1] / 2,\n    ...bckgDimensions\n  );\n\n  ctx.textAlign = \"center\";\n  ctx.textBaseline = \"middle\";\n  ctx.fillStyle = node.color;\n  ctx.fillText(label, node.x, node.y);\n\n  node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n}\n\n/**\n * Paint node pointer area\n * @param node Node object\n * @param color Color to fill with\n * @param ctx Canvas context\n */\nexport function TextLabelNodePointerAreaPaint(node, color, ctx) {\n  ctx.fillStyle = color;\n  const bckgDimensions = node.__bckgDimensions;\n  bckgDimensions &&\n    ctx.fillRect(\n      node.x - bckgDimensions[0] / 2,\n      node.y - bckgDimensions[1] / 2,\n      ...bckgDimensions\n    );\n}\n\n// Variables used in the graph module\nlet g_pages = [];\nlet g_last_detail_node = null;\nlet Graph = null;\n\n/**\n * Centers the graph on a node and updates detail view\n * @param node Node to center on\n */\nexport function center_on_node(node) {\n  if (!Graph) {\n    console.log(\"Cannot center: Graph not initialized\");\n    return;\n  }\n  if (!node) {\n    console.log(\"Cannot center: Node is null or undefined\");\n    return;\n  }\n\n  Graph.centerAt(node.x, node.y, 500);\n  Graph.zoom(8, 500);\n  update_detail(node);\n}\n\n/**\n * Updates the detail panel with node information\n * @param page Node to display details for\n */\nexport function update_detail(page) {\n  if (!page) {\n    return;\n  }\n\n  // replace html of element of id above with the page\n  g_last_detail_node = page;\n  const html = MakeBackLinkHTML(page);\n\n  const detail = document.getElementById(\"detail\");\n  if (detail) {\n    detail.innerHTML = html;\n  }\n}\n\n/**\n * Opens the current node in a new tab\n */\nexport function open_goto_control() {\n  if (g_last_detail_node) {\n    if (g_last_detail_node.url) {\n      window.open(g_last_detail_node.url, \"_blank\");\n    } else {\n      console.log(\"Active node has no URL\");\n    }\n  } else {\n    console.log(\"No active node to go to\");\n  }\n}\n\n/**\n * Collapses all nodes except the active node\n */\nexport function collapse_all_except_active() {\n  g_pages.forEach(p => {\n    p.expanded = false;\n  });\n  if (g_last_detail_node) {\n    g_last_detail_node.expanded = true;\n  }\n  if (Graph) {\n    Graph.graphData(build_graph_data(g_pages));\n\n    // Center on the active node after collapsing\n    if (g_last_detail_node) {\n      setTimeout(() => {\n        center_on_node(g_last_detail_node);\n      }, 300);\n    }\n  }\n}\n\n/**\n * Initialize the graph visualization\n */\nexport async function initializeGraph() {\n  // Exit early if we're not on a page with a graph\n  const graphElement = document.getElementById(\"graph\");\n  if (!graphElement) {\n    console.log(\"Graph element not found, exiting initialization\");\n    return;\n  }\n\n  const first_expanded = window.location.hash.substr(1);\n\n  // Uncollapse any page wtih the url == eulogy\n  function is_initial_expanded(node) {\n    if (node.url == first_expanded) {\n      return true;\n    }\n    return false;\n  }\n\n  g_pages = Object.values(await get_link_info()).map(p => ({\n    ...p,\n    id: p.url,\n    expanded: false,\n  }));\n\n  const slug =\n    \"/\" + (window.location.hash ? window.location.hash.substr(1) : \"\");\n\n  const initial_expanded_url = g_pages.map(p => p.url).includes(slug)\n    ? slug\n    : \"/eulogy\";\n\n  g_pages.forEach(p => {\n    p.expanded = p.url == initial_expanded_url;\n  });\n\n  // If ForceGraph isn't defined, return\n  if (typeof ForceGraph === \"undefined\") {\n    console.log(\"Force Graph not defined, exiting initialization\");\n    return;\n  }\n\n  Graph = ForceGraph()(document.getElementById(\"graph\"))\n    .graphData(build_graph_data(g_pages))\n    .nodeLabel(\"id\")\n    .nodeAutoColorBy(\"group\")\n    .nodeCanvasObject(TextLabelNodeCanvas)\n    .nodePointerAreaPaint(TextLabelNodePointerAreaPaint)\n    .onNodeRightClick(node => {\n      // Open the node in a new tab\n      window.open(node.url, \"_blank\");\n    })\n    .onNodeClick(node => {\n      // count expanded nodes\n      node.expanded = !node.expanded;\n      const expanded_nodes = g_pages.filter(p => p.expanded).length;\n      if (expanded_nodes == 0) {\n        // re-expand me.\n        node.expanded = true;\n      }\n      Graph.graphData(build_graph_data(g_pages));\n\n      // center on node in 300 ms, post graph update\n      setTimeout(() => {\n        center_on_node(node);\n      }, 300);\n    });\n\n  const initialNode = node_for_url(g_pages, initial_expanded_url);\n  if (initialNode) {\n    center_on_node(initialNode);\n  } else {\n    console.log(\"Initial node not found, cannot center\");\n  }\n\n  // set click handler for center control\n  const centerControl = document.getElementById(\"center_control\");\n  if (centerControl) {\n    centerControl.addEventListener(\"click\", () => {\n      if (g_last_detail_node) {\n        center_on_node(g_last_detail_node);\n      } else {\n        console.log(\"No last detail node to center on\");\n      }\n    });\n  } else {\n    console.log(\"Center control element not found\");\n  }\n\n  // set click handler for goto control\n  const gotoControl = document.getElementById(\"goto_control\");\n  if (gotoControl) {\n    gotoControl.addEventListener(\"click\", open_goto_control);\n  }\n\n  // set click handler for collapse control\n  const collapseControl = document.getElementById(\"collapse_control\");\n  if (collapseControl) {\n    collapseControl.addEventListener(\"click\", collapse_all_except_active);\n  }\n}\n\n// Make initializeGraph available in the global scope if needed for testing\nif (typeof window !== \"undefined\") {\n  window[\"initializeGraph\"] = initializeGraph;\n}\n","/**\n * Header Copy Link Feature\n * Adds a copy link icon to headers that allows users to copy the URL with anchor\n * Handles domain remapping from idvork.in to idvorkin.azurewebsites.net\n */\n\ninterface CopyLinkOptions {\n  iconClass?: string;\n  tooltipDuration?: number;\n  domainMapping?: {\n    from: string;\n    to: string;\n  };\n}\n\nconst DEFAULT_OPTIONS: CopyLinkOptions = {\n  iconClass: 'header-copy-link',\n  tooltipDuration: 2000,\n  domainMapping: {\n    from: 'idvork.in/',\n    to: 'idvorkin.azurewebsites.net/'\n  }\n};\n\n/**\n * Creates the copy link icon element\n */\nfunction createCopyLinkIcon(options: CopyLinkOptions): HTMLElement {\n  const icon = document.createElement('span');\n  icon.className = options.iconClass || DEFAULT_OPTIONS.iconClass!;\n  icon.innerHTML = '🔗'; // Using emoji for now, can be replaced with SVG icon\n  icon.title = 'Copy link to this section';\n  icon.style.cursor = 'pointer';\n  icon.style.marginLeft = '0.5rem';\n  icon.style.opacity = '0';\n  icon.style.transition = 'opacity 0.2s ease';\n  icon.style.fontSize = '0.8em';\n  icon.style.userSelect = 'none';\n  \n  return icon;\n}\n\n/**\n * Shows a temporary tooltip indicating the link was copied\n */\nfunction showCopiedTooltip(element: HTMLElement, duration: number = 2000): void {\n  const tooltip = document.createElement('span');\n  tooltip.textContent = 'Copied!';\n  tooltip.style.position = 'absolute';\n  tooltip.style.backgroundColor = '#333';\n  tooltip.style.color = 'white';\n  tooltip.style.padding = '4px 8px';\n  tooltip.style.borderRadius = '4px';\n  tooltip.style.fontSize = '12px';\n  tooltip.style.zIndex = '1000';\n  tooltip.style.marginLeft = '10px';\n  tooltip.style.marginTop = '-5px';\n  \n  element.parentElement?.appendChild(tooltip);\n  \n  setTimeout(() => {\n    tooltip.remove();\n  }, duration);\n}\n\n/**\n * Transforms the URL according to the domain mapping rules\n */\nfunction transformUrl(url: string, options: CopyLinkOptions): string {\n  let transformedUrl = url;\n  \n  // Always transform localhost to production domain\n  transformedUrl = transformedUrl.replace('localhost:4000/', 'idvorkin.azurewebsites.net/');\n  \n  // Also handle the production domain mapping if configured\n  if (options.domainMapping) {\n    transformedUrl = transformedUrl.replace(\n      options.domainMapping.from, \n      options.domainMapping.to\n    );\n  }\n  \n  // Remove the hash character but keep the anchor as part of the path\n  // Transform: http://example.com/page#anchor -> http://example.com/page/anchor\n  transformedUrl = transformedUrl.replace('#', '/');\n  \n  return transformedUrl;\n}\n\n/**\n * Copies the header link to clipboard\n */\nasync function copyHeaderLink(headerId: string, options: CopyLinkOptions): Promise<void> {\n  try {\n    // Get the current URL without any existing hash\n    const baseUrl = window.location.href.split('#')[0];\n    const fullUrl = `${baseUrl}#${headerId}`;\n    \n    // Apply URL transformation\n    const transformedUrl = transformUrl(fullUrl, options);\n    \n    // Copy to clipboard\n    await navigator.clipboard.writeText(transformedUrl);\n    \n    console.log(`Copied header link: ${transformedUrl}`);\n  } catch (error) {\n    console.error('Failed to copy header link:', error);\n    \n    // Fallback for older browsers\n    const textArea = document.createElement('textarea');\n    const baseUrl = window.location.href.split('#')[0];\n    const fullUrl = `${baseUrl}#${headerId}`;\n    const transformedUrl = transformUrl(fullUrl, options);\n    \n    textArea.value = transformedUrl;\n    document.body.appendChild(textArea);\n    textArea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textArea);\n  }\n}\n\n/**\n * Gets or creates an ID for a header element\n */\nfunction getOrCreateHeaderId(header: HTMLElement): string {\n  if (header.id) {\n    return header.id;\n  }\n  \n  // Create an ID from the header text\n  const text = header.textContent || '';\n  const id = text\n    .toLowerCase()\n    .replace(/[^\\w\\s-]/g, '') // Remove special characters\n    .replace(/\\s+/g, '-') // Replace spaces with hyphens\n    .replace(/-+/g, '-') // Replace multiple hyphens with single\n    .replace(/^-|-$/g, ''); // Remove leading/trailing hyphens\n  \n  // Ensure uniqueness\n  let uniqueId = id;\n  let counter = 1;\n  while (document.getElementById(uniqueId)) {\n    uniqueId = `${id}-${counter}`;\n    counter++;\n  }\n  \n  header.id = uniqueId;\n  return uniqueId;\n}\n\n/**\n * Adds copy link functionality to a single header\n */\nfunction addCopyLinkToHeader(header: HTMLElement, options: CopyLinkOptions): void {\n  const headerId = getOrCreateHeaderId(header);\n  const copyIcon = createCopyLinkIcon(options);\n  \n  // Add click handler\n  copyIcon.addEventListener('click', async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    await copyHeaderLink(headerId, options);\n    showCopiedTooltip(copyIcon, options.tooltipDuration);\n  });\n  \n  // Append the icon to the header\n  header.appendChild(copyIcon);\n  \n  // Add hover effects to the header\n  header.addEventListener('mouseenter', () => {\n    copyIcon.style.opacity = '1';\n  });\n  \n  header.addEventListener('mouseleave', () => {\n    copyIcon.style.opacity = '0';\n  });\n}\n\n/**\n * Initializes the copy link feature for all headers in the content\n */\nexport function initHeaderCopyLinks(customOptions: Partial<CopyLinkOptions> = {}): void {\n  const options: CopyLinkOptions = { ...DEFAULT_OPTIONS, ...customOptions };\n  \n  // Find all headers in the main content area\n  const contentContainer = document.getElementById('content-holder') || document.body;\n  const headers = contentContainer.querySelectorAll('h1, h2, h3, h4, h5, h6');\n  \n  headers.forEach((header) => {\n    addCopyLinkToHeader(header as HTMLElement, options);\n  });\n  \n  console.log(`✅ Initialized copy links for ${headers.length} headers`);\n}\n\n/**\n * Adds CSS styles for the copy link feature\n */\nexport function addHeaderCopyLinkStyles(): void {\n  const styleId = 'header-copy-link-styles';\n  \n  // Check if styles already exist\n  if (document.getElementById(styleId)) {\n    return;\n  }\n  \n  const style = document.createElement('style');\n  style.id = styleId;\n  style.textContent = `\n    .header-copy-link {\n      opacity: 0;\n      margin-left: 0.5rem;\n      transition: opacity 0.2s ease;\n      cursor: pointer;\n      user-select: none;\n      font-size: 0.8em;\n      color: #6c757d;\n      text-decoration: none;\n    }\n    \n    .header-copy-link:hover {\n      color: #007bff;\n    }\n    \n    h1:hover .header-copy-link,\n    h2:hover .header-copy-link,\n    h3:hover .header-copy-link,\n    h4:hover .header-copy-link,\n    h5:hover .header-copy-link,\n    h6:hover .header-copy-link {\n      opacity: 1;\n    }\n    \n    /* Ensure headers have relative positioning for tooltip placement */\n    h1, h2, h3, h4, h5, h6 {\n      position: relative;\n    }\n  `;\n  \n  document.head.appendChild(style);\n}\n\n/**\n * Main initialization function - call this to enable the feature\n */\nexport function enableHeaderCopyLinks(options: Partial<CopyLinkOptions> = {}): void {\n  // Add styles\n  addHeaderCopyLinkStyles();\n  \n  // Initialize the feature\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n      initHeaderCopyLinks(options);\n    });\n  } else {\n    initHeaderCopyLinks(options);\n  }\n} "],"names":["$5c367f1c83ef0920$export$fc303307c4ed1d41","url_info","title_href","url","title","description","$5c367f1c83ef0920$export$f6f0b6976f5f23e5","list","length","Math","floor","random","$5c367f1c83ef0920$export$448332262467e042","array","currentIndex","randomIndex","$5c367f1c83ef0920$export$7691c4557333f2d2","parent_id","random_html_factory","$parent","$","console","log","new_element","empty","append","click","event","target","tagName","$5c367f1c83ef0920$var$cached_link_info","$5c367f1c83ef0920$export$46c928bda6aa7b36","isProd","current_url","window","location","href","includes","backlinks_url","response","fetch","data","json","e","error","$f0012082fffd161b$export$e6161a0b7d67cb98","Error","$f0012082fffd161b$export$29c0cdb4d4a5ddbd","pages","Object","entries","map","metadata","doc_size","last_modified","filter","page","trim","sort","a","b","Date","getTime","$3900136bb96a6238$export$ef9b662f4c71b2fc","containerId","recentPostsContainer","document","getElementById","recentPages","sortedPages","slice","p","html","$3900136bb96a6238$export$384a04fc5c755793","count","split","substring","join","innerHTML","$75f29f91bc155aaa$export$13834ebe897fc419","groupedPages","forEach","date","monthYear","toLocaleString","month","getFullYear","push","$75f29f91bc155aaa$export$aae47d45e80886f7","formattedDate","toLocaleDateString","day","$75f29f91bc155aaa$export$ef9b662f4c71b2fc","initialPostsCount","doc","recentContainer","$75f29f91bc155aaa$export$7d71baea36fe6ea9","initialPages","remainingPages","remainingHtml","$75f29f91bc155aaa$export$593755c5b8f32d8f","$75f29f91bc155aaa$export$765b6a4ea7d49a1b","toggleId","contentId","toggleElement","addEventListener","contentElement","iconElement","querySelector","style","display","classList","add","remove","$3f9e20f190ef602c$export$4f2e1db940e396be","exactMatch","normalizedUrl","replace","$3f9e20f190ef602c$export$67d6f53759d5e419","visible_pages","expanded","find","visible_links","$3f9e20f190ef602c$export$c59cea48666b1fca","links","combinedLinks","outgoing_links","incoming_links","targetUrl","$3f9e20f190ef602c$var$g_pages","source","value","pageLinks","link","newly_visible_pages","l","node","nodes","concat","$3f9e20f190ef602c$export$689fa78054fb1940","ctx","globalScale","outgoingCount","expandedText","label","id","fontSize","font","bckgDimensions","measureText","width","n","fillStyle","fillRect","x","y","textAlign","textBaseline","color","fillText","__bckgDimensions","$3f9e20f190ef602c$export$8866e4dabecf2e10","$3f9e20f190ef602c$var$g_last_detail_node","$3f9e20f190ef602c$var$Graph","$3f9e20f190ef602c$export$1d7d52f110fa8ebe","centerAt","zoom","$3f9e20f190ef602c$export$c49a752670d43944","detail","$3f9e20f190ef602c$export$fb18275420990fec","open","$3f9e20f190ef602c$export$7b4c3716009108bb","graphData","setTimeout","$3f9e20f190ef602c$export$82c630a16d9c47e8","hash","substr","values","slug","initial_expanded_url","ForceGraph","nodeLabel","nodeAutoColorBy","nodeCanvasObject","nodePointerAreaPaint","onNodeRightClick","onNodeClick","initialNode","centerControl","gotoControl","collapseControl","$1e071d2722b0abf5$var$DEFAULT_OPTIONS","iconClass","tooltipDuration","domainMapping","from","to","$1e071d2722b0abf5$var$transformUrl","options","transformedUrl","$1e071d2722b0abf5$var$copyHeaderLink","headerId","baseUrl","fullUrl","navigator","clipboard","writeText","textArea","createElement","body","appendChild","select","execCommand","removeChild","$1e071d2722b0abf5$export$6d9d369543f03cfd","customOptions","headers","contentContainer","querySelectorAll","header","$1e071d2722b0abf5$var$addCopyLinkToHeader","$1e071d2722b0abf5$var$getOrCreateHeaderId","text","textContent","toLowerCase","uniqueId","counter","copyIcon","$1e071d2722b0abf5$var$createCopyLinkIcon","icon","className","cursor","marginLeft","opacity","transition","userSelect","preventDefault","stopPropagation","$1e071d2722b0abf5$var$showCopiedTooltip","element","duration","tooltip","position","backgroundColor","padding","borderRadius","zIndex","marginTop","parentElement","$1e071d2722b0abf5$export$73539f6b6ed07dd3","$1e071d2722b0abf5$export$4f84c6cccfa3ee4f","styleId","head","readyState","$417ebc8475d6fc5d$var$tocExpand","$417ebc8475d6fc5d$var$checkExpandToggle","toc","toggle","warn","addClass","removeClass","$417ebc8475d6fc5d$var$ForceShowRightSideBar","mainContent","tocDropUp","$417ebc8475d6fc5d$var$generateToc","showPinToc","Toc","level","top","class","ulClass","targetId","tocMenu","backToTop","gotoBottom","forceSideBar","scrollTo","scrollHeight","$417ebc8475d6fc5d$var$AddLinksToPage","allUrls","page_path","backlinks","frontlinks","URL","pathname","message","String","link_parent_location","incoming_location","sort_descending_by_size","Number","clean_front_links","outgoing_location","graph_location","stripped_page_path","$417ebc8475d6fc5d$var$make_html_summary_link_error","attr","$417ebc8475d6fc5d$var$add_link_loader","$417ebc8475d6fc5d$var$AddSummarysToPage","backLinks","summary_links","makeArray","raw_link","ref","redirects","undefined","$417ebc8475d6fc5d$var$make_html_summary_link","attribution","$417ebc8475d6fc5d$var$get_back_links","$417ebc8475d6fc5d$var$cached_back_links","backlinksJson","getJSON","$417ebc8475d6fc5d$var$keyboard_shortcut_loader","mouseTrap","Mousetrap","bind","$417ebc8475d6fc5d$var$SwapProdAndTest","prodPrefix","testPrefix","newURL","shortcutHelp","alert","$417ebc8475d6fc5d$var$replaceListPlaceholdersInTables","$417ebc8475d6fc5d$var$replacePlaceholdersWithLists","listReplacements","placeholderText","placeholderLink","fn","first","listClone","cloneNode","children","replaceWith","$417ebc8475d6fc5d$var$buildListReplacementMap","replacements","lists","toArray","Array","firstListItem","firstElementChild","firstItemText","startsWith","isNaN","parseInt","$417ebc8475d6fc5d$export$38653e1d7f0b5689","ready","load_globals","get_link_info","shuffle","random_from_list","append_randomizer_div","enableHeaderCopyLinks"],"version":3,"file":"main.js.map"}