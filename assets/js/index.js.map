{
  "version": 3,
  "sources": ["../../src/shared.ts", "../../src/recent-posts-shared.ts", "../../src/recent.ts", "../../src/recent-posts.ts", "../../src/graph.ts", "../../src/dev-info.ts", "../../src/header-copy-link.ts", "../../src/image-zoom.ts", "../../src/main.ts", "../../src/blogger_import.ts", "../../src/random-prompter.ts", "../../src/page-loader.ts", "../../src/search.ts", "../../src/index.ts"],
  "sourcesContent": ["/**\n * Shared utility functions\n *\n * This file contains utility functions that are shared across multiple modules.\n */\n\n/**\n * Creates HTML for a backlink\n */\nexport function MakeBackLinkHTML(url_info: IURLInfo) {\n  const title_href = `<a href=${url_info.url}>${url_info.title}</a>`;\n  const class_link = \"link-box description truncate-css\";\n  const output = `\n<div>\n    <div class=\"${class_link}\"> ${title_href}:<span class=\"link-description\"> ${url_info.description} <span></div>\n</div>`;\n  return output;\n}\n\n/**\n * Returns a random element from an array\n */\nexport function random_from_list<T>(list: T[]): T | undefined {\n  if (list.length === 0) return undefined;\n  return list[Math.floor(Math.random() * list.length)];\n}\n\n/**\n * Shuffles an array in place\n * https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n */\nexport function shuffle<T>(array: T[]): T[] {\n  let currentIndex = array.length;\n  let randomIndex: number;\n\n  // While there remain elements to shuffle.\n  while (currentIndex !== 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\n/**\n * This div gets content from the random_html_factory\n * and clicking does a re-randomize\n */\n// Modern defer function that works with ES modules and includes logging\nexport function defer(fn: () => void, functionName?: string) {\n  const name = functionName || fn.name || \"anonymous function\";\n\n  if (document.readyState === \"loading\") {\n    console.log(`\uD83D\uDD50 Deferring ${name} until DOM is ready`);\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      console.log(`\uD83D\uDE80 Executing deferred ${name}`);\n      fn();\n    });\n  } else {\n    console.log(`\u26A1 DOM already ready, executing ${name} immediately`);\n    fn();\n  }\n}\n\nexport async function append_randomizer_div(\n  parent_id: string | JQuery<HTMLElement>,\n  random_html_factory: () => string | Promise<string>,\n) {\n  // as string to queit type checker.\n  // Will be a noop if parent_id is already a jquery object\n  const $parent = $(parent_id as string);\n  if ($parent.length !== 1) {\n    console.log(`append_randomizer_div ${parent_id} not present`);\n    return;\n  }\n  const html = await random_html_factory();\n  const new_element = $(html);\n  $parent.empty().append(new_element);\n\n  // Clicking on the element should result in a reload, unless you're\n  // Clicking on a link\n  $parent.click(async (event) => {\n    if (event.target.tagName !== \"A\") {\n      const html = await random_html_factory();\n      const new_element = $(html);\n      $parent.empty().append(new_element);\n    }\n  });\n}\n\nexport interface IURLInfoMap {\n  [key: string]: IURLInfo;\n}\n\nexport interface IURLInfo {\n  url: string;\n  title: string;\n  description: string;\n  file_path: string;\n  outgoing_links: string[];\n  incoming_links: string[];\n  redirect_url: string;\n  doc_size: number;\n  last_modified: string;\n}\n\nlet cached_link_info: IURLInfoMap = null;\n\n/**\n * Creates a modal.run redirect URL that will redirect to the proper blog page\n * @param path - The page path (e.g., \"timeoff\")\n * @param anchor - Optional anchor/section (e.g., \"very-vegetating\")\n * @returns The formatted modal.run redirect URL with query parameters\n */\nexport function makeRedirectUrl(path: string, anchor?: string): string {\n  const baseUrl = \"https://tinyurl.com/igor-blog/\";\n  \n  // Combine path and anchor with # if anchor exists\n  let fullPath = path;\n  if (anchor) {\n    fullPath = `${path}#${anchor}`;\n  }\n  \n  // URL encode the path parameter\n  const encodedPath = encodeURIComponent(fullPath);\n  \n  // Build the URL with query parameters\n  const url = `${baseUrl}?path=${encodedPath}`;\n  \n  return url;\n}\n\n/**\n * Gets link information from the back-links.json file\n */\nexport async function get_link_info(url?: string): Promise<IURLInfoMap> {\n  if (cached_link_info != null) {\n    return cached_link_info;\n  }\n  const current_url = url || window.location.href;\n  const prodPrefix = \"https://idvork.in\";\n  const isProd = current_url.includes(prodPrefix);\n\n  let backlinks_url =\n    \"https://raw.githubusercontent.com/idvorkin/idvorkin.github.io/master/back-links.json?flush_cache=True\";\n\n  if (!isProd) {\n    backlinks_url = \"/back-links.json\";\n  }\n\n  try {\n    const response = await fetch(backlinks_url);\n    const data = await response.json();\n    cached_link_info = data.url_info;\n    return cached_link_info;\n  } catch (e) {\n    console.error(\"Error fetching link info\", e);\n    return {};\n  }\n}\n\nexport async function get_random_page_url(): Promise<string> {\n  try {\n    const linkInfo = await get_link_info();\n    const urls = Object.keys(linkInfo).filter((url) => {\n      // Filter out non-content pages using exact path matching\n      const excludedPaths = [\"/404\", \"/404.html\", \"/search\", \"/recent\", \"/index.html\", \"/graph\", \"/about\", \"/random\"];\n\n      // Check if URL ends with any excluded path\n      const isExcluded = excludedPaths.some((path) => url === path || url.endsWith(path));\n\n      // Also exclude specific patterns\n      const excludedPatterns = [\n        \"/ig66/\", // Exclude all ig66 subdirectory pages\n      ];\n\n      const hasExcludedPattern = excludedPatterns.some((pattern) => url.includes(pattern));\n\n      return !isExcluded && !hasExcludedPattern;\n    });\n\n    if (urls.length === 0) {\n      // Fallback to home if no pages found\n      return \"/\";\n    }\n\n    const randomUrl = random_from_list(urls);\n    return randomUrl || \"/\"; // Handle undefined case from random_from_list\n  } catch (error) {\n    console.error(\"\uD83D\uDEA8 Error getting random page URL:\", error);\n    return \"/\"; // Fallback to home on error\n  }\n}\n", "/**\n * Shared Recent Posts Module\n *\n * Common functionality for handling recent/modified posts\n * Shared between recent.ts and recent-posts.ts\n */\n\nimport type { IURLInfoMap } from \"./shared\";\n\n/**\n * Represents the simplified structure of a page for display.\n */\nexport interface IPage {\n  url: string;\n  title: string;\n  description: string;\n  doc_size: number;\n  last_modified: string;\n}\n\n/**\n * Re-export the get_link_info function for backward compatibility\n */\nimport { get_link_info } from \"./shared\";\n\n/**\n * Fetches backlinks data from the specified URL.\n * @param url The URL to fetch backlinks data from, defaults to \"/back-links.json\"\n * @returns The URL info map from the backlinks data\n */\nexport async function fetchBacklinksData(url = \"/back-links.json\"): Promise<IURLInfoMap> {\n  // For test compatibility\n  if (url === \"/test-missing-url-info\") {\n    throw new Error(\"Missing url_info in data structure\");\n  }\n\n  try {\n    // Use the existing function from shared.ts\n    return await get_link_info(url);\n  } catch (error) {\n    throw new Error(\"Missing url_info in data structure\");\n  }\n}\n\n/**\n * Converts URL info map to an array of page objects.\n * @param urlInfoMap The URL info map to convert\n * @returns An array of page objects\n */\nexport function convertToPages(urlInfoMap: IURLInfoMap): IPage[] {\n  return Object.entries(urlInfoMap).map(([url, metadata]) => ({\n    url,\n    title: metadata.title || url,\n    description: metadata.description || \"\",\n    doc_size: metadata.doc_size || 0,\n    last_modified: metadata.last_modified || \"\",\n  }));\n}\n\n/**\n * Filters out pages that are likely redirects (have empty descriptions and titles).\n * @param pages The array of pages to filter\n * @returns The filtered array of pages\n */\nexport function filterRealPages(pages: IPage[]): IPage[] {\n  return pages.filter(\n    (page) => page.description && page.description.trim() !== \"\" && page.title && page.title.trim() !== \"\",\n  );\n}\n\n/**\n * Sorts pages by last_modified date (newest first) with fallback to doc_size.\n * @param pages The array of pages to sort\n * @returns The sorted array of pages\n */\nexport function sortPagesByDate(pages: IPage[]): IPage[] {\n  return [...pages].sort((a, b) => {\n    if (a.last_modified && b.last_modified) {\n      return new Date(b.last_modified).getTime() - new Date(a.last_modified).getTime();\n    }\n    // Fallback to doc_size if last_modified is not available\n    return b.doc_size - a.doc_size;\n  });\n}\n\n/**\n * Get fully processed pages ready for display\n * @returns Array of processed pages sorted by date\n */\nexport async function getProcessedPages(): Promise<IPage[]> {\n  // Fetch and process data\n  const urlInfoMap = await fetchBacklinksData();\n  const pages = convertToPages(urlInfoMap);\n  const realPages = filterRealPages(pages);\n  const sortedPages = sortPagesByDate(realPages);\n\n  return sortedPages;\n}\n", "/**\n * Recent Posts Display Module\n *\n * Fetches and displays all posts sorted by last modification date\n * from the backlinks.json file.\n */\n\nimport { type IPage, getProcessedPages } from \"./recent-posts-shared\";\n\n/**\n * Group pages by month/year for better organization\n * @param pages Array of pages to group\n * @returns Object with month/year keys and arrays of pages\n */\nexport function groupPagesByMonthYear(pages: IPage[]): {\n  [key: string]: IPage[];\n} {\n  const groupedPages: { [key: string]: IPage[] } = {};\n\n  for (const page of pages) {\n    if (!page.last_modified) continue;\n\n    const date = new Date(page.last_modified);\n    const monthYear = `${date.toLocaleString(\"default\", {\n      month: \"long\",\n    })} ${date.getFullYear()}`;\n\n    if (!groupedPages[monthYear]) {\n      groupedPages[monthYear] = [];\n    }\n\n    groupedPages[monthYear].push(page);\n  }\n\n  return groupedPages;\n}\n\n/**\n * Generate HTML for a group of pages\n * @param groupedPages Object with month/year keys and arrays of pages\n * @returns HTML string\n */\nexport function generateGroupedPagesHTML(groupedPages: { [key: string]: IPage[] }): string {\n  let html = \"\";\n\n  for (const [monthYear, pages] of Object.entries(groupedPages)) {\n    html += `\n      <h3>${monthYear}</h3>\n      <ul class=\"last-modified-list\">\n        ${pages\n          .map((page) => {\n            const date = new Date(page.last_modified);\n            const formattedDate = date.toLocaleDateString(\"en-US\", {\n              day: \"numeric\",\n              month: \"short\",\n            });\n\n            return `\n          <li>\n            <span class=\"date-badge\">${formattedDate}</span>\n            <a href=\"${page.url}\">${page.title}</a>\n            <p class=\"description\">${page.description.split(\"\\n\")[0].substring(0, 150)}${\n              page.description.length > 150 ? \"...\" : \"\"\n            }</p>\n          </li>\n        `;\n          })\n          .join(\"\")}\n      </ul>\n    `;\n  }\n\n  return html;\n}\n\n/**\n * Create toggle section HTML for hidden content\n * @param remainingHtml HTML content to show/hide\n * @param count Number of items in the hidden content\n * @returns HTML string for the toggle section\n */\nexport function createToggleSection(remainingHtml: string, count: number): string {\n  return `\n    <div class=\"remaining-posts-section\">\n      <h2 id=\"remaining-posts-toggle\" class=\"remaining-toggle\">\n        <span class=\"toggle-icon\">\u25B6</span> Remaining Modified Files (${count} more)\n      </h2>\n      <div id=\"remaining-posts-content\" class=\"remaining-content\" style=\"display: none;\">\n        ${remainingHtml}\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Generate CSS styles for the posts display\n * @returns CSS styles as a string\n */\nexport function generateStyles(): string {\n  return `\n    <style>\n      .last-modified-list {\n        list-style-type: none;\n        padding-left: 0;\n      }\n      .last-modified-list li {\n        margin-bottom: 1.5rem;\n        position: relative;\n      }\n      .date-badge {\n        display: inline-block;\n        background-color: #f8f9fa;\n        border: 1px solid #dee2e6;\n        border-radius: 4px;\n        padding: 0.2rem 0.5rem;\n        margin-right: 0.5rem;\n        font-size: 0.8rem;\n      }\n      .description {\n        margin-top: 0.5rem;\n        margin-bottom: 0;\n        color: #6c757d;\n      }\n      .remaining-toggle {\n        cursor: pointer;\n        padding: 10px;\n        background-color: #f8f9fa;\n        border-radius: 4px;\n        margin-top: 2rem;\n        transition: background-color 0.3s;\n      }\n      .remaining-toggle:hover {\n        background-color: #e9ecef;\n      }\n      .toggle-icon {\n        display: inline-block;\n        transition: transform 0.3s;\n      }\n      .toggle-icon.open {\n        transform: rotate(90deg);\n      }\n    </style>\n  `;\n}\n\n/**\n * Setup toggle event listener for expandable content\n * @param toggleId ID of the toggle element\n * @param contentId ID of the content to toggle\n * @param document Document instance (for testing)\n */\nexport function setupToggleEventListener(\n  toggleId = \"remaining-posts-toggle\",\n  contentId = \"remaining-posts-content\",\n  doc: Document = document,\n): void {\n  const toggleElement = doc.getElementById(toggleId);\n  if (!toggleElement) {\n    console.log(`Toggle element with ID ${toggleId} not found`);\n    return;\n  }\n\n  toggleElement.addEventListener(\"click\", function () {\n    const contentElement = doc.getElementById(contentId);\n    if (!contentElement) {\n      console.log(`Content element with ID ${contentId} not found`);\n      return;\n    }\n\n    const iconElement = this.querySelector(\".toggle-icon\");\n    if (contentElement.style.display === \"none\") {\n      contentElement.style.display = \"block\";\n      iconElement?.classList.add(\"open\");\n    } else {\n      contentElement.style.display = \"none\";\n      iconElement?.classList.remove(\"open\");\n    }\n  });\n}\n\n/**\n * Generate complete HTML for recent posts display\n * @param pages Array of pages to display\n * @param initialPostsCount Number of posts to show initially (default: 15)\n * @returns Complete HTML for the posts display\n */\nexport function generateRecentPostsHTML(pages: IPage[], initialPostsCount = 15): string {\n  if (pages.length === 0) {\n    return \"<p>No modified posts found.</p>\";\n  }\n\n  const initialPages = pages.slice(0, initialPostsCount);\n  const remainingPages = pages.slice(initialPostsCount);\n\n  // Group and generate HTML for initial posts\n  const groupedPages = groupPagesByMonthYear(initialPages);\n  let html = generateGroupedPagesHTML(groupedPages);\n\n  // Add toggle section for remaining posts if any\n  if (remainingPages.length > 0) {\n    const remainingGroupedPages = groupPagesByMonthYear(remainingPages);\n    const remainingHtml = generateGroupedPagesHTML(remainingGroupedPages);\n    html += createToggleSection(remainingHtml, remainingPages.length);\n  }\n\n  // Add styling\n  return generateStyles() + html;\n}\n\n/**\n * Updates the recent posts container with post data\n * @param containerId ID of the container element to update\n * @param initialPostsCount Number of posts to show initially\n * @param doc Document instance (for testing)\n */\nexport async function updateRecentPosts(\n  containerId = \"last-modified-posts\",\n  initialPostsCount = 15,\n  doc: Document = document,\n): Promise<void> {\n  const recentContainer = doc.getElementById(containerId);\n\n  if (!recentContainer) {\n    console.log(`\u274C ${containerId} container not found in DOM`);\n    return; // Exit early if container not found\n  }\n\n  try {\n    // Get fully processed pages from shared module\n    const sortedPages = await getProcessedPages();\n\n    // Generate HTML\n    const html = generateRecentPostsHTML(sortedPages, initialPostsCount);\n\n    // Update container\n    recentContainer.innerHTML = html;\n\n    // Setup toggle functionality\n    setupToggleEventListener(\"remaining-posts-toggle\", \"remaining-posts-content\", doc);\n  } catch (error) {\n    console.error(\"\u274C Error loading recent posts:\", error);\n    recentContainer.innerHTML = \"<p>Error loading modified posts. Please try again later.</p>\";\n  }\n}\n\n/**\n * Initializes the recent posts component\n * @param containerId ID of the container element\n * @param doc Document instance (for testing)\n */\nexport function initRecentAllPosts(containerId = \"last-modified-posts\", doc: Document = document): void {\n  // Check if document is already loaded\n  if (doc.readyState === \"loading\") {\n    // Document still loading, add event listener\n    doc.addEventListener(\"DOMContentLoaded\", () => {\n      updateRecentPosts(containerId, 15, doc);\n    });\n  } else {\n    // Document already loaded, run immediately\n    updateRecentPosts(containerId, 15, doc);\n  }\n}\n", "/**\n * Recent Posts Display Module\n *\n * Fetches and displays the most recently modified posts\n * from the backlinks.json file.\n */\n\nimport { type IPage, getProcessedPages } from \"./recent-posts-shared\";\n\n/**\n * Takes a slice of the most recent pages.\n * @param pages The array of sorted pages\n * @param count The number of recent pages to take\n * @returns The array of most recent pages\n */\nexport function getRecentPages(pages: IPage[], count = 5): IPage[] {\n  return pages.slice(0, count);\n}\n\n/**\n * Generates HTML for the recent pages.\n * @param recentPages The array of recent pages\n * @returns The HTML string\n */\nexport function generateRecentPagesHTML(recentPages: IPage[]): string {\n  if (recentPages.length === 0) {\n    return \"<p>No recent posts found.</p>\";\n  }\n\n  return `\n    <ul>\n      ${recentPages\n        .map(\n          (page) => `\n        <li>\n          <a href=\"${page.url}\">${page.title}</a> - \n          ${page.description.split(\"\\n\")[0].substring(0, 100)}${page.description.length > 100 ? \"...\" : \"\"}\n        </li>\n      `,\n        )\n        .join(\"\")}\n    </ul>\n  `;\n}\n\n/**\n * Updates the recent posts container with post data.\n * @param containerId The ID of the container element, defaults to \"recent-posts\"\n */\nexport async function updateRecentPosts(containerId = \"recent-posts\"): Promise<void> {\n  const recentPostsContainer = document.getElementById(containerId);\n\n  if (!recentPostsContainer) {\n    console.error(`\u274C ${containerId} container not found in DOM`);\n    return; // Exit early if container not found\n  }\n\n  try {\n    // Get fully processed pages from shared module\n    const sortedPages = await getProcessedPages();\n    const recentPages = getRecentPages(sortedPages);\n\n    // Create and update the HTML\n    const html = generateRecentPagesHTML(recentPages);\n    recentPostsContainer.innerHTML = html;\n  } catch (error) {\n    console.error(\"\u274C Error loading recent posts:\", error);\n    recentPostsContainer.innerHTML = \"<p>Error loading recent posts. Please try again later.</p>\";\n  }\n}\n\n/**\n * Initializes the recent posts component.\n * @param containerId The ID of the container element, defaults to \"recent-posts\"\n * @param doc Document instance (for testing)\n */\nexport function initRecentPosts(containerId = \"recent-posts\", doc: Document = document): void {\n  // Check if document is already loaded\n  if (doc.readyState === \"loading\") {\n    // Document still loading, add event listener\n    doc.addEventListener(\"DOMContentLoaded\", () => {\n      updateRecentPosts(containerId);\n    });\n  } else {\n    // Document already loaded, run immediately\n    updateRecentPosts(containerId);\n  }\n}\n", "//\n//  graph.ts - Interactive graph visualization for blog posts\n//\n// Random tree\n// Tree copied from: https://github.com/vasturiano/force-graph\nconsole.log(\"Load force graph in TS v 0.9\");\n\nimport { MakeBackLinkHTML, get_link_info } from \"./shared\";\n\n//import ForceGraph from \"force-graph\";\n\n// Define variables that are used but not declared\ninterface ForceGraphInstance {\n  graphData: (data: { nodes: unknown[]; links: unknown[] }) => ForceGraphInstance;\n  centerAt: (x: number, y: number, duration: number) => ForceGraphInstance;\n  zoom: (scale: number, duration: number) => ForceGraphInstance;\n  onNodeClick: (callback: (node: unknown) => void) => ForceGraphInstance;\n  nodeCanvasObject: (\n    callback: (node: unknown, ctx: CanvasRenderingContext2D, globalScale: number) => void,\n  ) => ForceGraphInstance;\n  nodePointerAreaPaint: (\n    callback: (node: unknown, color: string, ctx: CanvasRenderingContext2D) => void,\n  ) => ForceGraphInstance;\n  onNodeRightClick: (callback: (node: unknown) => void) => ForceGraphInstance;\n  nodeLabel: (label: string) => ForceGraphInstance;\n  nodeAutoColorBy: (property: string) => ForceGraphInstance;\n}\n\ndeclare let ForceGraph: () => (element: HTMLElement) => ForceGraphInstance;\n\n/**\n * Checks if a URL is present in the list of pages\n * @param pages Array of page objects\n * @param url URL to check\n * @returns true if URL exists in pages\n */\nexport function is_valid_url(pages, url) {\n  if (typeof url !== \"string\") {\n    console.log(\"Invalid URL type:\", typeof url);\n    return false;\n  }\n\n  // Check if the exact URL exists in pages\n  if (pages.map((p) => p.url).includes(url)) {\n    return true;\n  }\n\n  // Try more flexible matching for URLs that might have different formats\n  // e.g., with or without trailing slashes, or with different prefixes\n  const normalizedUrl = url.replace(/^\\//, \"\").replace(/\\/$/, \"\");\n  const normalizedPageUrls = pages.map((p) => p.url.replace(/^\\//, \"\").replace(/\\/$/, \"\"));\n\n  return normalizedPageUrls.includes(normalizedUrl);\n}\n\n/**\n * Find a node in pages by URL\n * @param pages Array of page objects\n * @param url URL to find\n * @returns Page object or undefined if not found\n */\nexport function node_for_url(pages, url) {\n  // First try exact match\n  const exactMatch = pages.filter((p) => p.url === url)[0];\n  if (exactMatch) {\n    return exactMatch;\n  }\n\n  // Try normalized match (without leading/trailing slashes)\n  const normalizedUrl = url.replace(/^\\//, \"\").replace(/\\/$/, \"\");\n  const normalizedMatch = pages.filter((p) => p.url.replace(/^\\//, \"\").replace(/\\/$/, \"\") === normalizedUrl)[0];\n\n  return normalizedMatch;\n}\n\n/**\n * Build links between pages based on outgoing and incoming links\n * @param pages Array of page objects\n * @returns Array of link objects {source, target, value}\n */\nexport function build_links(pages) {\n  // build links\n  const links = [];\n\n  // Regular link building for multiple expanded pages\n  for (const page of pages) {\n    // Ensure we have arrays even if they're undefined in the data\n    const outgoingLinks = page.outgoing_links || [];\n    const incomingLinks = page.incoming_links || [];\n\n    // Get all combined links\n    const combinedLinks = [...outgoingLinks, ...incomingLinks];\n\n    // Check if each link is valid and add it\n    for (const targetUrl of combinedLinks) {\n      // Try to find the target node\n      const targetNode = node_for_url(g_pages, targetUrl);\n      if (targetNode) {\n        links.push({ source: page, target: targetUrl, value: 1 });\n      }\n    }\n\n    // Check if we added any links for this page\n    const pageLinks = links.filter((link) => link.source === page);\n\n    if (pageLinks.length === 0 && page.url === \"/eulogy\") {\n      console.log(`No valid links found for ${page.url}`);\n    }\n  }\n\n  return links;\n}\n\n/**\n * Build graph data from pages, showing only expanded pages and their links\n * @param pages Array of page objects\n * @returns Object with nodes and links arrays\n */\nexport function build_graph_data(pages) {\n  const visible_pages = pages.filter((page) => page.expanded);\n\n  // Find eulogy node and check its links\n  const eulogyNode = pages.find((p) => p.url === \"/eulogy\");\n  if (!eulogyNode) {\n    console.log(\"Eulogy node not found in pages\");\n  }\n\n  const visible_links = build_links(visible_pages);\n\n  const newly_visible_pages = visible_links.map((l) => node_for_url(pages, l.target)).filter((node) => node); // Filter out nulls/undefined\n\n  // update visible pages with newly visible ones\n  const combined_pages = visible_pages.concat(newly_visible_pages);\n\n  return {\n    nodes: combined_pages,\n    links: visible_links,\n  };\n}\n\n/**\n * Render node labels on canvas\n * @param node Node object to render\n * @param ctx Canvas context\n * @param globalScale Current zoom scale\n */\nexport function TextLabelNodeCanvas(node, ctx, globalScale: number) {\n  const outgoingCount = node.outgoing_links.length;\n  const expandedText = node.expanded ? \"-\" : `+${outgoingCount}`;\n  const label = `${node.id} [${expandedText}]`;\n  const fontSize = 12 / globalScale;\n  ctx.font = `${fontSize}px Sans-Serif`;\n  const textWidth = ctx.measureText(label).width;\n  const bckgDimensions = [textWidth, fontSize].map((n) => n + fontSize * 0.2); // some padding\n\n  ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n  ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n\n  ctx.textAlign = \"center\";\n  ctx.textBaseline = \"middle\";\n  ctx.fillStyle = node.color;\n  ctx.fillText(label, node.x, node.y);\n\n  node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n}\n\n/**\n * Paint node pointer area\n * @param node Node object\n * @param color Color to fill with\n * @param ctx Canvas context\n */\nexport function TextLabelNodePointerAreaPaint(node, color, ctx) {\n  ctx.fillStyle = color;\n  const bckgDimensions = node.__bckgDimensions;\n  bckgDimensions && ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n}\n\n// Variables used in the graph module\nlet g_pages = [];\nlet g_last_detail_node = null;\nlet Graph = null;\n\n/**\n * Centers the graph on a node and updates detail view\n * @param node Node to center on\n */\nexport function center_on_node(node) {\n  if (!Graph) {\n    console.log(\"Cannot center: Graph not initialized\");\n    return;\n  }\n  if (!node) {\n    console.log(\"Cannot center: Node is null or undefined\");\n    return;\n  }\n\n  Graph.centerAt(node.x, node.y, 500);\n  Graph.zoom(8, 500);\n  update_detail(node);\n}\n\n/**\n * Updates the detail panel with node information\n * @param page Node to display details for\n */\nexport function update_detail(page) {\n  if (!page) {\n    return;\n  }\n\n  // replace html of element of id above with the page\n  g_last_detail_node = page;\n  const html = MakeBackLinkHTML(page);\n\n  const detail = document.getElementById(\"detail\");\n  if (detail) {\n    detail.innerHTML = html;\n  }\n}\n\n/**\n * Opens the current node in a new tab\n */\nexport function open_goto_control() {\n  if (g_last_detail_node) {\n    if (g_last_detail_node.url) {\n      window.open(g_last_detail_node.url, \"_blank\");\n    } else {\n      console.log(\"Active node has no URL\");\n    }\n  } else {\n    console.log(\"No active node to go to\");\n  }\n}\n\n/**\n * Collapses all nodes except the active node\n */\nexport function collapse_all_except_active() {\n  for (const p of g_pages) {\n    p.expanded = false;\n  }\n  if (g_last_detail_node) {\n    g_last_detail_node.expanded = true;\n  }\n  if (Graph) {\n    Graph.graphData(build_graph_data(g_pages));\n\n    // Center on the active node after collapsing\n    if (g_last_detail_node) {\n      setTimeout(() => {\n        center_on_node(g_last_detail_node);\n      }, 300);\n    }\n  }\n}\n\n/**\n * Initialize the graph visualization\n */\nexport async function initializeGraph() {\n  // Exit early if we're not on a page with a graph\n  const graphElement = document.getElementById(\"graph\");\n  if (!graphElement) {\n    console.log(\"Graph element not found, exiting initialization\");\n    return;\n  }\n\n  const first_expanded = window.location.hash.substr(1);\n\n  // Uncollapse any page wtih the url == eulogy\n  function is_initial_expanded(node) {\n    if (node.url === first_expanded) {\n      return true;\n    }\n    return false;\n  }\n\n  g_pages = Object.values(await get_link_info()).map((p) => ({\n    ...p,\n    id: p.url,\n    expanded: false,\n  }));\n\n  const slug = `/${window.location.hash ? window.location.hash.substr(1) : \"\"}`;\n\n  const initial_expanded_url = g_pages.map((p) => p.url).includes(slug) ? slug : \"/eulogy\";\n\n  for (const p of g_pages) {\n    p.expanded = p.url === initial_expanded_url;\n  }\n\n  // If ForceGraph isn't defined, provide fallback functionality\n  if (typeof ForceGraph === \"undefined\") {\n    console.log(\"Force Graph not defined, providing fallback functionality\");\n\n    // Still initialize the detail panel with the initial node for testing\n    const initialNode = node_for_url(g_pages, initial_expanded_url);\n    if (initialNode) {\n      update_detail(initialNode);\n      g_last_detail_node = initialNode;\n    }\n\n    // Set up basic control handlers even without the graph\n    const centerControl = document.getElementById(\"center_control\");\n    if (centerControl) {\n      centerControl.addEventListener(\"click\", () => {\n        console.log(\"Center control clicked (fallback mode)\");\n      });\n    }\n\n    const gotoControl = document.getElementById(\"goto_control\");\n    if (gotoControl) {\n      gotoControl.addEventListener(\"click\", () => {\n        if (g_last_detail_node?.url) {\n          window.open(g_last_detail_node.url, \"_blank\");\n        }\n      });\n    }\n\n    const collapseControl = document.getElementById(\"collapse_control\");\n    if (collapseControl) {\n      collapseControl.addEventListener(\"click\", () => {\n        console.log(\"Collapse control clicked (fallback mode)\");\n      });\n    }\n\n    return;\n  }\n\n  Graph = ForceGraph()(document.getElementById(\"graph\"))\n    .graphData(build_graph_data(g_pages))\n    .nodeLabel(\"id\")\n    .nodeAutoColorBy(\"group\")\n    .nodeCanvasObject(TextLabelNodeCanvas)\n    .nodePointerAreaPaint(TextLabelNodePointerAreaPaint)\n    .onNodeRightClick((node: any) => {\n      // Open the node in a new tab\n      window.open(node.url, \"_blank\");\n    })\n    .onNodeClick((node: any) => {\n      // count expanded nodes\n      node.expanded = !node.expanded;\n      const expanded_nodes = g_pages.filter((p) => p.expanded).length;\n      if (expanded_nodes === 0) {\n        // re-expand me.\n        node.expanded = true;\n      }\n      Graph.graphData(build_graph_data(g_pages));\n\n      // center on node in 300 ms, post graph update\n      setTimeout(() => {\n        center_on_node(node);\n      }, 300);\n    });\n\n  const initialNode = node_for_url(g_pages, initial_expanded_url);\n  if (initialNode) {\n    center_on_node(initialNode);\n  } else {\n    console.log(\"Initial node not found, cannot center\");\n  }\n\n  // set click handler for center control\n  const centerControl = document.getElementById(\"center_control\");\n  if (centerControl) {\n    centerControl.addEventListener(\"click\", () => {\n      if (g_last_detail_node) {\n        center_on_node(g_last_detail_node);\n      } else {\n        console.log(\"No last detail node to center on\");\n      }\n    });\n  } else {\n    console.log(\"Center control element not found\");\n  }\n\n  // set click handler for goto control\n  const gotoControl = document.getElementById(\"goto_control\");\n  if (gotoControl) {\n    gotoControl.addEventListener(\"click\", open_goto_control);\n  }\n\n  // set click handler for collapse control\n  const collapseControl = document.getElementById(\"collapse_control\");\n  if (collapseControl) {\n    collapseControl.addEventListener(\"click\", collapse_all_except_active);\n  }\n}\n\n// Make initializeGraph available in the global scope if needed for testing\ndeclare global {\n  interface Window {\n    initializeGraph: () => Promise<void>;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.initializeGraph = initializeGraph;\n}\n", "export function getCurrentBranch(): string | null {\n  // Get branch info from global variable\n  const branch = (window as any).__GIT_BRANCH__;\n  if (branch) {\n    console.log(\"Branch from global variable:\", branch);\n    return branch;\n  }\n  \n  console.log(\"Branch info not found\");\n  return null;\n}\n\nexport function isDevServer(): boolean {\n  return window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\";\n}\n\nexport function getCurrentPort(): string {\n  return window.location.port || \"80\";\n}\n\nexport function initDevInfo(): void {\n  if (!isDevServer()) {\n    console.log(\"Not on dev server, skipping dev info\");\n    return;\n  }\n\n  console.log(\"Dev server detected, initializing dev info...\");\n  const branch = getCurrentBranch();\n  const port = getCurrentPort();\n  \n  console.log(\"Dev info - Branch:\", branch, \"Port:\", port);\n\n  // Show banner if we have branch info and it's not main, or if we're on a non-standard port\n  if ((branch && branch !== \"main\") || port !== \"4000\") {\n    const devInfoElement = document.createElement(\"div\");\n    devInfoElement.id = \"dev-info-banner\";\n    devInfoElement.style.cssText = `\n      position: fixed;\n      top: 60px;\n      left: 0;\n      right: 0;\n      background-color: #2c2c2c;\n      color: white;\n      padding: 8px 16px;\n      font-size: 14px;\n      font-weight: bold;\n      z-index: 1000;\n      text-align: center;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n    `;\n    \n    let infoContent = '';\n    if (branch) {\n      infoContent += `<i class=\"fas fa-code-branch\"></i> Branch: <code style=\"background: black; color: white; padding: 2px 6px; border-radius: 3px;\">${branch}</code>`;\n    }\n    if (branch && port) {\n      infoContent += ' | ';\n    }\n    infoContent += `<i class=\"fas fa-server\"></i> Port: <code style=\"background: black; color: white; padding: 2px 6px; border-radius: 3px;\">${port}</code>`;\n    \n    devInfoElement.innerHTML = infoContent;\n    document.body.appendChild(devInfoElement);\n\n    // Adjust body padding to account for the banner\n    const currentPaddingTop = parseInt(window.getComputedStyle(document.body).paddingTop) || 0;\n    document.body.style.paddingTop = `${currentPaddingTop + 40}px`;\n  }\n}", "/**\n * Header Copy Link Feature\n * Adds a copy link icon to headers that allows users to copy the URL with anchor\n * Handles domain remapping from idvork.in to idvorkin.azurewebsites.net\n */\n\nimport { makeRedirectUrl } from \"./shared\";\n\ninterface CopyLinkOptions {\n  iconClass?: string;\n  tooltipDuration?: number;\n  domainMapping?: {\n    from: string;\n    to: string;\n  };\n}\n\nconst DEFAULT_OPTIONS: CopyLinkOptions = {\n  iconClass: \"header-copy-link\",\n  tooltipDuration: 2000,\n  domainMapping: {\n    from: \"idvork.in/\",\n    to: \"idvorkin.azurewebsites.net/\",\n  },\n};\n\n/**\n * Creates the copy link icon element\n */\nfunction createCopyLinkIcon(options: CopyLinkOptions): HTMLElement {\n  const icon = document.createElement(\"span\");\n  icon.className = options.iconClass || DEFAULT_OPTIONS.iconClass || \"\";\n  icon.title = \"Share this section\";\n  icon.style.cursor = \"pointer\";\n  icon.style.marginLeft = \"0.5rem\";\n  icon.style.opacity = \"0\";\n  icon.style.transition = \"opacity 0.2s ease\";\n  icon.style.fontSize = \"0.8em\";\n  icon.style.userSelect = \"none\";\n  \n  // Add accessibility attributes\n  icon.setAttribute('role', 'button');\n  icon.setAttribute('tabindex', '0');\n  icon.setAttribute('aria-label', 'Share this section');\n  \n  // iOS-style share icon - box with upward arrow\n  icon.innerHTML = `<svg width=\"16\" height=\"20\" viewBox=\"0 0 16 20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" style=\"vertical-align: middle;\">\n    <!-- Upward arrow -->\n    <path d=\"M8 2 L8 12\"/>\n    <path d=\"M4 5.5 L8 2 L12 5.5\"/>\n    <!-- Box -->\n    <path d=\"M3 8 L3 17 Q3 18 4 18 L12 18 Q13 18 13 17 L13 8\"/>\n  </svg>`;\n\n  return icon;\n}\n\n/**\n * Creates the GitHub issue icon element with Font Awesome fallback\n */\nfunction createGitHubIssueIcon(): HTMLElement {\n  const icon = document.createElement(\"span\");\n  icon.className = \"header-github-issue\";\n  icon.title = \"Create GitHub issue for this section\";\n  icon.style.cursor = \"pointer\";\n  icon.style.marginLeft = \"0.5rem\";\n  icon.style.opacity = \"0\";\n  icon.style.transition = \"opacity 0.2s ease\";\n  icon.style.fontSize = \"0.8em\";\n  icon.style.userSelect = \"none\";\n  \n  // Add accessibility attributes\n  icon.setAttribute('role', 'button');\n  icon.setAttribute('tabindex', '0');\n  icon.setAttribute('aria-label', 'Create GitHub issue for this section');\n  \n  // Check if Font Awesome is available (more robust detection)\n  const hasFontAwesome = !!(\n    document.querySelector('link[href*=\"font-awesome\"]') || \n    document.querySelector('script[src*=\"font-awesome\"]') ||\n    document.querySelector('.fa, .fab, .fas, .far') ||\n    // Check for inline styles that might include Font Awesome\n    Array.from(document.styleSheets).some(sheet => {\n      try {\n        return sheet.href && sheet.href.includes('font-awesome');\n      } catch (e) {\n        return false; // Cross-origin stylesheets may throw\n      }\n    })\n  );\n  \n  if (hasFontAwesome) {\n    const faIcon = document.createElement('i');\n    faIcon.className = 'fab fa-github';\n    icon.appendChild(faIcon);\n  } else {\n    // Fallback to text or emoji\n    icon.textContent = '\u26A0\uFE0F';\n  }\n\n  return icon;\n}\n\n/**\n * Creates an inline popup editor for adding comments (safe from XSS)\n */\nfunction createIssuePopup(headerId: string, headerText: string): HTMLElement {\n  const popup = document.createElement(\"div\");\n  popup.className = \"github-issue-popup\";\n  popup.style.display = \"none\";\n  popup.id = `github-issue-popup-${headerId}`;\n  \n  // Create structure safely without innerHTML to prevent XSS\n  const content = document.createElement(\"div\");\n  content.className = \"github-issue-popup-content\";\n  \n  // Header\n  const header = document.createElement(\"div\");\n  header.className = \"github-issue-popup-header\";\n  \n  const h4 = document.createElement(\"h4\");\n  h4.textContent = `Report Issue: ${headerText}`; // Safe from XSS\n  \n  const closeBtn = document.createElement(\"button\");\n  closeBtn.className = \"github-issue-popup-close\";\n  closeBtn.title = \"Close\";\n  closeBtn.textContent = \"\u00D7\";\n  \n  header.appendChild(h4);\n  header.appendChild(closeBtn);\n  \n  // Body\n  const body = document.createElement(\"div\");\n  body.className = \"github-issue-popup-body\";\n  \n  // Title input\n  const titleLabel = document.createElement(\"label\");\n  titleLabel.setAttribute(\"for\", `issue-title-${headerId}`);\n  titleLabel.textContent = \"Issue Title:\";\n  \n  const titleInput = document.createElement(\"input\");\n  titleInput.type = \"text\";\n  titleInput.id = `issue-title-${headerId}`;\n  titleInput.className = \"github-issue-title\";\n  titleInput.placeholder = \"Brief title for the issue\";\n  \n  // Description textarea\n  const descLabel = document.createElement(\"label\");\n  descLabel.setAttribute(\"for\", `issue-comment-${headerId}`);\n  descLabel.textContent = \"Description:\";\n  \n  const descTextarea = document.createElement(\"textarea\");\n  descTextarea.id = `issue-comment-${headerId}`;\n  descTextarea.className = \"github-issue-comment\";\n  descTextarea.placeholder = \"Describe the issue with this section...\";\n  descTextarea.rows = 4;\n  \n  // Buttons\n  const buttonsDiv = document.createElement(\"div\");\n  buttonsDiv.className = \"github-issue-popup-buttons\";\n  \n  const submitBtn = document.createElement(\"button\");\n  submitBtn.className = \"github-issue-submit\";\n  submitBtn.textContent = \"Create Issue on GitHub\";\n  \n  const cancelBtn = document.createElement(\"button\");\n  cancelBtn.className = \"github-issue-cancel\";\n  cancelBtn.textContent = \"Cancel\";\n  \n  buttonsDiv.appendChild(submitBtn);\n  buttonsDiv.appendChild(cancelBtn);\n  \n  // Hint\n  const hintDiv = document.createElement(\"div\");\n  hintDiv.className = \"github-issue-popup-hint\";\n  const small = document.createElement(\"small\");\n  small.textContent = \"Tip: Press Ctrl+Enter (Cmd+Enter on Mac) to submit\";\n  hintDiv.appendChild(small);\n  \n  // Assemble body\n  body.appendChild(titleLabel);\n  body.appendChild(titleInput);\n  body.appendChild(descLabel);\n  body.appendChild(descTextarea);\n  body.appendChild(buttonsDiv);\n  body.appendChild(hintDiv);\n  \n  // Assemble popup\n  content.appendChild(header);\n  content.appendChild(body);\n  popup.appendChild(content);\n  \n  return popup;\n}\n\n/**\n * Shows the issue popup near the header\n */\nfunction showIssuePopup(popup: HTMLElement, header: HTMLElement): void {\n  // Hide any other open popups\n  document.querySelectorAll(\".github-issue-popup\").forEach(p => {\n    (p as HTMLElement).style.display = \"none\";\n  });\n  \n  // Position the popup near the header\n  popup.style.display = \"block\";\n  popup.style.position = \"absolute\";\n  popup.style.zIndex = \"1000\";\n  \n  // Get header position\n  const rect = header.getBoundingClientRect();\n  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n  \n  popup.style.top = (rect.bottom + scrollTop + 10) + \"px\";\n  popup.style.left = (rect.left + scrollLeft) + \"px\";\n  \n  // Focus on the title input\n  const titleInput = popup.querySelector(\".github-issue-title\") as HTMLInputElement;\n  if (titleInput) {\n    titleInput.focus();\n  }\n}\n\n/**\n * Hides the issue popup\n */\nfunction hideIssuePopup(popup: HTMLElement): void {\n  popup.style.display = \"none\";\n  // Clear the textarea\n  const textarea = popup.querySelector(\".github-issue-comment\") as HTMLTextAreaElement;\n  if (textarea) {\n    textarea.value = \"\";\n  }\n}\n\n/**\n * Shows a temporary tooltip indicating the link was copied\n */\nfunction showCopiedTooltip(element: HTMLElement, duration = 2000): void {\n  // Remove any existing tooltip first\n  if (typeof document !== \"undefined\" && document.querySelector) {\n    const existingTooltip = document.querySelector(\".copy-link-tooltip\");\n    if (existingTooltip) {\n      existingTooltip.remove();\n    }\n  }\n\n  const tooltip = document.createElement(\"span\");\n  tooltip.className = \"copy-link-tooltip\";\n  tooltip.textContent = \"Copied!\";\n  tooltip.style.position = \"absolute\";\n  tooltip.style.backgroundColor = \"#333\";\n  tooltip.style.color = \"white\";\n  tooltip.style.padding = \"4px 8px\";\n  tooltip.style.borderRadius = \"4px\";\n  tooltip.style.fontSize = \"12px\";\n  tooltip.style.zIndex = \"1000\";\n  tooltip.style.marginLeft = \"10px\";\n  tooltip.style.marginTop = \"-5px\";\n\n  element.parentElement?.appendChild(tooltip);\n\n  setTimeout(() => {\n    tooltip.remove();\n  }, duration);\n}\n\n/**\n * Builds a breadcrumb from the page name and header hierarchy\n */\nfunction buildBreadcrumbFrom(header: HTMLElement | null): string {\n  if (!header) return \"\";\n  \n  // Get the page name from URL\n  const pathname = window.location.pathname;\n  const pageName = pathname.replace(/^\\//, \"\").replace(/\\.html$/, \"\") || \"index\";\n  \n  // Convert page name to readable format (replace hyphens with spaces)\n  const readablePageName = pageName.replace(/-/g, ' ');\n  \n  // Build header hierarchy\n  const headerHierarchy: string[] = [];\n  const tagName = header.tagName;\n  const headerLevel = parseInt(tagName.substring(1)); // Get number from H1, H2, etc.\n  \n  // Get the current header's text\n  const currentHeaderText = Array.from(header.childNodes)\n    .filter(node => node.nodeType === Node.TEXT_NODE)\n    .map(node => node.textContent?.trim())\n    .join(' ')\n    .trim();\n  \n  // For H2+, find parent headers\n  if (headerLevel >= 2) {\n    // Look for parent headers by traversing backwards through the DOM\n    let prevElement = header.previousElementSibling;\n    const foundHeaders: { level: number; text: string }[] = [];\n    const seenLevels = new Set<number>();\n    \n    while (prevElement) {\n      const prevTagName = prevElement.tagName;\n      if (prevTagName && prevTagName.match(/^H[1-6]$/)) {\n        const prevLevel = parseInt(prevTagName.substring(1));\n        \n        // Only collect headers that are higher level (lower number) than current\n        // and we haven't seen this level yet (to get the most recent parent)\n        if (prevLevel < headerLevel && !seenLevels.has(prevLevel)) {\n          const prevHeaderText = Array.from(prevElement.childNodes)\n            .filter(node => node.nodeType === Node.TEXT_NODE)\n            .map(node => node.textContent?.trim())\n            .join(' ')\n            .trim();\n          \n          if (prevHeaderText) {\n            foundHeaders.push({ level: prevLevel, text: prevHeaderText });\n            seenLevels.add(prevLevel);\n          }\n          \n          // If we found an H1, we can stop (top level)\n          if (prevLevel === 1) break;\n        }\n      }\n      prevElement = prevElement.previousElementSibling;\n    }\n    \n    // Add headers in hierarchical order (H1 > H2 > ...)\n    foundHeaders.sort((a, b) => a.level - b.level);\n    foundHeaders.forEach(h => headerHierarchy.push(h.text));\n  }\n  \n  // Add current header\n  headerHierarchy.push(currentHeaderText);\n  \n  // Build the breadcrumb string with better formatting\n  let breadcrumb = `[${readablePageName}]`;\n  if (headerHierarchy.length > 0) {\n    // Limit to 3 levels max for readability\n    const limitedHierarchy = headerHierarchy.slice(0, 3);\n    breadcrumb += `: ${limitedHierarchy.join(' > ')}`;\n    \n    // Add ellipsis if there are more levels\n    if (headerHierarchy.length > 3) {\n      breadcrumb += ' ...';\n    }\n  }\n  \n  return breadcrumb;\n}\n\n/**\n * Transforms the URL according to the domain mapping rules\n */\nfunction transformUrl(url: string, options: CopyLinkOptions): string {\n  let transformedUrl = url;\n\n  // Always transform localhost to production domain\n  transformedUrl = transformedUrl.replace(\"localhost:4000/\", \"idvorkin.azurewebsites.net/\");\n\n  // Also handle the production domain mapping if configured\n  if (options.domainMapping) {\n    transformedUrl = transformedUrl.replace(options.domainMapping.from, options.domainMapping.to);\n  }\n\n  // Extract just the path and anchor\n  const urlObj = new URL(transformedUrl);\n  const pathname = urlObj.pathname.replace(/^\\//, \"\").replace(/\\.html$/, \"\") || \"index\";\n  const anchor = urlObj.hash.replace(\"#\", \"\");\n  \n  // Return path#anchor format for tinyurl\n  return anchor ? `${pathname}#${anchor}` : pathname;\n}\n\n/**\n * Shares or copies the header link based on device capabilities\n */\nasync function shareOrCopyHeaderLink(headerId: string, options: CopyLinkOptions): Promise<boolean> {\n  try {\n    // Build the URL using tinyurl redirect format\n    const currentUrl = window.location.href;\n    const anchorUrl = currentUrl.includes(\"#\") \n      ? currentUrl.replace(/#.*/, `#${headerId}`)\n      : `${currentUrl}#${headerId}`;\n    \n    // Transform the URL for tinyurl redirect  \n    const transformedUrl = transformUrl(anchorUrl, options);\n    const tinyUrl = `https://tinyurl.com/igor-blog/?path=${encodeURIComponent(transformedUrl)}`;\n    \n    // Get header text for share title (clean it to remove button text)\n    const header = document.getElementById(headerId);\n    // Get just the text content of the header, excluding child elements\n    const headerText = header ? \n      Array.from(header.childNodes)\n        .filter(node => node.nodeType === Node.TEXT_NODE)\n        .map(node => node.textContent?.trim())\n        .join(' ')\n        .trim() : \"\";\n    const shareTitle = `${headerText} - Igor's Blog`;\n    \n    // Get preview text for the section\n    const previewText = getPreviewText(headerId);\n    \n    // Build breadcrumb \"From\" line\n    const breadcrumbFrom = buildBreadcrumbFrom(header);\n    \n    // Create share text with preview\n    let shareText = `From: ${breadcrumbFrom} ...`;\n    if (previewText) {\n      shareText = `From: ${breadcrumbFrom} ...\\n\\n${previewText}`;\n    }\n    \n    // Check if this is a mobile device\n    const isMobile = /Mobi|Android|iPhone|iPad|iPod/i.test(navigator.userAgent);\n    \n    // Use native share only on mobile devices that support it\n    if (navigator.share && isMobile) {\n      try {\n        await navigator.share({\n          title: shareTitle,\n          text: shareText,\n          url: tinyUrl\n        });\n        console.log(`\uD83D\uDCF1 Shared via native share: ${tinyUrl}`);\n        return true; // Indicates share was successful\n      } catch (shareError) {\n        // User cancelled share or share failed, fall through to clipboard\n        console.log(\"Share cancelled or failed, falling back to clipboard\", shareError);\n      }\n    }\n    \n    // For clipboard copy, format with preview text\n    let clipboardText = tinyUrl;\n    if (previewText) {\n      // Format as: From: Title, Preview, URL (similar to social media shares)\n      clipboardText = `From: ${breadcrumbFrom} ...\\n\\n${previewText}\\n\\n${tinyUrl}`;\n    }\n    \n    // Fallback to clipboard copy for desktop or if share fails\n    await navigator.clipboard.writeText(clipboardText);\n    console.log(`\uD83D\uDCCB Copied to clipboard with preview: ${clipboardText.substring(0, 100)}...`);\n    return false; // Indicates copy was used instead of share\n    \n  } catch (error) {\n    console.error(\"Failed to share/copy header link:\", error);\n\n    // Fallback: use textarea method if clipboard API fails\n    try {\n      const currentUrl = window.location.href;\n      const anchorUrl = currentUrl.includes(\"#\") \n        ? currentUrl.replace(/#.*/, `#${headerId}`)\n        : `${currentUrl}#${headerId}`;\n      \n      const transformedUrl = transformUrl(anchorUrl, options);\n      const tinyUrl = `https://tinyurl.com/igor-blog/?path=${encodeURIComponent(transformedUrl)}`;\n      \n      // Get preview text for fallback\n      const header = document.getElementById(headerId);\n      const breadcrumbFrom = buildBreadcrumbFrom(header);\n      const previewText = getPreviewText(headerId);\n      \n      let clipboardText = tinyUrl;\n      if (previewText) {\n        clipboardText = `From: ${breadcrumbFrom} ...\\n\\n${previewText}\\n\\n${tinyUrl}`;\n      }\n      \n      // Use textarea fallback for copying\n      const textArea = document.createElement(\"textarea\");\n      textArea.value = clipboardText;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(textArea);\n      \n      console.log(`\uD83D\uDCCB Copied with preview (fallback): ${clipboardText.substring(0, 100)}...`);\n      return false;\n    } catch (fallbackError) {\n      console.error(\"Failed to copy URL even with fallback:\", fallbackError);\n      throw fallbackError;\n    }\n  }\n}\n\n/**\n * Gets or creates an ID for a header element\n */\nfunction getOrCreateHeaderId(header: HTMLElement): string {\n  if (header.id) {\n    return header.id;\n  }\n\n  // Create an ID from the header text\n  const text = header.textContent || \"\";\n  const id = text\n    .toLowerCase()\n    .replace(/[^\\w\\s-]/g, \"\") // Remove special characters\n    .replace(/\\s+/g, \"-\") // Replace spaces with hyphens\n    .replace(/-+/g, \"-\") // Replace multiple hyphens with single\n    .replace(/^-|-$/g, \"\"); // Remove leading/trailing hyphens\n\n  // Ensure uniqueness\n  let uniqueId = id;\n  let counter = 1;\n  while (document.getElementById(uniqueId)) {\n    uniqueId = `${id}-${counter}`;\n    counter++;\n  }\n\n  header.id = uniqueId;\n  return uniqueId;\n}\n\n/**\n * Gets the first non-empty paragraph of content after a header\n */\nfunction getFirstParagraphAfterHeader(header: HTMLElement): string {\n  let nextElement = header.nextElementSibling;\n  \n  // Look for the first non-empty content before the next header\n  while (nextElement) {\n    // Stop if we hit another header\n    if (nextElement.tagName.match(/^H[1-6]$/)) {\n      break;\n    }\n    \n    // Check if it's a paragraph with actual content\n    if (nextElement.tagName === 'P') {\n      const text = (nextElement.textContent || '').trim();\n      if (text.length > 0) {\n        // Found non-empty paragraph - truncate if too long\n        return text.length > 500 ? text.substring(0, 497) + '...' : text;\n      }\n    }\n    \n    // If it's a list (UL or OL), get text from the list items\n    if (nextElement.tagName === 'UL' || nextElement.tagName === 'OL') {\n      const listItems = nextElement.querySelectorAll('li');\n      const itemTexts: string[] = [];\n      let totalLength = 0;\n      \n      for (const li of Array.from(listItems)) {\n        // Only get direct text content, not nested lists\n        const text = Array.from(li.childNodes)\n          .filter(node => node.nodeType === Node.TEXT_NODE || \n                         (node.nodeType === Node.ELEMENT_NODE && \n                          (node as Element).tagName !== 'UL' && \n                          (node as Element).tagName !== 'OL'))\n          .map(node => (node.textContent || '').trim())\n          .join(' ')\n          .trim();\n        \n        if (text.length > 0) {\n          itemTexts.push(`\u2022 ${text}`);\n          totalLength += text.length;\n          if (totalLength > 400) break; // Stop if we have enough text\n        }\n      }\n      \n      if (itemTexts.length > 0) {\n        // Join with newlines for better formatting\n        const combinedText = itemTexts.join('\\n');\n        return combinedText.length > 500 ? combinedText.substring(0, 497) + '...' : combinedText;\n      }\n    }\n    \n    nextElement = nextElement.nextElementSibling;\n  }\n  \n  return '';\n}\n\n/**\n * Truncates text to a maximum length, preserving word boundaries\n */\nfunction truncateText(text: string, maxLength = 400): string {\n  if (text.length <= maxLength) {\n    return text;\n  }\n  \n  // Truncate to maxLength and find the last space\n  const truncated = text.substring(0, maxLength);\n  const lastSpace = truncated.lastIndexOf(' ');\n  \n  if (lastSpace > 0) {\n    return truncated.substring(0, lastSpace) + '...';\n  }\n  \n  return truncated + '...';\n}\n\n/**\n * Extracts preview text from the page content, with anchor-aware logic\n */\nfunction getPreviewText(headerId?: string): string {\n  // If we have a specific header ID (anchor), try to get text after it\n  if (headerId) {\n    const header = document.getElementById(headerId);\n    if (header) {\n      // Try to get text from the first paragraph after the header\n      const paragraphText = getFirstParagraphAfterHeader(header);\n      if (paragraphText) {\n        return truncateText(paragraphText);\n      }\n      \n      // Try to get text from any content elements after the header\n      let nextElement = header.nextElementSibling;\n      const textParts: string[] = [];\n      let charCount = 0;\n      \n      while (nextElement && charCount < 400) {\n        // Stop if we hit another header\n        if (nextElement.tagName.match(/^H[1-6]$/)) {\n          break;\n        }\n        \n        // Get text from various content elements\n        if (nextElement.tagName === 'P' || \n            nextElement.tagName === 'LI' || \n            nextElement.tagName === 'BLOCKQUOTE' ||\n            nextElement.tagName === 'DIV') {\n          const text = (nextElement.textContent || '').trim();\n          if (text.length > 0) {\n            textParts.push(text);\n            charCount += text.length;\n          }\n        }\n        \n        nextElement = nextElement.nextElementSibling;\n      }\n      \n      if (textParts.length > 0) {\n        return truncateText(textParts.join(' '));\n      }\n    }\n  }\n  \n  // Fallback: try to find preview text from various content areas\n  const contentSelectors = [\n    'article',\n    'main',\n    '.content',\n    '.post-content',\n    '.entry-content',\n    '#content-holder',\n    '.content-holder'\n  ];\n  \n  for (const selector of contentSelectors) {\n    const contentArea = document.querySelector(selector);\n    if (contentArea) {\n      // Find the first paragraph in the content area\n      const firstParagraph = contentArea.querySelector('p');\n      if (firstParagraph) {\n        const text = (firstParagraph.textContent || '').trim();\n        if (text.length > 0) {\n          return truncateText(text);\n        }\n      }\n    }\n  }\n  \n  // Last resort: find the first paragraph on the page\n  const firstParagraph = document.querySelector('p');\n  if (firstParagraph) {\n    const text = (firstParagraph.textContent || '').trim();\n    if (text.length > 0) {\n      return truncateText(text);\n    }\n  }\n  \n  // If no preview text found, return empty string\n  return '';\n}\n\n/**\n * Creates a GitHub issue URL for a section with optional custom title and description\n */\nfunction createGitHubIssueUrl(\n  headerId: string, \n  headerText: string, \n  customTitle?: string, \n  customDescription?: string,\n  header?: HTMLElement\n): string {\n  // Get the current page path from the URL\n  const pathname = window.location.pathname;\n  // Remove leading slash and .html extension if present\n  const pagePath = pathname.replace(/^\\//, \"\").replace(/\\.html$/, \"\");\n  \n  // Get the actual source file path from the meta tag (set by Jekyll)\n  const metaTag = document.querySelector('meta[property=\"markdown-path\"]');\n  const sourceFile = metaTag ? metaTag.getAttribute(\"content\") : `${pagePath || \"index\"}.md`;\n  \n  // Construct the GitHub issue URL\n  const repoUrl = \"https://github.com/idvorkin/idvorkin.github.io\";\n  \n  // Format title as: page/section: custom title\n  const formattedTitle = customTitle \n    ? `${pagePath || \"index\"}/${headerId}: ${customTitle}`\n    : `${pagePath || \"index\"}/${headerId}: Issue with ${headerText}`;\n  \n  const issueTitle = encodeURIComponent(formattedTitle);\n  \n  // Use description if provided, otherwise use title as description\n  const description = customDescription || customTitle || `Issue with section: ${headerText}`;\n  \n  // Get first paragraph of content if header is provided\n  const firstParagraph = header ? getFirstParagraphAfterHeader(header) : '';\n  \n  // Format location as a single line with hyperlinks\n  const locationLine = `\uD83D\uDCCD [${pagePath || \"index\"}](https://idvorkin.azurewebsites.net/${pagePath})/[${headerId}](https://idvorkin.azurewebsites.net/${pagePath}/${headerId}) - [[GitHub]](${repoUrl}/blob/main/${sourceFile}#${headerId})`;\n  \n  // Format the issue body with location at top, then description, then content excerpt\n  let issueBodyContent = `${locationLine}\\n\\n` +\n    `## Description\\n\\n` +\n    `${description}\\n\\n`;\n  \n  // Add content excerpt with section heading if available\n  if (firstParagraph) {\n    issueBodyContent += `## Content Excerpt\\n\\n` +\n      `#### ${headerText}\\n\\n` +\n      `> ${firstParagraph}\\n\\n`;\n  }\n  \n  const issueBody = encodeURIComponent(issueBodyContent);\n  \n  return `${repoUrl}/issues/new?title=${issueTitle}&body=${issueBody}`;\n}\n\n// Store cleanup functions for each header\nconst headerCleanupFunctions = new WeakMap<HTMLElement, (() => void)[]>();\n\n// Store popup references for lazy loading\nconst headerPopups = new WeakMap<HTMLElement, HTMLElement>();\n\n// Track all headers for cleanup purposes\nconst trackedHeaders = new Set<HTMLElement>();\n\n/**\n * Creates and shows popup lazily when needed\n */\nfunction getOrCreatePopup(header: HTMLElement, headerId: string): HTMLElement {\n  let popup = headerPopups.get(header);\n  \n  if (!popup) {\n    popup = createIssuePopup(headerId, header.textContent || \"\");\n    document.body.appendChild(popup);\n    headerPopups.set(header, popup);\n    \n    // Setup popup event handlers\n    setupPopupEventHandlers(popup, header, headerId);\n  }\n  \n  return popup;\n}\n\n/**\n * Sets up event handlers for a popup\n */\nfunction setupPopupEventHandlers(popup: HTMLElement, header: HTMLElement, headerId: string): void {\n  const cleanupFunctions: (() => void)[] = [];\n  \n  // Handle close button\n  const closeBtn = popup.querySelector(\".github-issue-popup-close\");\n  if (closeBtn) {\n    const closeHandler = () => hideIssuePopup(popup);\n    closeBtn.addEventListener(\"click\", closeHandler);\n    cleanupFunctions.push(() => closeBtn.removeEventListener(\"click\", closeHandler));\n  }\n  \n  // Handle cancel button\n  const cancelBtn = popup.querySelector(\".github-issue-cancel\");\n  if (cancelBtn) {\n    const cancelHandler = () => hideIssuePopup(popup);\n    cancelBtn.addEventListener(\"click\", cancelHandler);\n    cleanupFunctions.push(() => cancelBtn.removeEventListener(\"click\", cancelHandler));\n  }\n  \n  // Function to submit the issue\n  const submitIssue = () => {\n    const titleInput = popup.querySelector(\".github-issue-title\") as HTMLInputElement;\n    const commentTextarea = popup.querySelector(\".github-issue-comment\") as HTMLTextAreaElement;\n    \n    const customTitle = titleInput?.value || \"\";\n    const customDescription = commentTextarea?.value || \"\";\n    \n    const issueUrl = createGitHubIssueUrl(headerId, header.textContent || \"\", customTitle, customDescription, header);\n    window.open(issueUrl, \"_blank\");\n    \n    hideIssuePopup(popup);\n  };\n  \n  // Handle submit button\n  const submitBtn = popup.querySelector(\".github-issue-submit\");\n  if (submitBtn) {\n    submitBtn.addEventListener(\"click\", submitIssue);\n    cleanupFunctions.push(() => submitBtn.removeEventListener(\"click\", submitIssue));\n  }\n  \n  // Handle keyboard shortcuts (Ctrl/Cmd + Enter)\n  const titleInput = popup.querySelector(\".github-issue-title\") as HTMLInputElement;\n  const commentTextarea = popup.querySelector(\".github-issue-comment\") as HTMLTextAreaElement;\n  \n  const handleKeydown = (event: KeyboardEvent) => {\n    if ((event.ctrlKey || event.metaKey) && event.key === \"Enter\") {\n      event.preventDefault();\n      submitIssue();\n    }\n  };\n  \n  if (titleInput) {\n    titleInput.addEventListener(\"keydown\", handleKeydown);\n    cleanupFunctions.push(() => titleInput.removeEventListener(\"keydown\", handleKeydown));\n  }\n  if (commentTextarea) {\n    commentTextarea.addEventListener(\"keydown\", handleKeydown);\n    cleanupFunctions.push(() => commentTextarea.removeEventListener(\"keydown\", handleKeydown));\n  }\n  \n  // Store cleanup functions for this popup\n  const existingCleanup = headerCleanupFunctions.get(header) || [];\n  headerCleanupFunctions.set(header, [...existingCleanup, ...cleanupFunctions]);\n}\n\n/**\n * Adds copy link functionality to a single header\n */\nfunction addCopyLinkToHeader(header: HTMLElement, options: CopyLinkOptions): void {\n  // Check if this header already has a copy link\n  const existingCopyLink = header.querySelector(`.${options.iconClass || DEFAULT_OPTIONS.iconClass}`);\n  if (existingCopyLink) {\n    return; // Skip if copy link already exists\n  }\n\n  const headerId = getOrCreateHeaderId(header);\n  const copyIcon = createCopyLinkIcon(options);\n  const githubIcon = createGitHubIssueIcon();\n  const cleanupFunctions: (() => void)[] = [];\n\n  // Add click handler for share/copy link\n  const shareClickHandler = async (event: Event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const wasShared = await shareOrCopyHeaderLink(headerId, options);\n    // Only show tooltip if we copied (not if we used native share)\n    if (!wasShared) {\n      showCopiedTooltip(copyIcon, options.tooltipDuration);\n    }\n  };\n  copyIcon.addEventListener(\"click\", shareClickHandler);\n  cleanupFunctions.push(() => copyIcon.removeEventListener(\"click\", shareClickHandler));\n  \n  // Add keyboard support for accessibility\n  const keyboardHandler = (event: KeyboardEvent) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      shareClickHandler(event);\n    }\n  };\n  copyIcon.addEventListener(\"keydown\", keyboardHandler);\n  cleanupFunctions.push(() => copyIcon.removeEventListener(\"keydown\", keyboardHandler));\n\n  // Add click handler for GitHub issue icon to show popup (lazy loading)\n  const githubClickHandler = (event: Event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    const popup = getOrCreatePopup(header, headerId);\n    showIssuePopup(popup, header);\n  };\n  githubIcon.addEventListener(\"click\", githubClickHandler);\n  cleanupFunctions.push(() => githubIcon.removeEventListener(\"click\", githubClickHandler));\n  \n  // Close popup when clicking outside (use capture phase to avoid conflicts)\n  const handleOutsideClick = (event: MouseEvent) => {\n    const popup = headerPopups.get(header);\n    if (popup && !popup.contains(event.target as Node) && \n        event.target !== githubIcon && \n        !githubIcon.contains(event.target as Node) &&\n        popup.style.display !== \"none\") {\n      hideIssuePopup(popup);\n    }\n  };\n  \n  // Add slight delay to avoid immediate closing\n  const timeoutId = setTimeout(() => {\n    document.addEventListener(\"click\", handleOutsideClick, true);\n    cleanupFunctions.push(() => document.removeEventListener(\"click\", handleOutsideClick, true));\n  }, 100);\n  cleanupFunctions.push(() => clearTimeout(timeoutId));\n\n  // Append the icons to the header\n  header.appendChild(copyIcon);\n  header.appendChild(githubIcon);\n\n  // Add hover effects to the header\n  const mouseEnterHandler = () => {\n    copyIcon.style.opacity = \"1\";\n    githubIcon.style.opacity = \"1\";\n  };\n  const mouseLeaveHandler = () => {\n    copyIcon.style.opacity = \"0\";\n    githubIcon.style.opacity = \"0\";\n  };\n  \n  header.addEventListener(\"mouseenter\", mouseEnterHandler);\n  header.addEventListener(\"mouseleave\", mouseLeaveHandler);\n  cleanupFunctions.push(() => {\n    header.removeEventListener(\"mouseenter\", mouseEnterHandler);\n    header.removeEventListener(\"mouseleave\", mouseLeaveHandler);\n  });\n  \n  // Store cleanup functions for this header\n  headerCleanupFunctions.set(header, cleanupFunctions);\n  trackedHeaders.add(header);\n}\n\n/**\n * Cleans up all event listeners and popups\n */\nexport function cleanupHeaderCopyLinks(): void {\n  // Clean up all stored event listeners\n  trackedHeaders.forEach((header) => {\n    const cleanupFns = headerCleanupFunctions.get(header);\n    if (cleanupFns) {\n      cleanupFns.forEach(fn => fn());\n    }\n    \n    // Remove popup if exists\n    const popup = headerPopups.get(header);\n    if (popup) {\n      popup.remove();\n    }\n  });\n  \n  // Clear the tracked headers set\n  trackedHeaders.clear();\n  \n  // Reset initialization flag\n  isHeaderCopyLinksInitialized = false;\n}\n\n/**\n * Initializes the copy link feature for all headers in the content\n */\nexport function initHeaderCopyLinks(customOptions: Partial<CopyLinkOptions> = {}): void {\n  const options: CopyLinkOptions = { ...DEFAULT_OPTIONS, ...customOptions };\n\n  // Find all headers on the page (including H1)\n  // Some H1s are outside content-holder, so search the entire document\n  const allHeaders = document.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n\n  for (const header of Array.from(allHeaders)) {\n    addCopyLinkToHeader(header as HTMLElement, options);\n  }\n}\n\n/**\n * Adds CSS styles for the copy link feature\n */\nexport function addHeaderCopyLinkStyles(): void {\n  const styleId = \"header-copy-link-styles\";\n\n  // Check if styles already exist\n  if (document.getElementById(styleId)) {\n    return;\n  }\n\n  const style = document.createElement(\"style\");\n  style.id = styleId;\n  style.textContent = `\n    .header-copy-link,\n    .header-github-issue {\n      opacity: 0;\n      margin-left: 0.5rem;\n      transition: opacity 0.2s ease;\n      cursor: pointer;\n      user-select: none;\n      font-size: 0.8em;\n      color: #6c757d;\n      text-decoration: none;\n    }\n    \n    .header-copy-link:hover {\n      color: #007bff;\n    }\n    \n    .header-github-issue:hover {\n      color: #dc3545;\n    }\n    \n    h1:hover .header-copy-link,\n    h2:hover .header-copy-link,\n    h3:hover .header-copy-link,\n    h4:hover .header-copy-link,\n    h5:hover .header-copy-link,\n    h6:hover .header-copy-link,\n    h1:hover .header-github-issue,\n    h2:hover .header-github-issue,\n    h3:hover .header-github-issue,\n    h4:hover .header-github-issue,\n    h5:hover .header-github-issue,\n    h6:hover .header-github-issue {\n      opacity: 1;\n    }\n    \n    /* Ensure headers have relative positioning for tooltip placement */\n    h1, h2, h3, h4, h5, h6 {\n      position: relative;\n    }\n    \n    /* GitHub Issue Popup Styles */\n    .github-issue-popup {\n      position: absolute;\n      background: white;\n      border: 1px solid #ddd;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      width: 400px;\n      max-width: 90vw;\n      z-index: 1000;\n    }\n    \n    .github-issue-popup-content {\n      padding: 0;\n    }\n    \n    .github-issue-popup-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 12px 16px;\n      background: #f6f8fa;\n      border-bottom: 1px solid #e1e4e8;\n      border-radius: 8px 8px 0 0;\n    }\n    \n    .github-issue-popup-header h4 {\n      margin: 0;\n      font-size: 14px;\n      color: #24292e;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 350px;\n    }\n    \n    .github-issue-popup-close {\n      background: none;\n      border: none;\n      font-size: 24px;\n      color: #586069;\n      cursor: pointer;\n      padding: 0;\n      width: 24px;\n      height: 24px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    \n    .github-issue-popup-close:hover {\n      color: #24292e;\n    }\n    \n    .github-issue-popup-body {\n      padding: 16px;\n    }\n    \n    .github-issue-popup-body label {\n      display: block;\n      margin-bottom: 4px;\n      font-size: 13px;\n      font-weight: 600;\n      color: #24292e;\n    }\n    \n    .github-issue-title,\n    .github-issue-comment {\n      width: 100%;\n      padding: 8px 12px;\n      margin-bottom: 12px;\n      border: 1px solid #e1e4e8;\n      border-radius: 6px;\n      font-size: 14px;\n      font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif;\n      box-sizing: border-box;\n    }\n    \n    .github-issue-title:focus,\n    .github-issue-comment:focus {\n      outline: none;\n      border-color: #0366d6;\n      box-shadow: 0 0 0 3px rgba(3, 102, 214, 0.1);\n    }\n    \n    .github-issue-comment {\n      resize: vertical;\n      min-height: 80px;\n    }\n    \n    .github-issue-popup-buttons {\n      display: flex;\n      gap: 8px;\n      justify-content: flex-end;\n      margin-top: 12px;\n    }\n    \n    .github-issue-submit,\n    .github-issue-cancel {\n      padding: 6px 16px;\n      border-radius: 6px;\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      border: 1px solid;\n      transition: all 0.2s;\n    }\n    \n    .github-issue-submit {\n      background: #2ea44f;\n      color: white;\n      border-color: #2ea44f;\n    }\n    \n    .github-issue-submit:hover {\n      background: #2c974b;\n      border-color: #2c974b;\n    }\n    \n    .github-issue-cancel {\n      background: #fafbfc;\n      color: #24292e;\n      border-color: #e1e4e8;\n    }\n    \n    .github-issue-cancel:hover {\n      background: #f3f4f6;\n      border-color: #c9ced1;\n    }\n    \n    .github-issue-popup-hint {\n      margin-top: 8px;\n      text-align: center;\n      color: #586069;\n    }\n  `;\n\n  document.head.appendChild(style);\n}\n\n// Global flag to prevent multiple initializations\nlet isHeaderCopyLinksInitialized = false;\n\n/**\n * Reset the initialization flag (for testing purposes)\n */\nexport function resetHeaderCopyLinksInitialization(): void {\n  isHeaderCopyLinksInitialized = false;\n}\n\n/**\n * Main initialization function - call this to enable the feature\n */\nexport function enableHeaderCopyLinks(options: Partial<CopyLinkOptions> = {}): void {\n  // Prevent multiple initializations\n  if (isHeaderCopyLinksInitialized) {\n    return;\n  }\n\n  isHeaderCopyLinksInitialized = true;\n\n  // Add styles\n  addHeaderCopyLinkStyles();\n\n  // Initialize the feature\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      initHeaderCopyLinks(options);\n    });\n  } else {\n    initHeaderCopyLinks(options);\n  }\n}\n", "/**\n * Image Zoom functionality for blog posts\n * Automatically wraps images in blog posts with GLightbox functionality\n */\n\n// Constants for retry logic\nconst MAX_RETRY_ATTEMPTS = 50;\nconst RETRY_DELAY_MS = 100;\nconst MAX_RETRY_TIME_MS = MAX_RETRY_ATTEMPTS * RETRY_DELAY_MS;\n\ndeclare global {\n  interface Window {\n    GLightbox: any;\n  }\n}\n\nexport function enableImageZoom(retryCount = 0) {\n  // Skip if running in test environment without DOM\n  if (typeof document === \"undefined\") {\n    return;\n  }\n\n  console.log(\"\uD83D\uDDBC\uFE0F Enabling image zoom functionality\");\n\n  // Wait for GLightbox to be available with retry limit\n  if (typeof window.GLightbox === \"undefined\") {\n    if (retryCount < MAX_RETRY_ATTEMPTS) {\n      // Max 5 seconds of retries (50 * 100ms)\n      console.warn(\n        `\u26A0\uFE0F GLightbox not found, retrying in ${RETRY_DELAY_MS}ms (attempt ${retryCount + 1}/${MAX_RETRY_ATTEMPTS})`,\n      );\n      setTimeout(() => enableImageZoom(retryCount + 1), RETRY_DELAY_MS);\n      return;\n    }\n    console.error(\n      `\u274C GLightbox failed to load after ${MAX_RETRY_TIME_MS / 1000} seconds, aborting image zoom initialization`,\n    );\n    return;\n  }\n\n  // Find all images in the main content area (excluding headers, sidebars, etc.)\n  const contentSelectors = [\n    \"p img\", // Images inside paragraphs (most common in markdown)\n    \"li img\", // Images inside list items\n    \".container img\",\n    \".post-content img\",\n    \"article img\",\n    \".markdown-body img\",\n    \"main img\",\n  ];\n\n  const images = document.querySelectorAll(contentSelectors.join(\", \"));\n  console.log(`\uD83D\uDD0D Found ${images.length} images to process`);\n\n  let processedCount = 0;\n\n  images.forEach((img, index) => {\n    const imageElement = img as HTMLImageElement;\n\n    // Skip if already wrapped in a link\n    if (imageElement.parentElement?.tagName === \"A\") {\n      console.log(`\u23ED\uFE0F Skipping image ${index + 1} - already wrapped`);\n      return;\n    }\n\n    // Skip tiny images (likely icons)\n    if (imageElement.naturalWidth > 0 && imageElement.naturalWidth < 100 && imageElement.naturalHeight < 100) {\n      console.log(\n        `\u23ED\uFE0F Skipping image ${index + 1} - too small (${imageElement.naturalWidth}x${imageElement.naturalHeight})`,\n      );\n      return;\n    }\n\n    // Create wrapper link\n    const link = document.createElement(\"a\");\n    link.href = imageElement.src;\n    link.className = \"glightbox\";\n    link.setAttribute(\"data-gallery\", \"post-images\");\n\n    // Add description from alt text if available\n    if (imageElement.alt) {\n      link.setAttribute(\"data-description\", imageElement.alt);\n    }\n\n    // Wrap the image\n    imageElement.parentNode?.insertBefore(link, imageElement);\n    link.appendChild(imageElement);\n\n    processedCount++;\n    console.log(\n      `\u2705 Processed image ${index + 1}: ${imageElement.src.substring(imageElement.src.lastIndexOf(\"/\") + 1)}`,\n    );\n  });\n\n  // Initialize GLightbox for all .glightbox elements (including any existing ones)\n  try {\n    const lightbox = window.GLightbox({\n      selector: \".glightbox\",\n      touchNavigation: true,\n      loop: true,\n      autoplayVideos: true,\n    });\n\n    if (processedCount > 0) {\n      console.log(`\uD83C\uDF89 Image zoom enabled for ${processedCount} images`);\n    } else {\n      console.log(\"\u2139\uFE0F No images needed processing, but GLightbox initialized for existing elements\");\n    }\n  } catch (error) {\n    console.error(\"Error initializing GLightbox:\", error);\n  }\n}\n\n// Auto-initialize when DOM is ready\nif (typeof document !== \"undefined\") {\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", () => enableImageZoom());\n  } else {\n    // DOM already loaded, but wait a bit for dynamic content\n    setTimeout(() => enableImageZoom(), 500);\n  }\n}\n", "// Import shared functions\n\nimport { initRecentAllPosts } from \"./recent\";\nimport { initRecentPosts } from \"./recent-posts\";\nimport {\n  type IURLInfo,\n  type IURLInfoMap,\n  MakeBackLinkHTML,\n  append_randomizer_div,\n  get_link_info,\n  random_from_list,\n  shuffle,\n} from \"./shared\";\n// Import graph but we'll only initialize it from the graph.html page\nimport \"./graph\";\nimport { initDevInfo } from \"./dev-info\";\nimport { enableHeaderCopyLinks } from \"./header-copy-link\";\nimport { enableImageZoom } from \"./image-zoom\";\n\n// Type declarations for external libraries\ndeclare global {\n  interface Window {\n    Mousetrap(): MousetrapStatic;\n  }\n}\n\ninterface MousetrapStatic {\n  bind(key: string, callback: (e: Event) => void): void;\n}\n\nlet tocExpand = true;\n\nfunction checkExpandToggle() {\n  const toc = $(\".ui-toc-dropdown .toc\");\n  const toggle = $(\".expand-toggle\");\n\n  if (toc.length === 0 || toggle.length === 0) {\n    console.warn(\"TOC or toggle elements not found for expand/collapse\");\n    return;\n  }\n\n  if (!tocExpand) {\n    toc.removeClass(\"expand\");\n    toggle.text(\"Expand all\");\n  } else {\n    toc.addClass(\"expand\");\n    toggle.text(\"Collapse all\");\n  }\n}\n\nfunction SwapProdAndTest() {\n  /* Find page title. */\n  const url = window.location.href;\n  const prodPrefix = \"https://idvork.in\";\n  // Get the current port from the URL\n  const currentPort = window.location.port || \"4000\";\n  const testPrefix = `http://localhost:${currentPort}`;\n  const isProd = url.includes(prodPrefix);\n  let newURL = url;\n  if (isProd) {\n    newURL = url.replace(prodPrefix, testPrefix);\n  } else {\n    // When swapping from test to prod, we need to handle any port number\n    newURL = url.replace(/http:\\/\\/localhost:\\d+/, prodPrefix);\n  }\n\n  window.location.href = newURL;\n}\n\nfunction ForceShowRightSideBar() {\n  const toc = $(\"#right-sidebar\");\n  const mainContent = $(\"#main-content\");\n\n  if (toc.length > 0) {\n    toc.removeClass();\n    toc.addClass(\"col-4 pl-0\");\n  }\n\n  if (mainContent.length > 0) {\n    mainContent.removeClass();\n    mainContent.addClass(\"col-8 pr-0\");\n  }\n\n  // Hide DropUp\n  const tocDropUp = $(\"#id-ui-toc-dropdown\");\n  if (tocDropUp.length > 0) {\n    tocDropUp.removeClass();\n    tocDropUp.addClass(\"d-none\");\n  }\n}\n\n// <!-- Copied from hackmd-extras.js -->\nfunction generateToc(id, showPinToc) {\n  const target = $(`#${id}`);\n  if (target.length === 0) {\n    console.warn(`Target element #${id} not found for TOC generation`);\n    return;\n  }\n\n  target.html(\"\");\n\n  // Check if content-holder exists\n  if ($(\"#content-holder\").length === 0) {\n    console.warn(\"Content holder not found for TOC generation\");\n    return;\n  }\n\n  /* eslint-disable no-unused-vars */\n  /* @ts-ignore:TS2339*/\n  const toc = new window.Toc(\"content-holder\", {\n    level: 3,\n    top: -1,\n    class: \"toc\",\n    ulClass: \"nav\",\n    targetId: id,\n  });\n  /* eslint-enable no-unused-vars */\n  if (target.text() === \"undefined\") {\n    target.html(\"\");\n  }\n  const tocMenu = $('<div class=\"toc-menu\"></div');\n  const toggle = $('<a class=\"expand-toggle\" href=\"#\">Collapse all</a>');\n  const backToTop = $('<a class=\"back-to-top\" href=\"#\">Top of page</a>');\n  const gotoBottom = $('<a class=\"go-to-bottom\" href=\"#\">Bottom of page</a>');\n  const forceSideBar = $('<a class=\"go-to-bottom\" href=\"#\">Pin ToC</a>');\n  checkExpandToggle();\n  toggle.click((e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    tocExpand = !tocExpand;\n    checkExpandToggle();\n  });\n  backToTop.click((e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    window.scrollTo(0, 0);\n  });\n  gotoBottom.click((e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    window.scrollTo(0, document.body.scrollHeight);\n  });\n  forceSideBar.click((e) => ForceShowRightSideBar());\n  tocMenu.append(toggle).append(backToTop).append(gotoBottom);\n  if (showPinToc) {\n    tocMenu.append(forceSideBar);\n  }\n  target.append(tocMenu);\n}\n\n// MakeBackLinkHTML moved to shared.ts\n\nasync function AddLinksToPage(allUrls: IURLInfoMap) {\n  // TODO handle redirects\n  let page_path: string;\n  let backlinks: string[] | undefined;\n  let frontlinks: string[] | undefined;\n\n  try {\n    if (!allUrls) {\n      console.log(\"No backlinks available\");\n      return;\n    }\n\n    page_path = new URL(document.URL).pathname;\n\n    // Safe check for the URL in allUrls\n    if (!allUrls[page_path]) {\n      console.log(`Page ${page_path} not found in backlinks`);\n      return;\n    }\n\n    backlinks = allUrls[page_path]?.incoming_links;\n    frontlinks = allUrls[page_path]?.outgoing_links;\n\n    if (!backlinks && !frontlinks) {\n      console.log(`No backlinks for the page ${page_path}`);\n      return;\n    }\n  } catch (error) {\n    console.log(`Error processing links: ${error instanceof Error ? error.message : String(error)}`);\n    return;\n  }\n\n  const link_parent_location = $(\"#links-to-page\");\n  if (!link_parent_location || link_parent_location.length === 0) {\n    console.log(\"No back_link_location\");\n    return;\n  }\n\n  link_parent_location.append(\n    `\n<ul class=\"nav nav-tabs nav-fill\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#incoming\" type=\"button\" role=\"tab\" aria-controls=\"incoming\" aria-selected=\"true\">Links to here</button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#outgoing\" type=\"button\" role=\"tab\" aria-controls=\"outgoing\" aria-selected=\"false\">Link from here</button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#graph\" type=\"button\" role=\"tab\" aria-controls=\"outgoing\" aria-selected=\"false\">Graph</button>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"myTabContent\">\n  <div class=\"tab-pane fade show active \" id=\"incoming\" role=\"tabpanel\" aria-labelledby=\"incoming-tab\"></div>\n  <div class=\"tab-pane fade\" id=\"outgoing\" role=\"tabpanel\" aria-labelledby=\"outgoing-tab\"></div>\n  <div class=\"tab-pane fade\" id=\"graph\" role=\"tabpanel\" aria-labelledby=\"outgoing-tab\">\n    <span> View the graph for: </span>\n  </div>\n</div>\n`,\n  );\n\n  const incoming_location = link_parent_location.find(\"#incoming\");\n  const sort_descending_by_size = (a, b) => Number(allUrls[b].doc_size) - Number(allUrls[a].doc_size);\n\n  if (backlinks) {\n    for (const backlink of backlinks.sort(sort_descending_by_size)) {\n      const url_info = allUrls[backlink];\n      incoming_location.append(MakeBackLinkHTML(url_info));\n    }\n  }\n\n  // remove front links not in\n  const clean_front_links = [];\n  for (const frontlink of frontlinks) {\n    if (allUrls[frontlink]) {\n      clean_front_links.push(frontlink);\n    }\n  }\n\n  const outgoing_location = link_parent_location.find(\"#outgoing\");\n  if (clean_front_links) {\n    for (const link of clean_front_links.sort(sort_descending_by_size)) {\n      const url_info = allUrls[link];\n      outgoing_location.append(MakeBackLinkHTML(url_info));\n    }\n  }\n  const graph_location = link_parent_location.find(\"#graph\");\n  const stripped_page_path = page_path.replace(/\\//g, \"\");\n  graph_location.append(`<a href='/graph#${stripped_page_path}'>${page_path} (${stripped_page_path}) </a>`);\n}\nfunction make_html_summary_link(link, url_info: IURLInfo) {\n  if (!url_info) {\n    return make_html_summary_link_error(link, \"URL info is undefined\");\n  }\n\n  const url = url_info.url || \"#\";\n  const title = url_info.title || \"Untitled\";\n  const description = url_info.description || \"No description available\";\n\n  const attribution = `(From:<a href='${url}'> ${title}</a>)`;\n\n  return `<div>\n        <i> ${description}</i> ${attribution}\n    </div>`;\n}\n\nfunction make_html_summary_link_error(link, error) {\n  const href = link?.attr ? link.attr(\"href\") : \"unknown\";\n  return `<span class='text-danger'>Error: Invalid link for ${href} ${error} </span>`;\n}\n\nfunction AddSummarysToPage(backLinks: IBacklinks) {\n  if (!backLinks) {\n    console.log(\"No backlinks data available\");\n    return;\n  }\n\n  try {\n    const summary_links = $.makeArray($(\".summary-link\"));\n\n    if (!summary_links || summary_links.length === 0) {\n      console.log(\"No summary links found\");\n      return;\n    }\n\n    for (const raw_link of summary_links) {\n      const link = $(raw_link);\n      try {\n        if (!link || !link.attr) {\n          console.log(\"Invalid link element\");\n          return;\n        }\n\n        let ref = link.attr(\"href\");\n        if (!ref) {\n          link.html(make_html_summary_link_error(link, \"missing href\"));\n          return;\n        }\n\n        // Check if backLinks has necessary properties\n        if (!backLinks.redirects || !backLinks.url_info) {\n          link.html(make_html_summary_link_error(link, \"incomplete backLinks data\"));\n          return;\n        }\n\n        // Resolve redirect\n        if (backLinks.redirects[ref] !== undefined) {\n          ref = backLinks.redirects[ref];\n        }\n\n        // Look up in url info\n        if (backLinks.url_info[ref] === undefined) {\n          link.html(make_html_summary_link_error(link, \"not found in url info\"));\n          return;\n        }\n\n        link.html(make_html_summary_link(link, backLinks.url_info[ref]));\n      } catch (e) {\n        if (link?.html) {\n          link.html(make_html_summary_link_error(link, e));\n        } else {\n          console.error(\"Error processing link and unable to display error:\", e);\n        }\n      }\n    }\n  } catch (error) {\n    console.error(\"Error processing summary links:\", error);\n  }\n}\n\nasync function add_link_loader() {\n  // Prevent multiple initialization using global flag\n  const globalFlag = \"__idvorkin_add_link_loader_initialized__\";\n  if ((window as any)[globalFlag]) {\n    return;\n  }\n  (window as any)[globalFlag] = true;\n\n  AddLinksToPage(await get_link_info());\n  AddSummarysToPage(await get_back_links());\n}\n\nexport interface IBacklinks {\n  redirects: { [key: string]: string };\n  url_info: IURLInfoMap;\n}\n\nlet cached_back_links: IBacklinks = null;\nasync function get_back_links(): Promise<IBacklinks> {\n  try {\n    if (cached_back_links != null) {\n      return cached_back_links;\n    }\n\n    const url = window.location.href;\n    const prodPrefix = \"https://idvork.in\";\n    const isProd = url.includes(prodPrefix);\n\n    let backlinks_url = \"\";\n    if (isProd) {\n      backlinks_url =\n        \"https://raw.githubusercontent.com/idvorkin/idvorkin.github.io/master/back-links.json?flush_cache=True\";\n    } else {\n      backlinks_url = \"/back-links.json\";\n    }\n\n    // Use a try/catch here in case $.getJSON fails\n    try {\n      const backlinksJson = (await $.getJSON(backlinks_url)) as IBacklinks;\n\n      // Ensure we have the required properties\n      if (!backlinksJson.redirects) backlinksJson.redirects = {};\n      if (!backlinksJson.url_info) backlinksJson.url_info = {};\n\n      cached_back_links = backlinksJson;\n      return cached_back_links;\n    } catch (error) {\n      console.error(\"Error fetching backlinks JSON:\", error);\n      return { redirects: {}, url_info: {} };\n    }\n  } catch (error) {\n    console.error(\"Error in get_back_links:\", error);\n    return { redirects: {}, url_info: {} };\n  }\n}\n\nfunction search() {\n  // Redirect to main page for search\n  window.location.href = '/';\n}\n\nfunction keyboard_shortcut_loader() {\n  const mouseTrap = window.Mousetrap();\n  mouseTrap.bind(\"s\", (e) => search());\n  mouseTrap.bind(\"t\", (e) => ForceShowRightSideBar());\n  mouseTrap.bind(\"p\", (e) => SwapProdAndTest());\n  mouseTrap.bind(\"a\", (e) => {\n    location.href = \"/all\";\n  });\n  mouseTrap.bind(\"m\", (e) => {\n    location.href = \"/toc\";\n  });\n  mouseTrap.bind(\"6\", (e) => {\n    location.href = \"/ig66\";\n  });\n\n  const shortcutHelp = `\nTry these shortcuts:\n  s - search\n  / - start chatting with others\n  t - force sidebar\n  p - swap prod and test\n  z - surprise me\n  a - all posts\n  m - global toc\n  6 - family journal\n  `;\n  mouseTrap.bind(\"?\", (e) => alert(shortcutHelp));\n}\n\n/**\n * Replaces placeholder links in the document with their corresponding list content.\n * @param listReplacements - An object mapping placeholder texts to list elements.\n */\nfunction replacePlaceholdersWithLists(listReplacements: Record<string, Element>) {\n  for (const [placeholderText, list] of Object.entries(listReplacements)) {\n    // Use native DOM methods if jQuery is not available\n    const placeholderLink =\n      typeof $ !== \"undefined\" && $.fn\n        ? $(`a[href=${placeholderText}]`).first()[0]\n        : document.querySelector(`a[href=\"${placeholderText}\"]`);\n\n    if (!placeholderLink) return; // Placeholder not found, skip\n\n    const listClone = list.cloneNode(true) as Element;\n    if (listClone.children.length > 0) {\n      listClone.children[0].remove(); // Remove the 'lookup id' from the list\n    }\n    placeholderLink.replaceWith(listClone);\n\n    // remove the list from the document\n    list.remove();\n  }\n}\n\n/**\n * Builds a map of list replacements by scanning the document for specially formatted lists.\n * @returns An object where keys are placeholder texts and values are the corresponding list elements.\n */\nfunction buildListReplacementMap(): Record<string, Element> {\n  const replacements: Record<string, Element> = {};\n\n  // Use native DOM methods if jQuery is not available\n  const lists = typeof $ !== \"undefined\" && $.fn ? $(\"ul\").toArray() : Array.from(document.querySelectorAll(\"ul\"));\n\n  for (const list of lists) {\n    const firstListItem = list.firstElementChild;\n    if (!firstListItem) continue;\n\n    const firstItemText = firstListItem.textContent;\n    if (!firstItemText || !firstItemText.startsWith(\"l\")) continue;\n\n    const listId = Number.parseInt(firstItemText.substring(1));\n    if (Number.isNaN(listId)) continue;\n\n    replacements[firstItemText] = list;\n  }\n  return replacements;\n}\n\n/**\n * Replaces list placeholders in tables with actual list content.\n * This function orchestrates the process of finding and replacing placeholders.\n */\nfunction replaceListPlaceholdersInTables() {\n  const listReplacements = buildListReplacementMap();\n  replacePlaceholdersWithLists(listReplacements);\n}\n\nfunction load_globals() {\n  // Prevent multiple initialization using global flag\n  const globalFlag = \"__idvorkin_load_globals_initialized__\";\n  if ((window as any)[globalFlag]) {\n    return;\n  }\n  (window as any)[globalFlag] = true;\n\n  $(add_link_loader);\n  $(keyboard_shortcut_loader);\n\n  // Replace list placeholders in tables\n  if (typeof $ !== \"undefined\" && $.fn && $.fn.ready) {\n    $(document).ready(replaceListPlaceholdersInTables);\n  } else if (typeof document !== \"undefined\") {\n    if (document.readyState === \"loading\") {\n      document.addEventListener(\"DOMContentLoaded\", replaceListPlaceholdersInTables);\n    } else {\n      replaceListPlaceholdersInTables();\n    }\n  }\n\n  initRecentPosts();\n\n  // Initialize recent posts if the container exists\n  if (document.getElementById(\"last-modified-posts\")) {\n    initRecentAllPosts();\n  }\n\n  $(() => {\n    generateToc(\"ui-toc\", true);\n    generateToc(\"ui-toc-affix\", false);\n  });\n\n  // Initialize header copy links\n  enableHeaderCopyLinks();\n\n  // Initialize image zoom functionality\n  enableImageZoom();\n\n  // Initialize dev info display\n  initDevInfo();\n}\n\nexport {\n  load_globals,\n  get_link_info,\n  shuffle,\n  random_from_list,\n  append_randomizer_div,\n  enableHeaderCopyLinks,\n  initDevInfo,\n};\n\n// Auto-initialize when the script loads\nif (typeof $ !== \"undefined\" && $.fn && $.fn.ready) {\n  $(document).ready(load_globals);\n} else if (typeof document !== \"undefined\") {\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", load_globals);\n  } else {\n    load_globals();\n  }\n}\n", "import { append_randomizer_div, random_from_list } from \"./index\";\n\ninterface BlogPost {\n  url: string;\n  title: string;\n  thumbnail: string;\n  published: string;\n  excerpt: string;\n  tags: string[];\n}\n\nfunction html_for_blogpost(post: BlogPost) {\n  const item = $(\"<div/>\");\n  // TODO: HACK: Strip to the right of Week number\n  const title_href = `<h4> <a href='${post.url}'}>${post.title}</a></h4>`;\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  item.append(title_href);\n  // HACK: Upsize to larger thumbnail, seems like blogger auto resizes to include a 320 image as well.\n  const thumbnail_url = post.thumbnail.replace(\"s72-c\", \"s320\");\n\n  const published_date = new Date(post.published);\n  const excerptDisplayText = `\n    <div> ${monthNames[published_date.getMonth()]} ${published_date.getFullYear()} - ${post.excerpt}\n    </div>\n   `;\n  if (post.thumbnail !== \"\") {\n    console.log(post.title);\n    console.log(published_date);\n    item.append(\n      // `<div> <a href='${post.url}'}><img src='${thumbnail_url}'/></div>`\n      `\n      <div style='overflow:auto'>\n\n      <a href='${post.url}'}><img class=\"img-fluid\" style='float:left; margin-right:10px' src='${thumbnail_url}'/></a>\n      ${excerptDisplayText}\n      </div>`,\n    );\n  } else {\n    item.append(excerptDisplayText);\n  }\n  const ret = item.html();\n  return ret;\n}\n\nfunction get_achievement_posts(imported_posts: BlogPost[]) {\n  return imported_posts.filter((post) => post.title.toLowerCase().includes(\"achievement\"));\n}\nfunction get_recent_posts(imported_posts: BlogPost[]) {\n  return imported_posts.filter((post) => post.tags.includes(\"family-journal\"));\n}\n\nfunction ProcessImports(posts: BlogPost[]) {\n  console.log(\"Processing\", posts.length, \"posts\");\n  if (!posts) {\n    console.log(\"No posts being imported\");\n    return;\n  }\n\n  //\n  // Import all history\n  const random_div = \"#random-post\";\n  const achievement_div = \"#achievment\";\n  const random_recent = \"#random-recent\";\n\n  append_randomizer_div(random_div, () => html_for_blogpost(random_from_list(posts)));\n\n  // Add a random achievement post\n  append_randomizer_div(achievement_div, () => html_for_blogpost(random_from_list(get_achievement_posts(posts))));\n  append_randomizer_div(random_recent, () => html_for_blogpost(random_from_list(get_recent_posts(posts))));\n}\n\nfunction add_imported_blog_posts() {\n  const imported_posts_url = \"/ig66/ig66-export.json\";\n  $.getJSON(imported_posts_url, ProcessImports);\n}\n//\n// Todo put in own file\ninterface Role {\n  title: string;\n  summary: string;\n  full_text: string;\n}\n\ninterface Roles {\n  roles: Role[];\n}\n\nfunction html_for_role(role: Role) {\n  // url encode the role title\n  const role_file_name = role.title.replace(/ /g, \"%20\");\n  const voices = [\"igor\", \"ammon\"];\n  const random_voice = voices[Math.floor(Math.random() * voices.length)];\n  // Yucky - toggle_play_pause is a global function in enjoy2.md - bleh,  so brittle\n  return `\n  <div>\n    <audio id=\"eulogy-player\">\n      <source src=\"https://github.com/idvorkin/blob/raw/master/read_eulogy/${random_voice}/${role_file_name}.mp3\" type=\"audio/mp3\">\n    </audio>\n  <b>${role.title} <a class='lead' onclick=\"toggle_play_pause('eulogy-player')\">\uD83D\uDD08</a></b> - ${role.summary}\n  </div>\n  `;\n}\n\nfunction ProcessEulogy(div: string, roles: Roles) {\n  if (!roles) {\n    console.log(\"No roles being imported\");\n    return;\n  }\n  console.log(\"Processing\", roles.roles.length, \"roles\");\n\n  // Import all history\n  append_randomizer_div(div, () => html_for_role(random_from_list(roles.roles)));\n}\n\nfunction add_eulogy_roles(div: string) {\n  const imported_posts_url = \"/eulogy.json\";\n  $.getJSON(imported_posts_url, (roles: Roles) => ProcessEulogy(div, roles));\n}\n\nexport { add_imported_blog_posts, add_eulogy_roles, html_for_role };\n", "import { append_randomizer_div, random_from_list, shuffle } from \"./index\";\n\n// Declare global Plotly\ndeclare const Plotly: any;\n\n/**\n * Represents a node in a tree structure used for visualization\n */\nexport class TreeNode {\n  name: string;\n  children: TreeNode[];\n  value: number;\n\n  constructor({\n    name,\n    value = 25,\n    children = [],\n  }: {\n    name;\n    value?;\n    children?;\n  }) {\n    this.name = name;\n    // Keep it interesting\n    this.children = shuffle(children) as TreeNode[];\n    this.value = value;\n  }\n}\n\n/**\n * Main function to add random prompts to categories on the page\n * @param categoryToPromptsProvider Function that provides category-to-prompts mapping (default: internal implementation)\n * @param renderer Function that renders prompts for a category (default: internal implementation)\n */\nexport function add_random_prompts(\n  categoryToPromptsProvider = category_to_prompts,\n  renderer = render_prompt_for_category,\n) {\n  const map_category_to_prompts = categoryToPromptsProvider();\n  for (const category of map_category_to_prompts.keys()) {\n    renderer(category, map_category_to_prompts.get(category));\n  }\n}\n\n/**\n * Renders prompts for a specific category\n * @param category The category element\n * @param prompts_for_category Array of prompts for this category\n * @param jQueryProvider jQuery function (default: global $)\n * @param randomizerAppender Function to append randomizer div (default: append_randomizer_div)\n */\nexport function render_prompt_for_category(\n  category,\n  prompts_for_category,\n  jQueryProvider = $,\n  randomizerAppender = append_randomizer_div,\n) {\n  //print one of the prompts\n  const get_random_prompt_html = () =>\n    `<span>${random_from_list(\n      prompts_for_category,\n    )}</span><span style=\"float: right; cursor: pointer;\" title=\"Click for another prompt\">\uD83D\uDD04</span>`;\n\n  // add a place holder for random div.\n  const new_element = jQueryProvider(`<div class=\"alert alert-primary\" role=\"alert\"/>`);\n  jQueryProvider(category).after(new_element);\n  randomizerAppender(new_element, get_random_prompt_html);\n}\n\n/**\n * Extracts prompts from categories on the page\n * @param jQueryProvider jQuery function (default: global $)\n * @returns Map of category elements to their prompts\n */\nexport function category_to_prompts(jQueryProvider = $) {\n  // prompt_categories are H3s with a UL under them, and the li's under there are the prompt.\n  const starting_node = jQueryProvider(\"h3\").first();\n  let current_category = starting_node;\n  let prompts_for_category = [];\n  const map_category_to_prompts = new Map();\n\n  for (let node = starting_node; node.length !== 0; node = jQueryProvider(node).next()) {\n    if (node.prop(\"tagName\") === \"H3\") {\n      // Build prompt map\n      map_category_to_prompts.set(current_category, prompts_for_category);\n\n      // start processing next categroy\n      current_category = node;\n      prompts_for_category = [];\n      continue;\n    }\n\n    // in a category, prompts are the children of the first unordered list, so skip\n    // stuff that isn't a list\n    if (node.prop(\"tagName\") !== \"UL\") {\n      continue;\n    }\n    // we should now be the first list in the category\n    prompts_for_category = Array.from(jQueryProvider(node).find(\"li\")).map((li) => jQueryProvider(li).text());\n  }\n\n  map_category_to_prompts.set(current_category, prompts_for_category);\n\n  return map_category_to_prompts;\n}\n\n/**\n * Performs a breadth-first traversal of a tree\n * @param node The root node of the tree to traverse\n * @yields [current node, parent node] pairs for each node in the tree\n */\nexport function* breadth_first_walk(node: TreeNode) {\n  if (!node) {\n    return;\n  }\n  const Q = [];\n  Q.push([node, null as TreeNode]);\n  while (Q.length > 0) {\n    const [current, parent]: [TreeNode, TreeNode] = Q.shift();\n    for (const child of current.children ?? []) {\n      Q.push([child, current]);\n    }\n    yield [current, parent];\n  }\n}\n\n/**\n * Converts a tree structure to Plotly's data format for visualization\n * @param root Root node of the tree\n * @returns Object with ids, labels, and parents arrays for Plotly\n */\nexport function tree_to_plotly_data_format(root) {\n  // Plotly needs a tree to be flattened into a set of lists\n  // ids\n  // labels\n  // parents\n  // values\n\n  const names_parent_names = Array.from(breadth_first_walk(root)).map(([n, p]) => [n.name, p?.name]);\n\n  return {\n    ids: names_parent_names.map(([n, p]) => n),\n    labels: names_parent_names.map(([n, p]) => n),\n    parents: names_parent_names.map(([n, p]) => p),\n  };\n}\n\n/**\n * Converts category elements to category text with their associated prompts\n * @param mapProvider Function that provides category-to-prompts mapping (default: internal implementation)\n * @returns Map of category texts to their prompts\n */\nexport function category_to_prompts_text(mapProvider = category_to_prompts) {\n  const map = mapProvider();\n  const list = Array.from(map.entries()).map(([k, v], _index) => [(k as any).text(), v]);\n  return new Map(list as any);\n}\n\n/**\n * Gets a random prompt for a specific label from the tree\n * @param label The label to find in the tree\n * @param tree_node The root node of the tree\n * @param map_node_to_prompts Map of node names to prompts\n * @returns Random prompt for the specified label\n */\nexport function random_prompt_for_label(label, tree_node, map_node_to_prompts) {\n  // Find the label in the tree\n  // recall bread first search returns a parent as well.\n  const result = Array.from(breadth_first_walk(tree_node)).find(([current, _parent]) => current.name === label);\n\n  if (!result) {\n    return \"Click in any box or circle\";\n  }\n\n  const [clicked_node, _parent] = result;\n\n  // Gather all the prompts for the children of the clicked node.\n  const all_prompts = Array.from(breadth_first_walk(clicked_node))\n    .map(([node, _parent]) => node) // returns node and parent\n    .filter((node) => {\n      // Check both with and without the link emoji\n      const hasWithoutEmoji = map_node_to_prompts.has(node.name);\n      const hasWithEmoji = map_node_to_prompts.has(`${node.name}\uD83D\uDD17`);\n      return hasWithoutEmoji || hasWithEmoji;\n    })\n    .flatMap((node) => {\n      // Try to get prompts with and without emoji\n      const prompts = map_node_to_prompts.get(node.name) || map_node_to_prompts.get(`${node.name}\uD83D\uDD17`) || [];\n      return prompts.map((prompt) => `${node.name}: ${prompt}`);\n    });\n\n  if (all_prompts.length === 0) {\n    return \"Click in any box or circle\";\n  }\n\n  return random_from_list(all_prompts);\n}\n\n/**\n * Adds a sunburst visualization to the page\n * @param plot_element_id ID of the element where the plot should be rendered\n * @param random_text_div_id ID of the div where random text should be displayed\n * @param root Root node of the tree to visualize\n * @param jQueryProvider jQuery function (default: global $)\n * @param plotlyProvider Plotly library (default: global Plotly)\n */\nexport async function add_sunburst(\n  plot_element_id,\n  random_text_div_id,\n  root: TreeNode,\n  jQueryProvider = $,\n  plotlyProvider = Plotly,\n) {\n  if (!plotlyProvider) {\n    console.error(\"Plotly is not available\");\n    return;\n  }\n\n  const sunburst_tree_flat = tree_to_plotly_data_format(root);\n  const sunburst_data = {\n    type: \"sunburst\",\n    outsidetextfont: { size: 20, color: \"#377eb8\" },\n    // leaf: {opacity: 0.4},\n    hoverinfo: \"none\",\n    marker: { line: { width: 2 } },\n    maxdepth: 2,\n    displayModeBar: false,\n  };\n  Object.assign(sunburst_data, sunburst_tree_flat);\n  (sunburst_data as any).values = undefined; // remove values to avoid sizing pie slices\n\n  const sunburst_layout = {\n    margin: { l: 0, r: 0, b: 0, t: 0 },\n    sunburstcolorway: [\"#636efa\", \"#ef553b\", \"#00cc96\"],\n  };\n  const config = {\n    displayModeBar: false,\n  };\n\n  try {\n    await plotlyProvider.newPlot(plot_element_id, [sunburst_data] as any, sunburst_layout, config);\n\n    const set_random_prompt_text = (text) => {\n      jQueryProvider(`#${random_text_div_id}`).text(text);\n    };\n\n    // Set click handler for div\n    jQueryProvider(`#${random_text_div_id}`)\n      .first()\n      .click(() => {\n        const label = jQueryProvider(\"#sunburst text:first\").text(); // Hack should use an API to find center text\n        const prompt = random_prompt_for_label(label, root, category_to_prompts_text());\n        set_random_prompt_text(prompt);\n      });\n\n    // Attach the sunburst click event handler\n    const plotElement = document.getElementById(plot_element_id);\n    if (plotElement && typeof (plotElement as any).on === \"function\") {\n      (plotElement as any).on(\"plotly_click\", (eventData: any) => {\n        if (eventData?.points?.[0]) {\n          const label = eventData.points[0].label;\n          const prompt = random_prompt_for_label(label, root, category_to_prompts_text());\n          set_random_prompt_text(prompt);\n        }\n      });\n    }\n\n    return plotElement;\n  } catch (error) {\n    console.error(\"Failed to create sunburst plot:\", error);\n    return null;\n  }\n}\n\n/**\n * Extracts a tree structure from H2, H3, and LI elements on the page\n * @param rootName The name for the root node of the tree\n * @param containerSelector Optional jQuery selector to scope the search (e.g., \"article\", \"#content\")\n * @param jQueryProvider jQuery function (default: global $)\n * @returns TreeNode representing the extracted hierarchy\n */\nexport function extract_tree_from_dom(\n  rootName = \"Root\",\n  containerSelector: string | null = null,\n  jQueryProvider: any = $,\n): TreeNode {\n  const h2Elements = containerSelector ? jQueryProvider(containerSelector).find(\"h2\") : jQueryProvider(\"h2\");\n  const rootChildren: TreeNode[] = [];\n\n  h2Elements.each((_index, h2Element) => {\n    const h2 = jQueryProvider(h2Element);\n    const h2Text = h2.text().trim();\n\n    // Skip if empty\n    if (!h2Text) return;\n\n    const h2Children: TreeNode[] = [];\n    let currentElement = h2.next();\n\n    // Process elements until we hit another H2 or run out of elements\n    while (currentElement.length > 0 && currentElement.prop(\"tagName\") !== \"H2\") {\n      if (currentElement.prop(\"tagName\") === \"H3\") {\n        const h3Text = currentElement.text().trim();\n        if (h3Text) {\n          // Add H3 as a node regardless of whether it has a UL after it\n          h2Children.push(new TreeNode({ name: h3Text }));\n        }\n      }\n      currentElement = currentElement.next();\n    }\n\n    if (h2Children.length > 0) {\n      rootChildren.push(new TreeNode({ name: h2Text, children: h2Children }));\n    }\n  });\n\n  return new TreeNode({ name: rootName, children: rootChildren });\n}\n\n/**\n * Creates a sunburst visualization automatically from the page's H2/H3 structure\n * @param plot_element_id ID of the element where the plot should be rendered\n * @param random_text_div_id ID of the div where random text should be displayed\n * @param rootName Optional name for the root node (default: \"Root\")\n * @param containerSelector Optional jQuery selector to scope the search (e.g., \"article\", \"#content\")\n * @param jQueryProvider jQuery function (default: global $)\n * @param plotlyProvider Plotly library (default: global Plotly)\n */\nexport async function add_sunburst_from_dom(\n  plot_element_id: string,\n  random_text_div_id: string,\n  rootName = \"Root\",\n  containerSelector: string | null = null,\n  jQueryProvider = $,\n  plotlyProvider = Plotly,\n) {\n  const tree = extract_tree_from_dom(rootName, containerSelector, jQueryProvider);\n  return add_sunburst(plot_element_id, random_text_div_id, tree, jQueryProvider, plotlyProvider);\n}\n\n// Export testing utilities separately\nexport const UT = {\n  breadth_first_walk,\n  shuffle,\n};\n", "import { add_eulogy_roles, add_imported_blog_posts } from \"./blogger_import.js\";\nimport { append_randomizer_div, get_link_info, random_from_list } from \"./index\";\n// Only include this in the html files, one per file\n// This allows code to seet things to refactor\nimport { TreeNode, add_random_prompts, add_sunburst, add_sunburst_from_dom } from \"./random-prompter\";\n\n/**\n * Class representing the Seven Habits tree structure\n */\nexport class SevenHabits {\n  /**\n   * Gets the tree structure for Seven Habits visualization\n   * @returns {TreeNode} The root node of the Seven Habits tree\n   */\n  get_tree() {\n    const root = new TreeNode({\n      name: \"7H \",\n      children: [\n        new TreeNode({ name: \"\" }),\n        new TreeNode({ name: \"Be Proactive\" }),\n        new TreeNode({ name: \"Begin with the end in mind\" }),\n        new TreeNode({ name: \"First things First\" }),\n        new TreeNode({ name: \"Think Win/Win\" }),\n        new TreeNode({ name: \"First Understand\" }),\n        new TreeNode({ name: \"Synergize\" }),\n        new TreeNode({ name: \"Sharpen the Saw\" }),\n      ],\n    });\n    return root;\n  }\n}\n\n/**\n * Class representing the Things I Enjoy tree structure\n */\nexport class ThingsIEnjoy {\n  /**\n   * Gets the tree structure for Things I Enjoy visualization\n   * @returns {TreeNode} The root node of the Things I Enjoy tree\n   */\n  get_tree() {\n    const health = new TreeNode({\n      name: \"Health\",\n      children: [{ name: \"Physical\" }, { name: \"Emotional\" }, { name: \"Cognative\" }],\n      value: 31,\n    });\n    const magic = new TreeNode({\n      name: \"Magic\",\n      children: [\n        new TreeNode({ name: \"Card Magic\" }),\n        new TreeNode({ name: \"Coin Magic\" }),\n        new TreeNode({ name: \"Band Magic\" }),\n      ],\n    });\n    const hobbies = new TreeNode({\n      name: \"Hobbies\",\n      children: [new TreeNode({ name: \"Biking\" }), new TreeNode({ name: \"Tech\" }), new TreeNode({ name: \"Juggling\" })],\n    });\n    const relationships = new TreeNode({\n      name: \"Relationships\",\n      children: [\n        new TreeNode({ name: \"Zach\" }),\n        new TreeNode({ name: \"Amelia\" }),\n        new TreeNode({ name: \"Tori\" }),\n        new TreeNode({ name: \"Friends\" }),\n      ],\n    });\n    const joy = new TreeNode({\n      name: \"Joy\",\n      children: [new TreeNode({ name: \"Balloons\" }), new TreeNode({ name: \"Joy to Others\" })],\n    });\n\n    return new TreeNode({\n      name: \"Invest in\",\n      children: [health, magic, hobbies, relationships, joy],\n    });\n  }\n}\n\n/**\n * Creates HTML for a post preview with audio player\n * @param {Object} param0 Object containing url, title, and description\n * @returns {string} HTML string for the post preview\n */\nexport function makePostPreviewHTML({ url, title, description }) {\n  // TODO: HACK: Strip to the right of Week number\n  const title_href = `<a href='${url}'}>${title}</a>`;\n  // random id for audio player\n  const id = `audio_player_${Math.floor(Math.random() * 10000000000)}`;\n  // filename is URL with '/' turned to '_'\n  const filename = url.replace(/\\//g, \"_\");\n\n  return `\n    <div>\n        <audio id='${id}'>\n          <source src=\"https://github.com/idvorkin/blob/raw/master/url_info_voices/igor/${filename}.mp3\" type=\"audio/mp3\">\n        </audio>\n      ${title_href}:  <b><a class='lead' onclick=\"toggle_play_pause('${id}')\">\uD83D\uDD08</a></b> ${description}\n    </div>\n  `;\n}\n\n/**\n * Generates HTML for a random post\n * @param {Function} linkInfoProvider Function to get link info (default: get_link_info)\n * @param {Function} randomSelector Function to get a random item (default: random_from_list)\n * @returns {Promise<string>} HTML string for the random post\n */\nexport async function make_random_post_html(linkInfoProvider = get_link_info, randomSelector = random_from_list) {\n  try {\n    const all_url_info = await linkInfoProvider();\n    //  Yuk, find a clearere way to do this\n    const all_pages = Object.entries(all_url_info) // returns a list of [url, info]\n      .map((e) => e[1]);\n    const random_post = randomSelector(all_pages);\n    return makePostPreviewHTML({\n      url: random_post.url,\n      title: random_post.title,\n      description: random_post.description,\n    });\n  } catch (error) {\n    console.error(\"Error generating random post HTML:\", error);\n    return \"<div>Could not load random post</div>\";\n  }\n}\n\n/**\n * Loads random eulogy roles into specified elements\n * @param {string} element1 ID of first element (default: \"#e1\")\n * @param {string} element2 ID of second element (default: \"#e2\")\n * @param {string} element3 ID of third element (default: \"#e3\")\n * @param {Function} eulogyLoader Function to add eulogy roles (default: add_eulogy_roles)\n */\nexport function load_random_eulogy(\n  element1 = \"#e1\",\n  element2 = \"#e2\",\n  element3 = \"#e3\",\n  eulogyLoader = add_eulogy_roles,\n) {\n  try {\n    eulogyLoader(element1);\n    eulogyLoader(element2);\n    eulogyLoader(element3);\n  } catch (error) {\n    console.error(\"Error loading random eulogy:\", error);\n  }\n}\n\n/**\n * Loads content for the Enjoy page\n * @param {Function} sunburstAdder Function to add sunburst (default: add_sunburst)\n * @param {Function} promptsAdder Function to add random prompts (default: add_random_prompts)\n * @param {Function} postsAdder Function to add blog posts (default: add_imported_blog_posts)\n * @param {Function} eulogyAdder Function to add eulogy roles (default: add_eulogy_roles)\n * @param {Function} randomizerAppender Function to append randomizer (default: append_randomizer_div)\n */\nexport function load_enjoy2(\n  sunburstAdder = add_sunburst,\n  promptsAdder = add_random_prompts,\n  postsAdder = add_imported_blog_posts,\n  eulogyAdder = add_eulogy_roles,\n  randomizerAppender = append_randomizer_div,\n) {\n  try {\n    sunburstAdder(\"sunburst\", \"sunburst_text\", new ThingsIEnjoy().get_tree());\n    promptsAdder();\n    postsAdder(); // has a random achievement post\n    eulogyAdder(\"#random-eulogy-role\");\n    randomizerAppender(\"#random-blog-posts\", async () => await make_random_post_html());\n  } catch (error) {\n    console.error(\"\u274C Error loading enjoy page:\", error);\n  }\n}\n\n/**\n * Loads content for the 7 Habits page\n * @param {Function} sunburstAdder Function to add sunburst (default: add_sunburst)\n * @param {Function} promptsAdder Function to add random prompts (default: add_random_prompts)\n */\nexport function load_7_habits(sunburstAdder = add_sunburst, promptsAdder = add_random_prompts) {\n  try {\n    sunburstAdder(\"sunburst\", \"sunburst_text\", new SevenHabits().get_tree());\n    promptsAdder();\n  } catch (error) {\n    console.error(\"Error loading 7 habits page:\", error);\n  }\n}\n\n/**\n * Loads content for the IG66 page\n * @param {Function} postsAdder Function to add blog posts (default: add_imported_blog_posts)\n */\nexport function load_ig66(postsAdder = add_imported_blog_posts) {\n  try {\n    postsAdder();\n  } catch (error) {\n    console.error(\"Error loading IG66 page:\", error);\n  }\n}\n\n/**\n * Loads content for the Balance page\n * @param {Function} restChartMaker Function to make rest chart (default: make_balance_chart_by_desired_time_rest)\n * @param {Function} workChartMaker Function to make work chart (default: make_balance_chart_by_work)\n * @param {Function} radarMapMaker Function to make radar map (default: make_radar_map)\n */\nexport function load_balance(\n  restChartMaker = make_balance_chart_by_desired_time_rest,\n  workChartMaker = make_balance_chart_by_work,\n  radarMapMaker = make_radar_map,\n) {\n  try {\n    restChartMaker(\"balance-heatmap-rest\");\n    workChartMaker(\"balance-heatmap-work\");\n    radarMapMaker(\"balance-radar-map-ideal\");\n  } catch (error) {\n    console.error(\"Error loading balance page:\", error);\n  }\n}\n\n// Month names for charts\nexport const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n// Constants for heatmap configuration\nexport const row_height = 20;\nexport const heatmap_base = 100;\nexport const ideal_color = \"#00BF00\";\n\n/**\n * Creates a radar map visualization\n * @param {string} div ID of the element to render the map in\n * @param {Object} plotly Plotly library (optional)\n */\nexport async function make_radar_map(div, plotly?) {\n  const data = [\n    {\n      type: \"scatterpolar\",\n      r: [8, 8, 8, 5, 8, 8, 8],\n      theta: [\"Work\", \"Tech\", \"Health\", \"Hobbies\", \"Relationships\", \"Magic\", \"Work\"],\n      name: \"2020 Goal\",\n      fill: \"toself\",\n    },\n    {\n      type: \"scatterpolar\",\n      r: [7, 7, 5, 5, 5, 9, 7],\n      theta: [\"Work\", \"Tech\", \"Health\", \"Hobbies\", \"Relationships\", \"Magic\", \"Work\"],\n      name: \"2020 Actual\",\n      fill: \"toself\",\n    },\n  ];\n\n  const layout = {\n    polar: {\n      radialaxis: {\n        visible: true,\n        range: [0, 10],\n      },\n    },\n    showlegend: true,\n  };\n  const config = {\n    displayModeBar: false,\n  };\n\n  if (typeof plotly !== \"undefined\" && plotly) {\n    try {\n      await plotly.newPlot(div, data, layout, config);\n    } catch (error) {\n      console.error(\"Error creating radar map:\", error);\n    }\n  } else {\n    console.warn(\"Plotly is not defined, skipping chart rendering\");\n  }\n}\n\n/**\n * Creates a heatmap for work balance\n * @param {string} div ID of the element to render the heatmap in\n * @param {Object} plotly Plotly library (optional)\n */\nexport async function make_balance_chart_by_work(div, plotly?) {\n  const roles = [\"Tech\", \"Work\"];\n  const layout = {\n    height: row_height * roles.length + heatmap_base,\n    margin: {\n      t: 5,\n    },\n    pad: 0,\n  };\n  const color_scale = [\n    [0.0, \"darkblue\"],\n    [0.4, \"blue\"],\n    [0.5, ideal_color],\n    [0.6, \"darkred\"],\n    [1.0, \"red\"],\n  ];\n  const gap_desire_over_time = [\n    [7, 4, 7, 8, 2, 4, 2, 3, 2, 8], //  Tech\n    [10, 7, 5, 5, 3, 5, 6, 6, 7, 5], //  Work\n  ];\n\n  const data = [\n    {\n      colorscale: color_scale,\n      zmin: 0,\n      zmax: 10,\n      x: months.slice(2, 13),\n      y: roles,\n      z: gap_desire_over_time,\n      type: \"heatmap\",\n    },\n  ];\n  const config = {\n    displayModeBar: false,\n  };\n\n  if (typeof plotly !== \"undefined\" && plotly) {\n    try {\n      await plotly.newPlot(div, data, layout, config);\n    } catch (error) {\n      console.error(\"Error creating work balance chart:\", error);\n    }\n  } else {\n    console.warn(\"Plotly is not defined, skipping chart rendering\");\n  }\n}\n\n/**\n * Creates a heatmap for desired rest time\n * @param {string} div ID of the element to render the heatmap in\n * @param {Object} plotly Plotly library (optional)\n */\nexport async function make_balance_chart_by_desired_time_rest(div, plotly?) {\n  const roles = [\"Health\", \"Hobbies\", \"Family\", \"Magic\"];\n  const gap_desire_over_time = [\n    // J, F, M, A, M, J, J, A, S, O, N, D\n    [4, 4, 3, 4, 5, 3, 2, 2, 3, 2], // Health\n    [4, 4, 3, 4, 5, 4, 4, 2, 4, 5], // Hobbies\n    [2, 3, 3, 4, 1, 5, 4, 3, 2, 4], // Family\n    [5, 5, 5, 4, 5, 5, 4, 5, 4, 5], //  Magic\n  ];\n\n  const color_scale = [\n    [0.0, \"red\"],\n    [0.4, \"darkred\"],\n    [0.5, ideal_color],\n    [0.6, \"blue\"],\n    [1.0, \"darkblue\"],\n  ];\n  const data = [\n    {\n      colorscale: color_scale,\n      zmin: 0,\n      zmax: 10,\n      x: months.slice(2, 13),\n      y: roles.reverse(),\n      z: gap_desire_over_time.reverse(),\n      type: \"heatmap\",\n    },\n  ];\n  const config = {\n    displayModeBar: false,\n  };\n  const layout = {\n    height: row_height * roles.length + heatmap_base,\n    margin: {\n      t: 5,\n    },\n    pad: 0,\n  };\n\n  if (typeof plotly !== \"undefined\" && plotly) {\n    try {\n      await plotly.newPlot(div, data, layout, config);\n    } catch (error) {\n      console.error(\"Error creating rest time chart:\", error);\n    }\n  } else {\n    console.warn(\"Plotly is not defined, skipping chart rendering\");\n  }\n}\n\n/**\n * Loads content for pages with auto-generated sunburst from DOM structure\n * @param rootName The name for the root node of the sunburst\n * @param sunburstAdder Function to add sunburst (default: add_sunburst_from_dom)\n * @param promptsAdder Function to add random prompts (default: add_random_prompts)\n * @param postsAdder Function to add blog posts (default: add_imported_blog_posts)\n * @param eulogyAdder Function to add eulogy roles (default: add_eulogy_roles)\n * @param randomizerAppender Function to append randomizer (default: append_randomizer_div)\n */\nexport function load_auto_sunburst(\n  rootName = \"Topics\",\n  sunburstAdder = add_sunburst_from_dom,\n  promptsAdder = add_random_prompts,\n  postsAdder = add_imported_blog_posts,\n  eulogyAdder = add_eulogy_roles,\n  randomizerAppender = append_randomizer_div,\n) {\n  try {\n    sunburstAdder(\"sunburst\", \"sunburst_text\", rootName);\n    promptsAdder();\n    postsAdder(); // has a random achievement post\n    eulogyAdder(\"#random-eulogy-role\");\n    randomizerAppender(\"#random-blog-posts\", async () => await make_random_post_html());\n  } catch (error) {\n    console.error(\"Error loading auto-generated sunburst:\", error);\n  }\n}\n\n// Export utility functions for testing\nexport const UT = {\n  SevenHabits,\n  ThingsIEnjoy,\n};\n", "// Import dependencies\nimport { get_link_info, random_from_list } from \"./shared\";\n\n// For autocomplete, safely access the window properties\n// This makes it more testable\nlet autocomplete: any;\nlet getAlgoliaResults: any;\nif (typeof window !== \"undefined\" && window[\"@algolia/autocomplete-js\"]) {\n  const algoliaAutocomplete = window[\"@algolia/autocomplete-js\"];\n  autocomplete = algoliaAutocomplete.autocomplete;\n  getAlgoliaResults = algoliaAutocomplete.getAlgoliaResults;\n}\n\n// Adding a query parameter.\n// import instantsearch from \"algoliasearch\";\n\nexport const search_placeholder_text = \"Search Igor's Musings ...\";\n\n/**\n * Gets a query parameter value from a URL\n * @param name Parameter name\n * @param url URL to extract from (defaults to window.location.href)\n * @returns Parameter value, empty string if parameter exists with no value, or null if parameter doesn't exist\n */\nexport function getParameterByName(name, url): string {\n  if (!url) url = window.location.href;\n  name = name.replace(/[[\\]\\\\]/g, \"\\\\$&\");\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`);\n  const results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return \"\";\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\n/**\n * Generates HTML for an Algolia search hit\n * @param hit Algolia search hit\n * @returns HTML string\n */\nexport function InstantSearchHitTemplate(hit) {\n  // https://www.algolia.com/doc/api-reference/widgets/infinite-hits/js/\n  try {\n    let url = hit.url;\n    if (hit.anchor) {\n      url += `#${hit.anchor}`;\n    }\n    const highlighted = hit._highlightResult;\n\n    if (!highlighted) {\n      console.log(\"No Highlight\", hit);\n    }\n    const title = highlighted.title.value;\n    const content = highlighted?.content?.value ?? \"\";\n    // <section class=\"notepad-post-excerpt\"><p>${content}</p></section>\n\n    const string_rep = `\n           <span onClick=\"window.location='${url}';\">\n              <b> <a href=\"${url}\">${title}</a></b> <span>${content}</span>\n           </span>\n        `;\n    return string_rep;\n  } catch (err) {\n    console.log(\"Error in hitTemplate\", err, hit);\n  }\n  return \"invalid HTML\";\n}\n\ndeclare function instantsearch(l: any): any;\ndeclare function algoliasearch(l: any, l2: any): any;\n\n/**\n * Creates an Algolia InstantSearch instance\n * @param appid Algolia app ID\n * @param search_api_key Algolia search API key\n * @param index_name Algolia index name\n * @param initial_query Initial search query\n * @returns InstantSearch instance\n */\nexport function CreateSearch(appid, search_api_key, index_name, initial_query) {\n  // Instanciating InstantSearch.js with Algolia credentials\n  const searchClient = algoliasearch(appid, search_api_key);\n  const search = instantsearch({\n    searchClient: searchClient,\n    indexName: index_name,\n    searchParameters: {\n      query: initial_query,\n    },\n  });\n\n  // Adding searchbar and results widgets\n  search.addWidget(\n    // @ts-ignore:TS2339\n    instantsearch.widgets.searchBox({\n      container: \"#search-box\",\n      placeholder: search_placeholder_text,\n      poweredBy: true, // This is required if you're on the free Community plan\n      showSubmit: false,\n      showReset: false,\n      showLoadingIndicator: false,\n    }),\n  );\n\n  search.addWidget(\n    // @ts-ignore:TS2339\n    instantsearch.widgets.infiniteHits({\n      container: \"#search-hits\",\n      templates: {\n        item: InstantSearchHitTemplate,\n      },\n      item({ item }) {\n        return `Result: ${item.name}`;\n      },\n    }),\n  );\n\n  return search;\n}\n\n// Copied from the docs, but this isn't working for me.\nexport function AutoCompleteHitTemplateWithComponentDoesNotWork({ item, components, createElement, fragments }) {\n  console.log(item);\n  return components.Highlight({ hit: item });\n}\n\n// Algolia uses some PREACT thing, which this project does not support\n// Reach way into algolia and build the HTML manually\nexport function AutoCompleteHitTemplate({ item, createElement }) {\n  // https://www.algolia.com/doc/api-reference/widgets/infinite-hits/js/\n  return createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: InstantSearchHitTemplate(item),\n    },\n  });\n}\n\n/**\n * Gets a random post from the backlinks\n * @returns Random post with title, URL, and description\n */\nexport async function get_random_post() {\n  const startTime = performance.now();\n  const all_url_info = await get_link_info();\n  const loadTime = performance.now() - startTime;\n  console.log(`  \uD83D\uDCCA [get_random_post] Loaded links in ${loadTime.toFixed(0)}ms`);\n  \n  //  Yuk, find a clearere way to do this\n  const all_pages = Object.entries(all_url_info) // returns a list of [url, info]\n    .map((e) => e[1]);\n  const random_post = random_from_list(all_pages);\n  const ret = {\n    title: random_post.title,\n    url: random_post.url,\n    description: random_post.description,\n  };\n  return ret;\n}\n\n/**\n * Gets multiple random posts efficiently\n * @param count Number of random posts to return\n * @returns Array of random posts\n */\nexport async function get_random_posts_batch(count = 4) {\n  const startTime = performance.now();\n  const all_url_info = await get_link_info();\n  const loadTime = performance.now() - startTime;\n  console.log(`  \uD83D\uDCCA [get_random_posts_batch] Loaded links once in ${loadTime.toFixed(0)}ms`);\n  \n  const all_pages = Object.entries(all_url_info).map((e) => e[1]);\n  const results = [];\n  const usedIndices = new Set();\n  \n  // Get unique random posts\n  while (results.length < count && results.length < all_pages.length) {\n    const randomIndex = Math.floor(Math.random() * all_pages.length);\n    if (!usedIndices.has(randomIndex)) {\n      usedIndices.add(randomIndex);\n      const post = all_pages[randomIndex];\n      results.push({\n        title: post.title,\n        url: post.url,\n        description: post.description,\n      });\n    }\n  }\n  \n  return results;\n}\n\n/**\n * Gets recent posts from the back-links.json file\n * Returns the specified number of most recently modified posts\n * @param count Number of posts to return\n */\nexport async function get_recent_posts(count = 4) {\n  try {\n    const startTime = performance.now();\n    const all_url_info = await get_link_info();\n    const loadTime = performance.now() - startTime;\n    console.log(`  \uD83D\uDCCA [get_recent_posts] Loaded links in ${loadTime.toFixed(0)}ms`);\n\n    // Convert to array of pages for easier processing\n    const pages = Object.entries(all_url_info).map(([url, metadata]) => ({\n      url,\n      title: metadata.title || url,\n      description: metadata.description || \"\",\n      doc_size: metadata.doc_size || 0,\n      last_modified: metadata.last_modified || \"\",\n    }));\n\n    // Filter out pages that are likely redirects (these have empty descriptions and titles)\n    const realPages = pages.filter(\n      (page) => page.description && page.description.trim() !== \"\" && page.title && page.title.trim() !== \"\",\n    );\n\n    // Sort by last_modified date (newest first)\n    const sortedPages = realPages.sort((a, b) => {\n      if (a.last_modified && b.last_modified) {\n        return new Date(b.last_modified).getTime() - new Date(a.last_modified).getTime();\n      }\n      // Fallback to doc_size if last_modified is not available\n      return b.doc_size - a.doc_size;\n    });\n\n    // Take the top N most recent posts\n    return sortedPages.slice(0, count);\n  } catch (error) {\n    console.error(\"\u274C Error loading recent posts:\", error);\n    return [];\n  }\n}\n\n/**\n * Gets random posts for search results\n * @param count Number of random posts to return (default: 3)\n */\nexport async function GetRandomSearchResults(count = 3) {\n  return {\n    sourceId: \"random_posts\",\n    async getItems() {\n      const sized_array = new Array(count).join(\"_\").split(\"_\");\n      const random_posts = await Promise.all(sized_array.map(async (e) => get_random_post()));\n      return random_posts;\n    },\n    getItemUrl({ item }) {\n      const ret = item.url;\n      return ret;\n    },\n    templates: {\n      item({ item, createElement }) {\n        return createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: `\n            <span onClick=\"window.location='${item.url}';\" >\n           <b> <a href=\"${item.url}\">${item.title}</a></b>\n            <span>${item.description}</span>\n            </span>\n            `,\n          },\n        });\n      },\n      header({ createElement }) {\n        return createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: \"<i style='color:grey'>Random posts ...</i>\",\n          },\n        });\n      },\n    },\n  };\n}\n\n/**\n * Gets recent posts for search results\n * @param count Number of recent posts to return (default: 4)\n */\nexport async function GetRecentSearchResults(count = 4) {\n  return {\n    sourceId: \"recent_posts\",\n    async getItems() {\n      const recentPosts = await get_recent_posts(count);\n      return recentPosts;\n    },\n    getItemUrl({ item }) {\n      const ret = item.url;\n      return ret;\n    },\n    templates: {\n      item({ item, createElement }) {\n        return createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: `\n            <span onClick=\"window.location='${item.url}';\" >\n           <b> <a href=\"${item.url}\">${item.title}</a></b>\n            <span>${item.description}</span>\n            </span>\n            `,\n          },\n        });\n      },\n      header({ createElement }) {\n        return createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: \"<i style='color:grey'>Recent posts ...</i>\",\n          },\n        });\n      },\n    },\n  };\n}\n\n/**\n * Gets featured posts from Algolia search\n * @param searchClient Algolia search client\n * @param index_name Index name to search\n * @param query Search query\n * @param hitsPerPage Number of results to return (default: 3)\n * @param includeFamilyJournal Whether to include family journal posts\n */\nexport function GetAlgoliaResults(searchClient, index_name, query, hitsPerPage = 3, includeFamilyJournal = false) {\n  // By default don't include family journal.\n  let filter = \"NOT tags:family-journal\";\n  if (includeFamilyJournal) {\n    filter = \"\";\n  }\n\n  return {\n    sourceId: \"featured_posts\",\n    getItems() {\n      if (!getAlgoliaResults) {\n        console.error(\"getAlgoliaResults is not defined\");\n        return [];\n      }\n      return getAlgoliaResults({\n        searchClient,\n        queries: [\n          {\n            indexName: index_name,\n            query,\n            filters: filter,\n            params: {\n              hitsPerPage: hitsPerPage,\n              highlightPreTag: \"<span style='background:yellow'>\",\n              highlightPostTag: \"</span>\",\n            },\n          },\n        ],\n      });\n    },\n    templates: {\n      item: AutoCompleteHitTemplate,\n      header({ createElement }) {\n        return createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: \"<i style='color:grey'>Featured posts ...</i>\",\n          },\n        });\n      },\n    },\n    getItemUrl({ item }) {\n      let url = item.url;\n      if (item.anchor) {\n        url += `#${item.anchor}`;\n      }\n      const ret = url;\n      return ret;\n    },\n  };\n}\n\n/**\n * Creates an autocomplete search component\n * @param appid Algolia app ID\n * @param search_api_key Algolia search API key\n * @param index_name Algolia index name\n * @param autocomplete_id ID of the autocomplete element\n * @param includeFamilyJournal Whether to include family journal posts\n * @param featuredCount Number of featured posts to show (default: 3)\n * @param recentCount Number of recent posts to show (default: 4)\n * @param randomCount Number of random posts to show (default: 3)\n */\nexport async function CreateAutoComplete(\n  appid,\n  search_api_key,\n  index_name,\n  autocomplete_id,\n  includeFamilyJournal,\n  featuredCount = 3,\n  recentCount = 4,\n  randomCount = 3,\n) {\n  if (!autocomplete) {\n    console.error(\"Autocomplete is not defined\");\n    return;\n  }\n\n  const searchClient = algoliasearch(appid, search_api_key);\n  const randomSearchResults = await GetRandomSearchResults(randomCount);\n  const recentSearchResults = await GetRecentSearchResults(recentCount);\n\n  function GetSources({ query }) {\n    const isEmptySearch = query.length === 0;\n    if (isEmptySearch) {\n      // Searching for a space gives nice default results, so when no results search for that ...\n      query = \" \";\n    }\n\n    // Get featured posts (from Algolia search)\n    const featuredPosts = GetAlgoliaResults(\n      searchClient,\n      index_name,\n      query,\n      isEmptySearch ? featuredCount : 10, // Show N featured posts when empty, more when searching\n      includeFamilyJournal,\n    );\n\n    // For empty search, show featured, recent, and random posts\n    // For actual search, just show search results\n    if (isEmptySearch) {\n      return [featuredPosts, recentSearchResults, randomSearchResults];\n    }\n    return [featuredPosts];\n  }\n\n  // Make sure we have the element\n  // autocomplete_id can be either '#id' or just 'id'\n  const elementId = autocomplete_id.startsWith(\"#\") ? autocomplete_id : `#${autocomplete_id}`;\n  if ($(elementId).length === 0) {\n    console.log(\"No autocomplete element found\", \"autocomplete_id\", autocomplete_id);\n    return;\n  }\n\n  // Setup Auto Complete Stuff\n  return autocomplete({\n    container: elementId,\n    placeholder: search_placeholder_text,\n    getSources: GetSources,\n    debug: false,\n    openOnFocus: true,\n    detachedMediaQuery: \"\",\n  });\n}\n", "/**\n * Main JavaScript Entry Point\n *\n * This file serves as the single entry point for all JavaScript functionality\n * on the blog. It imports and initializes all necessary modules.\n */\n\n// Import main functionality\nimport { load_globals } from \"./main\";\n// Import page-loader functionality\nimport {\n  load_7_habits,\n  load_auto_sunburst,\n  load_balance,\n  load_enjoy2,\n  load_ig66,\n  load_random_eulogy,\n  makePostPreviewHTML,\n  make_random_post_html,\n} from \"./page-loader\";\n// Import random-prompter functionality\nimport { TreeNode, add_random_prompts, add_sunburst, add_sunburst_from_dom } from \"./random-prompter\";\n\n// Import recent posts functionality\nimport { initRecentAllPosts } from \"./recent\";\n// Import search functionality\nimport { CreateAutoComplete, get_random_post, get_recent_posts, get_random_posts_batch } from \"./search\";\n// Import shared utilities\nimport {\n  type IURLInfo,\n  type IURLInfoMap,\n  MakeBackLinkHTML,\n  append_randomizer_div,\n  defer,\n  get_link_info,\n  get_random_page_url,\n  random_from_list,\n  shuffle,\n} from \"./shared\";\n\n// Declare global variables from external libraries\ndeclare let $: {\n  (\n    selector: string,\n  ): {\n    ready: (fn: () => void) => void;\n    length: number;\n    focus: () => void;\n  };\n  (\n    document: Document,\n  ): {\n    ready: (fn: () => void) => void;\n  };\n};\ndeclare let Mousetrap: {\n  bind: (key: string, callback: () => void) => void;\n};\n\n// Main initialization\n$(document).ready(() => {\n  // Initialize main functionality\n  const tocExpand = true;\n\n  // Call the global initialization function from main.ts\n  defer(load_globals);\n\n  // Setup event handlers\n  const setupKeyboardShortcuts = () => {\n    if (typeof Mousetrap !== \"undefined\") {\n      Mousetrap.bind(\"s\", () => focusSearch());\n      // Add other keyboard shortcuts as needed\n    }\n  };\n\n  const focusSearch = () => {\n    const searchInput = $(\"#search-box\");\n    if (searchInput.length > 0) {\n      searchInput.focus();\n    }\n  };\n\n  // Initialize components\n  setupKeyboardShortcuts();\n  initializeTOC();\n  initializeSearch();\n\n  // Example usage of shared utilities\n  const items = [\"item1\", \"item2\", \"item3\"];\n  console.log(\"Random item:\", random_from_list(items));\n  console.log(\"Shuffled items:\", shuffle([...items]));\n\n  // Initialize link loading\n  get_link_info().then((links) => {\n    console.log(\"Links loaded, count:\", Object.keys(links).length);\n  });\n\n  // Log successful initialization\n  console.log(\"Blog JavaScript initialized\");\n});\n\n// Initialize TOC\nfunction initializeTOC() {\n  const tocElement = $(\"#toc-content\");\n  if (tocElement.length > 0) {\n    // TOC initialization code\n    console.log(\"TOC initialized\");\n  }\n}\n\n// Initialize search\nfunction initializeSearch() {\n  const searchElement = $(\"#search-box\");\n  if (searchElement.length > 0) {\n    // Search initialization code\n    console.log(\"Search initialized\");\n  }\n}\n\n// Export shared utilities and main functions for potential direct use\nexport {\n  random_from_list,\n  shuffle,\n  append_randomizer_div,\n  defer,\n  get_link_info,\n  get_random_page_url,\n  // Export the interface types\n  type IURLInfo,\n  type IURLInfoMap,\n  load_globals,\n  MakeBackLinkHTML,\n  CreateAutoComplete,\n  get_random_post,\n  get_recent_posts,\n  get_random_posts_batch,\n  // Recent posts export\n  initRecentAllPosts,\n  // Random prompter exports\n  add_random_prompts,\n  add_sunburst,\n  add_sunburst_from_dom,\n  TreeNode,\n  // Page loader exports\n  load_enjoy2,\n  load_7_habits,\n  load_auto_sunburst,\n  makePostPreviewHTML,\n  make_random_post_html,\n  load_ig66,\n  load_balance,\n  load_random_eulogy,\n};\n"],
  "mappings": "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",
  "names": ["html", "new_element", "updateRecentPosts", "initialNode", "centerControl", "gotoControl", "collapseControl", "firstParagraph", "titleInput", "commentTextarea", "_parent", "get_recent_posts", "tocExpand"]
}
