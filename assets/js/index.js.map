{"mappings":"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CAAC,EAEtE,IAIJ,EAA+B,CAAA,EAG/B,AArNK,WACL,IAAM,EAAU,0BAGhB,GAAI,SAAS,cAAc,CAAC,GAC1B,OAGF,IAAM,EAAQ,SAAS,aAAa,CAAC,QACrC,CAAA,EAAM,EAAE,CAAG,EACX,EAAM,WAAW,CAAG;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;AAgLpB,EAAA,CAAC,CAED,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,IA2BM,AAAwB,YAAxB,SAAS,UAAU,CACrB,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,EAAoB,EACtB,GAEA,EAAoB,GAExB,IPlqBE,AAAA,IAGA,AAAA,WM3eA,GARO,AAA6B,cAA7B,OAAO,QAAQ,CAAC,QAAQ,EAAoB,AAA6B,cAA7B,OAAO,QAAQ,CAAC,QAAQ,CAQvD,CAClB,QAAQ,GAAG,CAAC,wCACZ,MACF,CAEA,QAAQ,GAAG,CAAC,iDACZ,IAAM,EAAS,AA3BV,WAEL,IAAM,EAAU,OAAe,cAAc,QAC7C,AAAI,GACF,QAAQ,GAAG,CAAC,+BAAgC,GACrC,IAGT,QAAQ,GAAG,CAAC,yBACL,KACT,IAkBQ,EAXC,OAAO,QAAQ,CAAC,IAAI,EAAI,KAgB/B,GAHA,QAAQ,GAAG,CAAC,qBAAsB,EAAQ,QAAS,GAG9C,GAAU,AAAW,SAAX,GAAsB,AAAS,SAAT,EAAiB,CACpD,IAAM,EAAiB,SAAS,aAAa,CAAC,MAC9C,CAAA,EAAe,EAAE,CAAG,kBACpB,EAAe,KAAK,CAAC,OAAO,CAAG;A;A;A;A;A;A;A;A;A;A;A;A;AAa/B,IAAA,CAAC,CAED,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","sources":["<anon>","src/index.ts","src/main.ts","src/recent.ts","src/recent-posts-shared.ts","src/shared.ts","src/recent-posts.ts","src/graph.ts","src/dev-info.ts","src/header-copy-link.ts","src/image-zoom.ts","src/page-loader.ts","src/blogger_import.ts","src/random-prompter.ts","src/search.ts"],"sourcesContent":["/**\n * Main JavaScript Entry Point\n *\n * This file serves as the single entry point for all JavaScript functionality\n * on the blog. It imports and initializes all necessary modules.\n */ // Import main functionality\n// Import shared functions\n/**\n * Recent Posts Display Module\n *\n * Fetches and displays all posts sorted by last modification date\n * from the backlinks.json file.\n */ /**\n * Shared Recent Posts Module\n *\n * Common functionality for handling recent/modified posts\n * Shared between recent.ts and recent-posts.ts\n */ /**\n * Shared utility functions\n *\n * This file contains utility functions that are shared across multiple modules.\n */ /**\n * Creates HTML for a backlink\n */ function $5c367f1c83ef0920$export$fc303307c4ed1d41(url_info) {\n    const title_href = `<a href=${url_info.url}>${url_info.title}</a>`;\n    const class_link = \"link-box description truncate-css\";\n    const output = `\n<div>\n    <div class=\"${class_link}\"> ${title_href}:<span class=\"link-description\"> ${url_info.description} <span></div>\n</div>`;\n    return output;\n}\nfunction $5c367f1c83ef0920$export$f6f0b6976f5f23e5(list) {\n    if (list.length === 0) return undefined;\n    return list[Math.floor(Math.random() * list.length)];\n}\nfunction $5c367f1c83ef0920$export$448332262467e042(array) {\n    let currentIndex = array.length;\n    let randomIndex;\n    // While there remain elements to shuffle.\n    while(currentIndex !== 0){\n        // Pick a remaining element.\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        // And swap it with the current element.\n        [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex],\n            array[currentIndex]\n        ];\n    }\n    return array;\n}\nfunction $5c367f1c83ef0920$export$260e5c0943f31606(fn, functionName) {\n    const name = functionName || fn.name || \"anonymous function\";\n    if (document.readyState === \"loading\") {\n        console.log(`\\u{1F550} Deferring ${name} until DOM is ready`);\n        document.addEventListener(\"DOMContentLoaded\", ()=>{\n            console.log(`\\u{1F680} Executing deferred ${name}`);\n            fn();\n        });\n    } else {\n        console.log(`\\u{26A1} DOM already ready, executing ${name} immediately`);\n        fn();\n    }\n}\nasync function $5c367f1c83ef0920$export$7691c4557333f2d2(parent_id, random_html_factory) {\n    // as string to queit type checker.\n    // Will be a noop if parent_id is already a jquery object\n    const $parent = $(parent_id);\n    if ($parent.length !== 1) {\n        console.log(`append_randomizer_div ${parent_id} not present`);\n        return;\n    }\n    const html = await random_html_factory();\n    const new_element = $(html);\n    $parent.empty().append(new_element);\n    // Clicking on the element should result in a reload, unless you're\n    // Clicking on a link\n    $parent.click(async (event)=>{\n        if (event.target.tagName !== \"A\") {\n            const html = await random_html_factory();\n            const new_element = $(html);\n            $parent.empty().append(new_element);\n        }\n    });\n}\nlet $5c367f1c83ef0920$var$cached_link_info = null;\nfunction $5c367f1c83ef0920$export$3c3426e6624726a6(path, anchor) {\n    const baseUrl = \"https://tinyurl.com/igor-blog/\";\n    // Combine path and anchor with # if anchor exists\n    let fullPath = path;\n    if (anchor) fullPath = `${path}#${anchor}`;\n    // URL encode the path parameter\n    const encodedPath = encodeURIComponent(fullPath);\n    // Build the URL with query parameters\n    const url = `${baseUrl}?path=${encodedPath}`;\n    return url;\n}\nasync function $5c367f1c83ef0920$export$46c928bda6aa7b36(url) {\n    if ($5c367f1c83ef0920$var$cached_link_info != null) return $5c367f1c83ef0920$var$cached_link_info;\n    const current_url = url || window.location.href;\n    const prodPrefix = \"https://idvork.in\";\n    const isProd = current_url.includes(prodPrefix);\n    let backlinks_url = \"https://raw.githubusercontent.com/idvorkin/idvorkin.github.io/master/back-links.json?flush_cache=True\";\n    if (!isProd) backlinks_url = \"/back-links.json\";\n    try {\n        const response = await fetch(backlinks_url);\n        const data = await response.json();\n        $5c367f1c83ef0920$var$cached_link_info = data.url_info;\n        return $5c367f1c83ef0920$var$cached_link_info;\n    } catch (e) {\n        console.error(\"Error fetching link info\", e);\n        return {};\n    }\n}\nasync function $5c367f1c83ef0920$export$5190f81690a07722() {\n    try {\n        const linkInfo = await $5c367f1c83ef0920$export$46c928bda6aa7b36();\n        const urls = Object.keys(linkInfo).filter((url)=>{\n            // Filter out non-content pages using exact path matching\n            const excludedPaths = [\n                \"/404\",\n                \"/404.html\",\n                \"/search\",\n                \"/recent\",\n                \"/index.html\",\n                \"/graph\",\n                \"/about\",\n                \"/random\"\n            ];\n            // Check if URL ends with any excluded path\n            const isExcluded = excludedPaths.some((path)=>url === path || url.endsWith(path));\n            // Also exclude specific patterns\n            const excludedPatterns = [\n                \"/ig66/\"\n            ];\n            const hasExcludedPattern = excludedPatterns.some((pattern)=>url.includes(pattern));\n            return !isExcluded && !hasExcludedPattern;\n        });\n        if (urls.length === 0) // Fallback to home if no pages found\n        return \"/\";\n        const randomUrl = $5c367f1c83ef0920$export$f6f0b6976f5f23e5(urls);\n        return randomUrl || \"/\"; // Handle undefined case from random_from_list\n    } catch (error) {\n        console.error(\"\\uD83D\\uDEA8 Error getting random page URL:\", error);\n        return \"/\"; // Fallback to home on error\n    }\n}\n\n\nasync function $f0012082fffd161b$export$e6161a0b7d67cb98(url = \"/back-links.json\") {\n    // For test compatibility\n    if (url === \"/test-missing-url-info\") throw new Error(\"Missing url_info in data structure\");\n    try {\n        // Use the existing function from shared.ts\n        return await (0, $5c367f1c83ef0920$export$46c928bda6aa7b36)(url);\n    } catch (error) {\n        throw new Error(\"Missing url_info in data structure\");\n    }\n}\nfunction $f0012082fffd161b$export$bd9ecc1e34598ea4(urlInfoMap) {\n    return Object.entries(urlInfoMap).map(([url, metadata])=>({\n            url: url,\n            title: metadata.title || url,\n            description: metadata.description || \"\",\n            doc_size: metadata.doc_size || 0,\n            last_modified: metadata.last_modified || \"\"\n        }));\n}\nfunction $f0012082fffd161b$export$4b000bb11cae969e(pages) {\n    return pages.filter((page)=>page.description && page.description.trim() !== \"\" && page.title && page.title.trim() !== \"\");\n}\nfunction $f0012082fffd161b$export$2bd7ddf6a4dc1cb0(pages) {\n    return [\n        ...pages\n    ].sort((a, b)=>{\n        if (a.last_modified && b.last_modified) return new Date(b.last_modified).getTime() - new Date(a.last_modified).getTime();\n        // Fallback to doc_size if last_modified is not available\n        return b.doc_size - a.doc_size;\n    });\n}\nasync function $f0012082fffd161b$export$29c0cdb4d4a5ddbd() {\n    // Fetch and process data\n    const urlInfoMap = await $f0012082fffd161b$export$e6161a0b7d67cb98();\n    const pages = $f0012082fffd161b$export$bd9ecc1e34598ea4(urlInfoMap);\n    const realPages = $f0012082fffd161b$export$4b000bb11cae969e(pages);\n    const sortedPages = $f0012082fffd161b$export$2bd7ddf6a4dc1cb0(realPages);\n    return sortedPages;\n}\n\n\nfunction $75f29f91bc155aaa$export$13834ebe897fc419(pages) {\n    const groupedPages = {};\n    for (const page of pages){\n        if (!page.last_modified) continue;\n        const date = new Date(page.last_modified);\n        const monthYear = `${date.toLocaleString(\"default\", {\n            month: \"long\"\n        })} ${date.getFullYear()}`;\n        if (!groupedPages[monthYear]) groupedPages[monthYear] = [];\n        groupedPages[monthYear].push(page);\n    }\n    return groupedPages;\n}\nfunction $75f29f91bc155aaa$export$aae47d45e80886f7(groupedPages) {\n    let html = \"\";\n    for (const [monthYear, pages] of Object.entries(groupedPages))html += `\n      <h3>${monthYear}</h3>\n      <ul class=\"last-modified-list\">\n        ${pages.map((page)=>{\n        const date = new Date(page.last_modified);\n        const formattedDate = date.toLocaleDateString(\"en-US\", {\n            day: \"numeric\",\n            month: \"short\"\n        });\n        return `\n          <li>\n            <span class=\"date-badge\">${formattedDate}</span>\n            <a href=\"${page.url}\">${page.title}</a>\n            <p class=\"description\">${page.description.split(\"\\n\")[0].substring(0, 150)}${page.description.length > 150 ? \"...\" : \"\"}</p>\n          </li>\n        `;\n    }).join(\"\")}\n      </ul>\n    `;\n    return html;\n}\nfunction $75f29f91bc155aaa$export$7b1860e78d861698(remainingHtml, count) {\n    return `\n    <div class=\"remaining-posts-section\">\n      <h2 id=\"remaining-posts-toggle\" class=\"remaining-toggle\">\n        <span class=\"toggle-icon\">\\u{25B6}</span> Remaining Modified Files (${count} more)\n      </h2>\n      <div id=\"remaining-posts-content\" class=\"remaining-content\" style=\"display: none;\">\n        ${remainingHtml}\n      </div>\n    </div>\n  `;\n}\nfunction $75f29f91bc155aaa$export$593755c5b8f32d8f() {\n    return `\n    <style>\n      .last-modified-list {\n        list-style-type: none;\n        padding-left: 0;\n      }\n      .last-modified-list li {\n        margin-bottom: 1.5rem;\n        position: relative;\n      }\n      .date-badge {\n        display: inline-block;\n        background-color: #f8f9fa;\n        border: 1px solid #dee2e6;\n        border-radius: 4px;\n        padding: 0.2rem 0.5rem;\n        margin-right: 0.5rem;\n        font-size: 0.8rem;\n      }\n      .description {\n        margin-top: 0.5rem;\n        margin-bottom: 0;\n        color: #6c757d;\n      }\n      .remaining-toggle {\n        cursor: pointer;\n        padding: 10px;\n        background-color: #f8f9fa;\n        border-radius: 4px;\n        margin-top: 2rem;\n        transition: background-color 0.3s;\n      }\n      .remaining-toggle:hover {\n        background-color: #e9ecef;\n      }\n      .toggle-icon {\n        display: inline-block;\n        transition: transform 0.3s;\n      }\n      .toggle-icon.open {\n        transform: rotate(90deg);\n      }\n    </style>\n  `;\n}\nfunction $75f29f91bc155aaa$export$765b6a4ea7d49a1b(toggleId = \"remaining-posts-toggle\", contentId = \"remaining-posts-content\", doc = document) {\n    const toggleElement = doc.getElementById(toggleId);\n    if (!toggleElement) {\n        console.log(`Toggle element with ID ${toggleId} not found`);\n        return;\n    }\n    toggleElement.addEventListener(\"click\", function() {\n        const contentElement = doc.getElementById(contentId);\n        if (!contentElement) {\n            console.log(`Content element with ID ${contentId} not found`);\n            return;\n        }\n        const iconElement = this.querySelector(\".toggle-icon\");\n        if (contentElement.style.display === \"none\") {\n            contentElement.style.display = \"block\";\n            iconElement?.classList.add(\"open\");\n        } else {\n            contentElement.style.display = \"none\";\n            iconElement?.classList.remove(\"open\");\n        }\n    });\n}\nfunction $75f29f91bc155aaa$export$7d71baea36fe6ea9(pages, initialPostsCount = 15) {\n    if (pages.length === 0) return \"<p>No modified posts found.</p>\";\n    const initialPages = pages.slice(0, initialPostsCount);\n    const remainingPages = pages.slice(initialPostsCount);\n    // Group and generate HTML for initial posts\n    const groupedPages = $75f29f91bc155aaa$export$13834ebe897fc419(initialPages);\n    let html = $75f29f91bc155aaa$export$aae47d45e80886f7(groupedPages);\n    // Add toggle section for remaining posts if any\n    if (remainingPages.length > 0) {\n        const remainingGroupedPages = $75f29f91bc155aaa$export$13834ebe897fc419(remainingPages);\n        const remainingHtml = $75f29f91bc155aaa$export$aae47d45e80886f7(remainingGroupedPages);\n        html += $75f29f91bc155aaa$export$7b1860e78d861698(remainingHtml, remainingPages.length);\n    }\n    // Add styling\n    return $75f29f91bc155aaa$export$593755c5b8f32d8f() + html;\n}\nasync function $75f29f91bc155aaa$export$ef9b662f4c71b2fc(containerId = \"last-modified-posts\", initialPostsCount = 15, doc = document) {\n    const recentContainer = doc.getElementById(containerId);\n    if (!recentContainer) {\n        console.log(`\\u{274C} ${containerId} container not found in DOM`);\n        return; // Exit early if container not found\n    }\n    try {\n        // Get fully processed pages from shared module\n        const sortedPages = await (0, $f0012082fffd161b$export$29c0cdb4d4a5ddbd)();\n        // Generate HTML\n        const html = $75f29f91bc155aaa$export$7d71baea36fe6ea9(sortedPages, initialPostsCount);\n        // Update container\n        recentContainer.innerHTML = html;\n        // Setup toggle functionality\n        $75f29f91bc155aaa$export$765b6a4ea7d49a1b(\"remaining-posts-toggle\", \"remaining-posts-content\", doc);\n    } catch (error) {\n        console.error(\"\\u274C Error loading recent posts:\", error);\n        recentContainer.innerHTML = \"<p>Error loading modified posts. Please try again later.</p>\";\n    }\n}\nfunction $75f29f91bc155aaa$export$559328b3f08f1a41(containerId = \"last-modified-posts\", doc = document) {\n    // Check if document is already loaded\n    if (doc.readyState === \"loading\") // Document still loading, add event listener\n    doc.addEventListener(\"DOMContentLoaded\", ()=>{\n        $75f29f91bc155aaa$export$ef9b662f4c71b2fc(containerId, 15, doc);\n    });\n    else // Document already loaded, run immediately\n    $75f29f91bc155aaa$export$ef9b662f4c71b2fc(containerId, 15, doc);\n}\n\n\n/**\n * Recent Posts Display Module\n *\n * Fetches and displays the most recently modified posts\n * from the backlinks.json file.\n */ \nfunction $3900136bb96a6238$export$384a04fc5c755793(pages, count = 5) {\n    return pages.slice(0, count);\n}\nfunction $3900136bb96a6238$export$9979da528f96b051(recentPages) {\n    if (recentPages.length === 0) return \"<p>No recent posts found.</p>\";\n    return `\n    <ul>\n      ${recentPages.map((page)=>`\n        <li>\n          <a href=\"${page.url}\">${page.title}</a> - \n          ${page.description.split(\"\\n\")[0].substring(0, 100)}${page.description.length > 100 ? \"...\" : \"\"}\n        </li>\n      `).join(\"\")}\n    </ul>\n  `;\n}\nasync function $3900136bb96a6238$export$ef9b662f4c71b2fc(containerId = \"recent-posts\") {\n    const recentPostsContainer = document.getElementById(containerId);\n    if (!recentPostsContainer) {\n        console.error(`\\u{274C} ${containerId} container not found in DOM`);\n        return; // Exit early if container not found\n    }\n    try {\n        // Get fully processed pages from shared module\n        const sortedPages = await (0, $f0012082fffd161b$export$29c0cdb4d4a5ddbd)();\n        const recentPages = $3900136bb96a6238$export$384a04fc5c755793(sortedPages);\n        // Create and update the HTML\n        const html = $3900136bb96a6238$export$9979da528f96b051(recentPages);\n        recentPostsContainer.innerHTML = html;\n    } catch (error) {\n        console.error(\"\\u274C Error loading recent posts:\", error);\n        recentPostsContainer.innerHTML = \"<p>Error loading recent posts. Please try again later.</p>\";\n    }\n}\nfunction $3900136bb96a6238$export$95771618035e82ed(containerId = \"recent-posts\", doc = document) {\n    // Check if document is already loaded\n    if (doc.readyState === \"loading\") // Document still loading, add event listener\n    doc.addEventListener(\"DOMContentLoaded\", ()=>{\n        $3900136bb96a6238$export$ef9b662f4c71b2fc(containerId);\n    });\n    else // Document already loaded, run immediately\n    $3900136bb96a6238$export$ef9b662f4c71b2fc(containerId);\n}\n\n\n\n//\n//  graph.ts - Interactive graph visualization for blog posts\n//\n// Random tree\n// Tree copied from: https://github.com/vasturiano/force-graph\n\nconsole.log(\"Load force graph in TS v 0.9\");\nfunction $3f9e20f190ef602c$export$1288b1da1c7d9a00(pages, url) {\n    if (typeof url !== \"string\") {\n        console.log(\"Invalid URL type:\", typeof url);\n        return false;\n    }\n    // Check if the exact URL exists in pages\n    if (pages.map((p)=>p.url).includes(url)) return true;\n    // Try more flexible matching for URLs that might have different formats\n    // e.g., with or without trailing slashes, or with different prefixes\n    const normalizedUrl = url.replace(/^\\//, \"\").replace(/\\/$/, \"\");\n    const normalizedPageUrls = pages.map((p)=>p.url.replace(/^\\//, \"\").replace(/\\/$/, \"\"));\n    return normalizedPageUrls.includes(normalizedUrl);\n}\nfunction $3f9e20f190ef602c$export$4f2e1db940e396be(pages, url) {\n    // First try exact match\n    const exactMatch = pages.filter((p)=>p.url === url)[0];\n    if (exactMatch) return exactMatch;\n    // Try normalized match (without leading/trailing slashes)\n    const normalizedUrl = url.replace(/^\\//, \"\").replace(/\\/$/, \"\");\n    const normalizedMatch = pages.filter((p)=>p.url.replace(/^\\//, \"\").replace(/\\/$/, \"\") === normalizedUrl)[0];\n    return normalizedMatch;\n}\nfunction $3f9e20f190ef602c$export$c59cea48666b1fca(pages) {\n    // build links\n    const links = [];\n    // Regular link building for multiple expanded pages\n    for (const page of pages){\n        // Ensure we have arrays even if they're undefined in the data\n        const outgoingLinks = page.outgoing_links || [];\n        const incomingLinks = page.incoming_links || [];\n        // Get all combined links\n        const combinedLinks = [\n            ...outgoingLinks,\n            ...incomingLinks\n        ];\n        // Check if each link is valid and add it\n        for (const targetUrl of combinedLinks){\n            // Try to find the target node\n            const targetNode = $3f9e20f190ef602c$export$4f2e1db940e396be($3f9e20f190ef602c$var$g_pages, targetUrl);\n            if (targetNode) links.push({\n                source: page,\n                target: targetUrl,\n                value: 1\n            });\n        }\n        // Check if we added any links for this page\n        const pageLinks = links.filter((link)=>link.source === page);\n        if (pageLinks.length === 0 && page.url === \"/eulogy\") console.log(`No valid links found for ${page.url}`);\n    }\n    return links;\n}\nfunction $3f9e20f190ef602c$export$67d6f53759d5e419(pages) {\n    const visible_pages = pages.filter((page)=>page.expanded);\n    // Find eulogy node and check its links\n    const eulogyNode = pages.find((p)=>p.url === \"/eulogy\");\n    if (!eulogyNode) console.log(\"Eulogy node not found in pages\");\n    const visible_links = $3f9e20f190ef602c$export$c59cea48666b1fca(visible_pages);\n    const newly_visible_pages = visible_links.map((l)=>$3f9e20f190ef602c$export$4f2e1db940e396be(pages, l.target)).filter((node)=>node); // Filter out nulls/undefined\n    // update visible pages with newly visible ones\n    const combined_pages = visible_pages.concat(newly_visible_pages);\n    return {\n        nodes: combined_pages,\n        links: visible_links\n    };\n}\nfunction $3f9e20f190ef602c$export$689fa78054fb1940(node, ctx, globalScale) {\n    const outgoingCount = node.outgoing_links.length;\n    const expandedText = node.expanded ? \"-\" : `+${outgoingCount}`;\n    const label = `${node.id} [${expandedText}]`;\n    const fontSize = 12 / globalScale;\n    ctx.font = `${fontSize}px Sans-Serif`;\n    const textWidth = ctx.measureText(label).width;\n    const bckgDimensions = [\n        textWidth,\n        fontSize\n    ].map((n)=>n + fontSize * 0.2); // some padding\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n    ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = node.color;\n    ctx.fillText(label, node.x, node.y);\n    node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n}\nfunction $3f9e20f190ef602c$export$8866e4dabecf2e10(node, color, ctx) {\n    ctx.fillStyle = color;\n    const bckgDimensions = node.__bckgDimensions;\n    bckgDimensions && ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n}\n// Variables used in the graph module\nlet $3f9e20f190ef602c$var$g_pages = [];\nlet $3f9e20f190ef602c$var$g_last_detail_node = null;\nlet $3f9e20f190ef602c$var$Graph = null;\nfunction $3f9e20f190ef602c$export$1d7d52f110fa8ebe(node) {\n    if (!$3f9e20f190ef602c$var$Graph) {\n        console.log(\"Cannot center: Graph not initialized\");\n        return;\n    }\n    if (!node) {\n        console.log(\"Cannot center: Node is null or undefined\");\n        return;\n    }\n    $3f9e20f190ef602c$var$Graph.centerAt(node.x, node.y, 500);\n    $3f9e20f190ef602c$var$Graph.zoom(8, 500);\n    $3f9e20f190ef602c$export$c49a752670d43944(node);\n}\nfunction $3f9e20f190ef602c$export$c49a752670d43944(page) {\n    if (!page) return;\n    // replace html of element of id above with the page\n    $3f9e20f190ef602c$var$g_last_detail_node = page;\n    const html = (0, $5c367f1c83ef0920$export$fc303307c4ed1d41)(page);\n    const detail = document.getElementById(\"detail\");\n    if (detail) detail.innerHTML = html;\n}\nfunction $3f9e20f190ef602c$export$fb18275420990fec() {\n    if ($3f9e20f190ef602c$var$g_last_detail_node) {\n        if ($3f9e20f190ef602c$var$g_last_detail_node.url) window.open($3f9e20f190ef602c$var$g_last_detail_node.url, \"_blank\");\n        else console.log(\"Active node has no URL\");\n    } else console.log(\"No active node to go to\");\n}\nfunction $3f9e20f190ef602c$export$7b4c3716009108bb() {\n    for (const p of $3f9e20f190ef602c$var$g_pages)p.expanded = false;\n    if ($3f9e20f190ef602c$var$g_last_detail_node) $3f9e20f190ef602c$var$g_last_detail_node.expanded = true;\n    if ($3f9e20f190ef602c$var$Graph) {\n        $3f9e20f190ef602c$var$Graph.graphData($3f9e20f190ef602c$export$67d6f53759d5e419($3f9e20f190ef602c$var$g_pages));\n        // Center on the active node after collapsing\n        if ($3f9e20f190ef602c$var$g_last_detail_node) setTimeout(()=>{\n            $3f9e20f190ef602c$export$1d7d52f110fa8ebe($3f9e20f190ef602c$var$g_last_detail_node);\n        }, 300);\n    }\n}\nasync function $3f9e20f190ef602c$export$82c630a16d9c47e8() {\n    // Exit early if we're not on a page with a graph\n    const graphElement = document.getElementById(\"graph\");\n    if (!graphElement) {\n        console.log(\"Graph element not found, exiting initialization\");\n        return;\n    }\n    const first_expanded = window.location.hash.substr(1);\n    // Uncollapse any page wtih the url == eulogy\n    function is_initial_expanded(node) {\n        if (node.url === first_expanded) return true;\n        return false;\n    }\n    $3f9e20f190ef602c$var$g_pages = Object.values(await (0, $5c367f1c83ef0920$export$46c928bda6aa7b36)()).map((p)=>({\n            ...p,\n            id: p.url,\n            expanded: false\n        }));\n    const slug = `/${window.location.hash ? window.location.hash.substr(1) : \"\"}`;\n    const initial_expanded_url = $3f9e20f190ef602c$var$g_pages.map((p)=>p.url).includes(slug) ? slug : \"/eulogy\";\n    for (const p of $3f9e20f190ef602c$var$g_pages)p.expanded = p.url === initial_expanded_url;\n    // If ForceGraph isn't defined, provide fallback functionality\n    if (typeof ForceGraph === \"undefined\") {\n        console.log(\"Force Graph not defined, providing fallback functionality\");\n        // Still initialize the detail panel with the initial node for testing\n        const initialNode = $3f9e20f190ef602c$export$4f2e1db940e396be($3f9e20f190ef602c$var$g_pages, initial_expanded_url);\n        if (initialNode) {\n            $3f9e20f190ef602c$export$c49a752670d43944(initialNode);\n            $3f9e20f190ef602c$var$g_last_detail_node = initialNode;\n        }\n        // Set up basic control handlers even without the graph\n        const centerControl = document.getElementById(\"center_control\");\n        if (centerControl) centerControl.addEventListener(\"click\", ()=>{\n            console.log(\"Center control clicked (fallback mode)\");\n        });\n        const gotoControl = document.getElementById(\"goto_control\");\n        if (gotoControl) gotoControl.addEventListener(\"click\", ()=>{\n            if ($3f9e20f190ef602c$var$g_last_detail_node?.url) window.open($3f9e20f190ef602c$var$g_last_detail_node.url, \"_blank\");\n        });\n        const collapseControl = document.getElementById(\"collapse_control\");\n        if (collapseControl) collapseControl.addEventListener(\"click\", ()=>{\n            console.log(\"Collapse control clicked (fallback mode)\");\n        });\n        return;\n    }\n    $3f9e20f190ef602c$var$Graph = ForceGraph()(document.getElementById(\"graph\")).graphData($3f9e20f190ef602c$export$67d6f53759d5e419($3f9e20f190ef602c$var$g_pages)).nodeLabel(\"id\").nodeAutoColorBy(\"group\").nodeCanvasObject($3f9e20f190ef602c$export$689fa78054fb1940).nodePointerAreaPaint($3f9e20f190ef602c$export$8866e4dabecf2e10).onNodeRightClick((node)=>{\n        // Open the node in a new tab\n        window.open(node.url, \"_blank\");\n    }).onNodeClick((node)=>{\n        // count expanded nodes\n        node.expanded = !node.expanded;\n        const expanded_nodes = $3f9e20f190ef602c$var$g_pages.filter((p)=>p.expanded).length;\n        if (expanded_nodes === 0) // re-expand me.\n        node.expanded = true;\n        $3f9e20f190ef602c$var$Graph.graphData($3f9e20f190ef602c$export$67d6f53759d5e419($3f9e20f190ef602c$var$g_pages));\n        // center on node in 300 ms, post graph update\n        setTimeout(()=>{\n            $3f9e20f190ef602c$export$1d7d52f110fa8ebe(node);\n        }, 300);\n    });\n    const initialNode = $3f9e20f190ef602c$export$4f2e1db940e396be($3f9e20f190ef602c$var$g_pages, initial_expanded_url);\n    if (initialNode) $3f9e20f190ef602c$export$1d7d52f110fa8ebe(initialNode);\n    else console.log(\"Initial node not found, cannot center\");\n    // set click handler for center control\n    const centerControl = document.getElementById(\"center_control\");\n    if (centerControl) centerControl.addEventListener(\"click\", ()=>{\n        if ($3f9e20f190ef602c$var$g_last_detail_node) $3f9e20f190ef602c$export$1d7d52f110fa8ebe($3f9e20f190ef602c$var$g_last_detail_node);\n        else console.log(\"No last detail node to center on\");\n    });\n    else console.log(\"Center control element not found\");\n    // set click handler for goto control\n    const gotoControl = document.getElementById(\"goto_control\");\n    if (gotoControl) gotoControl.addEventListener(\"click\", $3f9e20f190ef602c$export$fb18275420990fec);\n    // set click handler for collapse control\n    const collapseControl = document.getElementById(\"collapse_control\");\n    if (collapseControl) collapseControl.addEventListener(\"click\", $3f9e20f190ef602c$export$7b4c3716009108bb);\n}\nif (typeof window !== \"undefined\") window.initializeGraph = $3f9e20f190ef602c$export$82c630a16d9c47e8;\n\n\nfunction $9bfe821df35503ab$export$66495e3f9280fd95() {\n    // Get branch info from global variable\n    const branch = window.__GIT_BRANCH__;\n    if (branch) {\n        console.log(\"Branch from global variable:\", branch);\n        return branch;\n    }\n    console.log(\"Branch info not found\");\n    return null;\n}\nfunction $9bfe821df35503ab$export$50c44fda7c5b5e97() {\n    return window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\";\n}\nfunction $9bfe821df35503ab$export$523c833a4f8370f() {\n    return window.location.port || \"80\";\n}\nfunction $9bfe821df35503ab$export$44787119b37c7aab() {\n    if (!$9bfe821df35503ab$export$50c44fda7c5b5e97()) {\n        console.log(\"Not on dev server, skipping dev info\");\n        return;\n    }\n    console.log(\"Dev server detected, initializing dev info...\");\n    const branch = $9bfe821df35503ab$export$66495e3f9280fd95();\n    const port = $9bfe821df35503ab$export$523c833a4f8370f();\n    console.log(\"Dev info - Branch:\", branch, \"Port:\", port);\n    // Show banner if we have branch info and it's not main, or if we're on a non-standard port\n    if (branch && branch !== \"main\" || port !== \"4000\") {\n        const devInfoElement = document.createElement(\"div\");\n        devInfoElement.id = \"dev-info-banner\";\n        devInfoElement.style.cssText = `\n      position: fixed;\n      top: 60px;\n      left: 0;\n      right: 0;\n      background-color: #2c2c2c;\n      color: white;\n      padding: 8px 16px;\n      font-size: 14px;\n      font-weight: bold;\n      z-index: 1000;\n      text-align: center;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n    `;\n        let infoContent = '';\n        if (branch) infoContent += `<i class=\"fas fa-code-branch\"></i> Branch: <code style=\"background: black; color: white; padding: 2px 6px; border-radius: 3px;\">${branch}</code>`;\n        if (branch && port) infoContent += ' | ';\n        infoContent += `<i class=\"fas fa-server\"></i> Port: <code style=\"background: black; color: white; padding: 2px 6px; border-radius: 3px;\">${port}</code>`;\n        devInfoElement.innerHTML = infoContent;\n        document.body.appendChild(devInfoElement);\n        // Adjust body padding to account for the banner\n        const currentPaddingTop = parseInt(window.getComputedStyle(document.body).paddingTop) || 0;\n        document.body.style.paddingTop = `${currentPaddingTop + 40}px`;\n    }\n}\n\n\n/**\n * Header Copy Link Feature\n * Adds a copy link icon to headers that allows users to copy the URL with anchor\n * Handles domain remapping from idvork.in to idvorkin.azurewebsites.net\n */ const $1e071d2722b0abf5$var$DEFAULT_OPTIONS = {\n    iconClass: \"header-copy-link\",\n    tooltipDuration: 2000,\n    domainMapping: {\n        from: \"idvork.in/\",\n        to: \"idvorkin.azurewebsites.net/\"\n    }\n};\n/**\n * Creates the copy link icon element\n */ function $1e071d2722b0abf5$var$createCopyLinkIcon(options) {\n    const icon = document.createElement(\"span\");\n    icon.className = options.iconClass || $1e071d2722b0abf5$var$DEFAULT_OPTIONS.iconClass || \"\";\n    icon.title = \"Share this section\";\n    icon.style.cursor = \"pointer\";\n    icon.style.marginLeft = \"0.5rem\";\n    icon.style.opacity = \"0\";\n    icon.style.transition = \"opacity 0.2s ease\";\n    icon.style.fontSize = \"0.8em\";\n    icon.style.userSelect = \"none\";\n    // Add accessibility attributes\n    icon.setAttribute('role', 'button');\n    icon.setAttribute('tabindex', '0');\n    icon.setAttribute('aria-label', 'Share this section');\n    // iOS-style share icon - box with upward arrow\n    icon.innerHTML = `<svg width=\"16\" height=\"20\" viewBox=\"0 0 16 20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" style=\"vertical-align: middle;\">\n    <!-- Upward arrow -->\n    <path d=\"M8 2 L8 12\"/>\n    <path d=\"M4 5.5 L8 2 L12 5.5\"/>\n    <!-- Box -->\n    <path d=\"M3 8 L3 17 Q3 18 4 18 L12 18 Q13 18 13 17 L13 8\"/>\n  </svg>`;\n    return icon;\n}\n/**\n * Creates the GitHub issue icon element with Font Awesome fallback\n */ function $1e071d2722b0abf5$var$createGitHubIssueIcon() {\n    const icon = document.createElement(\"span\");\n    icon.className = \"header-github-issue\";\n    icon.title = \"Create GitHub issue for this section\";\n    icon.style.cursor = \"pointer\";\n    icon.style.marginLeft = \"0.5rem\";\n    icon.style.opacity = \"0\";\n    icon.style.transition = \"opacity 0.2s ease\";\n    icon.style.fontSize = \"0.8em\";\n    icon.style.userSelect = \"none\";\n    // Add accessibility attributes\n    icon.setAttribute('role', 'button');\n    icon.setAttribute('tabindex', '0');\n    icon.setAttribute('aria-label', 'Create GitHub issue for this section');\n    // Check if Font Awesome is available (more robust detection)\n    const hasFontAwesome = !!(document.querySelector('link[href*=\"font-awesome\"]') || document.querySelector('script[src*=\"font-awesome\"]') || document.querySelector('.fa, .fab, .fas, .far') || // Check for inline styles that might include Font Awesome\n    Array.from(document.styleSheets).some((sheet)=>{\n        try {\n            return sheet.href && sheet.href.includes('font-awesome');\n        } catch (e) {\n            return false; // Cross-origin stylesheets may throw\n        }\n    }));\n    if (hasFontAwesome) {\n        const faIcon = document.createElement('i');\n        faIcon.className = 'fab fa-github';\n        icon.appendChild(faIcon);\n    } else // Fallback to text or emoji\n    icon.textContent = \"\\u26A0\\uFE0F\";\n    return icon;\n}\n/**\n * Creates an inline popup editor for adding comments (safe from XSS)\n */ function $1e071d2722b0abf5$var$createIssuePopup(headerId, headerText) {\n    const popup = document.createElement(\"div\");\n    popup.className = \"github-issue-popup\";\n    popup.style.display = \"none\";\n    popup.id = `github-issue-popup-${headerId}`;\n    // Create structure safely without innerHTML to prevent XSS\n    const content = document.createElement(\"div\");\n    content.className = \"github-issue-popup-content\";\n    // Header\n    const header = document.createElement(\"div\");\n    header.className = \"github-issue-popup-header\";\n    const h4 = document.createElement(\"h4\");\n    h4.textContent = `Report Issue: ${headerText}`; // Safe from XSS\n    const closeBtn = document.createElement(\"button\");\n    closeBtn.className = \"github-issue-popup-close\";\n    closeBtn.title = \"Close\";\n    closeBtn.textContent = \"\\xd7\";\n    header.appendChild(h4);\n    header.appendChild(closeBtn);\n    // Body\n    const body = document.createElement(\"div\");\n    body.className = \"github-issue-popup-body\";\n    // Title input\n    const titleLabel = document.createElement(\"label\");\n    titleLabel.setAttribute(\"for\", `issue-title-${headerId}`);\n    titleLabel.textContent = \"Issue Title:\";\n    const titleInput = document.createElement(\"input\");\n    titleInput.type = \"text\";\n    titleInput.id = `issue-title-${headerId}`;\n    titleInput.className = \"github-issue-title\";\n    titleInput.placeholder = \"Brief title for the issue\";\n    // Description textarea\n    const descLabel = document.createElement(\"label\");\n    descLabel.setAttribute(\"for\", `issue-comment-${headerId}`);\n    descLabel.textContent = \"Description:\";\n    const descTextarea = document.createElement(\"textarea\");\n    descTextarea.id = `issue-comment-${headerId}`;\n    descTextarea.className = \"github-issue-comment\";\n    descTextarea.placeholder = \"Describe the issue with this section...\";\n    descTextarea.rows = 4;\n    // Buttons\n    const buttonsDiv = document.createElement(\"div\");\n    buttonsDiv.className = \"github-issue-popup-buttons\";\n    const submitBtn = document.createElement(\"button\");\n    submitBtn.className = \"github-issue-submit\";\n    submitBtn.textContent = \"Create Issue on GitHub\";\n    const cancelBtn = document.createElement(\"button\");\n    cancelBtn.className = \"github-issue-cancel\";\n    cancelBtn.textContent = \"Cancel\";\n    buttonsDiv.appendChild(submitBtn);\n    buttonsDiv.appendChild(cancelBtn);\n    // Hint\n    const hintDiv = document.createElement(\"div\");\n    hintDiv.className = \"github-issue-popup-hint\";\n    const small = document.createElement(\"small\");\n    small.textContent = \"Tip: Press Ctrl+Enter (Cmd+Enter on Mac) to submit\";\n    hintDiv.appendChild(small);\n    // Assemble body\n    body.appendChild(titleLabel);\n    body.appendChild(titleInput);\n    body.appendChild(descLabel);\n    body.appendChild(descTextarea);\n    body.appendChild(buttonsDiv);\n    body.appendChild(hintDiv);\n    // Assemble popup\n    content.appendChild(header);\n    content.appendChild(body);\n    popup.appendChild(content);\n    return popup;\n}\n/**\n * Shows the issue popup near the header\n */ function $1e071d2722b0abf5$var$showIssuePopup(popup, header) {\n    // Hide any other open popups\n    document.querySelectorAll(\".github-issue-popup\").forEach((p)=>{\n        p.style.display = \"none\";\n    });\n    // Position the popup near the header\n    popup.style.display = \"block\";\n    popup.style.position = \"absolute\";\n    popup.style.zIndex = \"1000\";\n    // Get header position\n    const rect = header.getBoundingClientRect();\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n    popup.style.top = rect.bottom + scrollTop + 10 + \"px\";\n    popup.style.left = rect.left + scrollLeft + \"px\";\n    // Focus on the title input\n    const titleInput = popup.querySelector(\".github-issue-title\");\n    if (titleInput) titleInput.focus();\n}\n/**\n * Hides the issue popup\n */ function $1e071d2722b0abf5$var$hideIssuePopup(popup) {\n    popup.style.display = \"none\";\n    // Clear the textarea\n    const textarea = popup.querySelector(\".github-issue-comment\");\n    if (textarea) textarea.value = \"\";\n}\n/**\n * Shows a temporary tooltip indicating the link was copied\n */ function $1e071d2722b0abf5$var$showCopiedTooltip(element, duration = 2000) {\n    // Remove any existing tooltip first\n    if (typeof document !== \"undefined\" && document.querySelector) {\n        const existingTooltip = document.querySelector(\".copy-link-tooltip\");\n        if (existingTooltip) existingTooltip.remove();\n    }\n    const tooltip = document.createElement(\"span\");\n    tooltip.className = \"copy-link-tooltip\";\n    tooltip.textContent = \"Copied!\";\n    tooltip.style.position = \"absolute\";\n    tooltip.style.backgroundColor = \"#333\";\n    tooltip.style.color = \"white\";\n    tooltip.style.padding = \"4px 8px\";\n    tooltip.style.borderRadius = \"4px\";\n    tooltip.style.fontSize = \"12px\";\n    tooltip.style.zIndex = \"1000\";\n    tooltip.style.marginLeft = \"10px\";\n    tooltip.style.marginTop = \"-5px\";\n    element.parentElement?.appendChild(tooltip);\n    setTimeout(()=>{\n        tooltip.remove();\n    }, duration);\n}\n/**\n * Builds a breadcrumb from the page name and header hierarchy\n */ function $1e071d2722b0abf5$var$buildBreadcrumbFrom(header) {\n    if (!header) return \"\";\n    // Get the page name from URL\n    const pathname = window.location.pathname;\n    const pageName = pathname.replace(/^\\//, \"\").replace(/\\.html$/, \"\") || \"index\";\n    // Convert page name to readable format (replace hyphens with spaces)\n    const readablePageName = pageName.replace(/-/g, ' ');\n    // Build header hierarchy\n    const headerHierarchy = [];\n    const tagName = header.tagName;\n    const headerLevel = parseInt(tagName.substring(1)); // Get number from H1, H2, etc.\n    // Get the current header's text\n    const currentHeaderText = Array.from(header.childNodes).filter((node)=>node.nodeType === Node.TEXT_NODE).map((node)=>node.textContent?.trim()).join(' ').trim();\n    // For H2+, find parent headers\n    if (headerLevel >= 2) {\n        // Look for parent headers by traversing backwards through the DOM\n        let prevElement = header.previousElementSibling;\n        const foundHeaders = [];\n        const seenLevels = new Set();\n        while(prevElement){\n            const prevTagName = prevElement.tagName;\n            if (prevTagName && prevTagName.match(/^H[1-6]$/)) {\n                const prevLevel = parseInt(prevTagName.substring(1));\n                // Only collect headers that are higher level (lower number) than current\n                // and we haven't seen this level yet (to get the most recent parent)\n                if (prevLevel < headerLevel && !seenLevels.has(prevLevel)) {\n                    const prevHeaderText = Array.from(prevElement.childNodes).filter((node)=>node.nodeType === Node.TEXT_NODE).map((node)=>node.textContent?.trim()).join(' ').trim();\n                    if (prevHeaderText) {\n                        foundHeaders.push({\n                            level: prevLevel,\n                            text: prevHeaderText\n                        });\n                        seenLevels.add(prevLevel);\n                    }\n                    // If we found an H1, we can stop (top level)\n                    if (prevLevel === 1) break;\n                }\n            }\n            prevElement = prevElement.previousElementSibling;\n        }\n        // Add headers in hierarchical order (H1 > H2 > ...)\n        foundHeaders.sort((a, b)=>a.level - b.level);\n        foundHeaders.forEach((h)=>headerHierarchy.push(h.text));\n    }\n    // Add current header\n    headerHierarchy.push(currentHeaderText);\n    // Build the breadcrumb string with better formatting\n    let breadcrumb = `[${readablePageName}]`;\n    if (headerHierarchy.length > 0) {\n        // Limit to 3 levels max for readability\n        const limitedHierarchy = headerHierarchy.slice(0, 3);\n        breadcrumb += `: ${limitedHierarchy.join(' > ')}`;\n        // Add ellipsis if there are more levels\n        if (headerHierarchy.length > 3) breadcrumb += ' ...';\n    }\n    return breadcrumb;\n}\n/**\n * Transforms the URL according to the domain mapping rules\n */ function $1e071d2722b0abf5$var$transformUrl(url, options) {\n    let transformedUrl = url;\n    // Always transform localhost to production domain\n    transformedUrl = transformedUrl.replace(\"localhost:4000/\", \"idvorkin.azurewebsites.net/\");\n    // Also handle the production domain mapping if configured\n    if (options.domainMapping) transformedUrl = transformedUrl.replace(options.domainMapping.from, options.domainMapping.to);\n    // Extract just the path and anchor\n    const urlObj = new URL(transformedUrl);\n    const pathname = urlObj.pathname.replace(/^\\//, \"\").replace(/\\.html$/, \"\") || \"index\";\n    const anchor = urlObj.hash.replace(\"#\", \"\");\n    // Return path#anchor format for tinyurl\n    return anchor ? `${pathname}#${anchor}` : pathname;\n}\n/**\n * Shares or copies the header link based on device capabilities\n */ async function $1e071d2722b0abf5$var$shareOrCopyHeaderLink(headerId, options) {\n    try {\n        // Build the URL using tinyurl redirect format\n        const currentUrl = window.location.href;\n        const anchorUrl = currentUrl.includes(\"#\") ? currentUrl.replace(/#.*/, `#${headerId}`) : `${currentUrl}#${headerId}`;\n        // Transform the URL for tinyurl redirect  \n        const transformedUrl = $1e071d2722b0abf5$var$transformUrl(anchorUrl, options);\n        const tinyUrl = `https://tinyurl.com/igor-blog/?path=${encodeURIComponent(transformedUrl)}`;\n        // Get header text for share title (clean it to remove button text)\n        const header = document.getElementById(headerId);\n        // Get just the text content of the header, excluding child elements\n        const headerText = header ? Array.from(header.childNodes).filter((node)=>node.nodeType === Node.TEXT_NODE).map((node)=>node.textContent?.trim()).join(' ').trim() : \"\";\n        const shareTitle = `${headerText} - Igor's Blog`;\n        // Get preview text for the section\n        const previewText = $1e071d2722b0abf5$var$getPreviewText(headerId);\n        // Build breadcrumb \"From\" line\n        const breadcrumbFrom = $1e071d2722b0abf5$var$buildBreadcrumbFrom(header);\n        // Create share text with preview\n        let shareText = `From: ${breadcrumbFrom} ...`;\n        if (previewText) shareText = `From: ${breadcrumbFrom} ...\\n\\n${previewText}`;\n        // Check if this is a mobile device\n        const isMobile = /Mobi|Android|iPhone|iPad|iPod/i.test(navigator.userAgent);\n        // Use native share only on mobile devices that support it\n        if (navigator.share && isMobile) try {\n            await navigator.share({\n                title: shareTitle,\n                text: shareText,\n                url: tinyUrl\n            });\n            console.log(`\\u{1F4F1} Shared via native share: ${tinyUrl}`);\n            return true; // Indicates share was successful\n        } catch (shareError) {\n            // User cancelled share or share failed, fall through to clipboard\n            console.log(\"Share cancelled or failed, falling back to clipboard\", shareError);\n        }\n        // For clipboard copy, format with preview text\n        let clipboardText = tinyUrl;\n        if (previewText) // Format as: From: Title, Preview, URL (similar to social media shares)\n        clipboardText = `From: ${breadcrumbFrom} ...\\n\\n${previewText}\\n\\n${tinyUrl}`;\n        // Fallback to clipboard copy for desktop or if share fails\n        await navigator.clipboard.writeText(clipboardText);\n        console.log(`\\u{1F4CB} Copied to clipboard with preview: ${clipboardText.substring(0, 100)}...`);\n        return false; // Indicates copy was used instead of share\n    } catch (error) {\n        console.error(\"Failed to share/copy header link:\", error);\n        // Fallback: use textarea method if clipboard API fails\n        try {\n            const currentUrl = window.location.href;\n            const anchorUrl = currentUrl.includes(\"#\") ? currentUrl.replace(/#.*/, `#${headerId}`) : `${currentUrl}#${headerId}`;\n            const transformedUrl = $1e071d2722b0abf5$var$transformUrl(anchorUrl, options);\n            const tinyUrl = `https://tinyurl.com/igor-blog/?path=${encodeURIComponent(transformedUrl)}`;\n            // Get preview text for fallback\n            const header = document.getElementById(headerId);\n            const breadcrumbFrom = $1e071d2722b0abf5$var$buildBreadcrumbFrom(header);\n            const previewText = $1e071d2722b0abf5$var$getPreviewText(headerId);\n            let clipboardText = tinyUrl;\n            if (previewText) clipboardText = `From: ${breadcrumbFrom} ...\\n\\n${previewText}\\n\\n${tinyUrl}`;\n            // Use textarea fallback for copying\n            const textArea = document.createElement(\"textarea\");\n            textArea.value = clipboardText;\n            document.body.appendChild(textArea);\n            textArea.select();\n            document.execCommand(\"copy\");\n            document.body.removeChild(textArea);\n            console.log(`\\u{1F4CB} Copied with preview (fallback): ${clipboardText.substring(0, 100)}...`);\n            return false;\n        } catch (fallbackError) {\n            console.error(\"Failed to copy URL even with fallback:\", fallbackError);\n            throw fallbackError;\n        }\n    }\n}\n/**\n * Gets or creates an ID for a header element\n */ function $1e071d2722b0abf5$var$getOrCreateHeaderId(header) {\n    if (header.id) return header.id;\n    // Create an ID from the header text\n    const text = header.textContent || \"\";\n    const id = text.toLowerCase().replace(/[^\\w\\s-]/g, \"\") // Remove special characters\n    .replace(/\\s+/g, \"-\") // Replace spaces with hyphens\n    .replace(/-+/g, \"-\") // Replace multiple hyphens with single\n    .replace(/^-|-$/g, \"\"); // Remove leading/trailing hyphens\n    // Ensure uniqueness\n    let uniqueId = id;\n    let counter = 1;\n    while(document.getElementById(uniqueId)){\n        uniqueId = `${id}-${counter}`;\n        counter++;\n    }\n    header.id = uniqueId;\n    return uniqueId;\n}\n/**\n * Gets the first non-empty paragraph of content after a header\n */ function $1e071d2722b0abf5$var$getFirstParagraphAfterHeader(header) {\n    let nextElement = header.nextElementSibling;\n    // Look for the first non-empty content before the next header\n    while(nextElement){\n        // Stop if we hit another header\n        if (nextElement.tagName.match(/^H[1-6]$/)) break;\n        // Check if it's a paragraph with actual content\n        if (nextElement.tagName === 'P') {\n            const text = (nextElement.textContent || '').trim();\n            if (text.length > 0) // Found non-empty paragraph - truncate if too long\n            return text.length > 500 ? text.substring(0, 497) + '...' : text;\n        }\n        // If it's a list (UL or OL), get text from the list items\n        if (nextElement.tagName === 'UL' || nextElement.tagName === 'OL') {\n            const listItems = nextElement.querySelectorAll('li');\n            const itemTexts = [];\n            let totalLength = 0;\n            for (const li of Array.from(listItems)){\n                // Only get direct text content, not nested lists\n                const text = Array.from(li.childNodes).filter((node)=>node.nodeType === Node.TEXT_NODE || node.nodeType === Node.ELEMENT_NODE && node.tagName !== 'UL' && node.tagName !== 'OL').map((node)=>(node.textContent || '').trim()).join(' ').trim();\n                if (text.length > 0) {\n                    itemTexts.push(`\\u{2022} ${text}`);\n                    totalLength += text.length;\n                    if (totalLength > 400) break; // Stop if we have enough text\n                }\n            }\n            if (itemTexts.length > 0) {\n                // Join with newlines for better formatting\n                const combinedText = itemTexts.join('\\n');\n                return combinedText.length > 500 ? combinedText.substring(0, 497) + '...' : combinedText;\n            }\n        }\n        nextElement = nextElement.nextElementSibling;\n    }\n    return '';\n}\n/**\n * Truncates text to a maximum length, preserving word boundaries\n */ function $1e071d2722b0abf5$var$truncateText(text, maxLength = 400) {\n    if (text.length <= maxLength) return text;\n    // Truncate to maxLength and find the last space\n    const truncated = text.substring(0, maxLength);\n    const lastSpace = truncated.lastIndexOf(' ');\n    if (lastSpace > 0) return truncated.substring(0, lastSpace) + '...';\n    return truncated + '...';\n}\n/**\n * Extracts preview text from the page content, with anchor-aware logic\n */ function $1e071d2722b0abf5$var$getPreviewText(headerId) {\n    // If we have a specific header ID (anchor), try to get text after it\n    if (headerId) {\n        const header = document.getElementById(headerId);\n        if (header) {\n            // Try to get text from the first paragraph after the header\n            const paragraphText = $1e071d2722b0abf5$var$getFirstParagraphAfterHeader(header);\n            if (paragraphText) return $1e071d2722b0abf5$var$truncateText(paragraphText);\n            // Try to get text from any content elements after the header\n            let nextElement = header.nextElementSibling;\n            const textParts = [];\n            let charCount = 0;\n            while(nextElement && charCount < 400){\n                // Stop if we hit another header\n                if (nextElement.tagName.match(/^H[1-6]$/)) break;\n                // Get text from various content elements\n                if (nextElement.tagName === 'P' || nextElement.tagName === 'LI' || nextElement.tagName === 'BLOCKQUOTE' || nextElement.tagName === 'DIV') {\n                    const text = (nextElement.textContent || '').trim();\n                    if (text.length > 0) {\n                        textParts.push(text);\n                        charCount += text.length;\n                    }\n                }\n                nextElement = nextElement.nextElementSibling;\n            }\n            if (textParts.length > 0) return $1e071d2722b0abf5$var$truncateText(textParts.join(' '));\n        }\n    }\n    // Fallback: try to find preview text from various content areas\n    const contentSelectors = [\n        'article',\n        'main',\n        '.content',\n        '.post-content',\n        '.entry-content',\n        '#content-holder',\n        '.content-holder'\n    ];\n    for (const selector of contentSelectors){\n        const contentArea = document.querySelector(selector);\n        if (contentArea) {\n            // Find the first paragraph in the content area\n            const firstParagraph = contentArea.querySelector('p');\n            if (firstParagraph) {\n                const text = (firstParagraph.textContent || '').trim();\n                if (text.length > 0) return $1e071d2722b0abf5$var$truncateText(text);\n            }\n        }\n    }\n    // Last resort: find the first paragraph on the page\n    const firstParagraph = document.querySelector('p');\n    if (firstParagraph) {\n        const text = (firstParagraph.textContent || '').trim();\n        if (text.length > 0) return $1e071d2722b0abf5$var$truncateText(text);\n    }\n    // If no preview text found, return empty string\n    return '';\n}\n/**\n * Creates a GitHub issue URL for a section with optional custom title and description\n */ function $1e071d2722b0abf5$var$createGitHubIssueUrl(headerId, headerText, customTitle, customDescription, header) {\n    // Get the current page path from the URL\n    const pathname = window.location.pathname;\n    // Remove leading slash and .html extension if present\n    const pagePath = pathname.replace(/^\\//, \"\").replace(/\\.html$/, \"\");\n    // Get the actual source file path from the meta tag (set by Jekyll)\n    const metaTag = document.querySelector('meta[property=\"markdown-path\"]');\n    const sourceFile = metaTag ? metaTag.getAttribute(\"content\") : `${pagePath || \"index\"}.md`;\n    // Construct the GitHub issue URL\n    const repoUrl = \"https://github.com/idvorkin/idvorkin.github.io\";\n    // Format title as: page/section: custom title\n    const formattedTitle = customTitle ? `${pagePath || \"index\"}/${headerId}: ${customTitle}` : `${pagePath || \"index\"}/${headerId}: Issue with ${headerText}`;\n    const issueTitle = encodeURIComponent(formattedTitle);\n    // Use description if provided, otherwise use title as description\n    const description = customDescription || customTitle || `Issue with section: ${headerText}`;\n    // Get first paragraph of content if header is provided\n    const firstParagraph = header ? $1e071d2722b0abf5$var$getFirstParagraphAfterHeader(header) : '';\n    // Format location as a single line with hyperlinks\n    const locationLine = `\\u{1F4CD} [${pagePath || \"index\"}](https://idvorkin.azurewebsites.net/${pagePath})/[${headerId}](https://idvorkin.azurewebsites.net/${pagePath}/${headerId}) - [[GitHub]](${repoUrl}/blob/main/${sourceFile}#${headerId})`;\n    // Format the issue body with location at top, then description, then content excerpt\n    let issueBodyContent = `${locationLine}\\n\\n` + `## Description\\n\\n` + `${description}\\n\\n`;\n    // Add content excerpt with section heading if available\n    if (firstParagraph) issueBodyContent += `## Content Excerpt\\n\\n` + `#### ${headerText}\\n\\n` + `> ${firstParagraph}\\n\\n`;\n    const issueBody = encodeURIComponent(issueBodyContent);\n    return `${repoUrl}/issues/new?title=${issueTitle}&body=${issueBody}`;\n}\n// Store cleanup functions for each header\nconst $1e071d2722b0abf5$var$headerCleanupFunctions = new WeakMap();\n// Store popup references for lazy loading\nconst $1e071d2722b0abf5$var$headerPopups = new WeakMap();\n// Track all headers for cleanup purposes\nconst $1e071d2722b0abf5$var$trackedHeaders = new Set();\n/**\n * Creates and shows popup lazily when needed\n */ function $1e071d2722b0abf5$var$getOrCreatePopup(header, headerId) {\n    let popup = $1e071d2722b0abf5$var$headerPopups.get(header);\n    if (!popup) {\n        popup = $1e071d2722b0abf5$var$createIssuePopup(headerId, header.textContent || \"\");\n        document.body.appendChild(popup);\n        $1e071d2722b0abf5$var$headerPopups.set(header, popup);\n        // Setup popup event handlers\n        $1e071d2722b0abf5$var$setupPopupEventHandlers(popup, header, headerId);\n    }\n    return popup;\n}\n/**\n * Sets up event handlers for a popup\n */ function $1e071d2722b0abf5$var$setupPopupEventHandlers(popup, header, headerId) {\n    const cleanupFunctions = [];\n    // Handle close button\n    const closeBtn = popup.querySelector(\".github-issue-popup-close\");\n    if (closeBtn) {\n        const closeHandler = ()=>$1e071d2722b0abf5$var$hideIssuePopup(popup);\n        closeBtn.addEventListener(\"click\", closeHandler);\n        cleanupFunctions.push(()=>closeBtn.removeEventListener(\"click\", closeHandler));\n    }\n    // Handle cancel button\n    const cancelBtn = popup.querySelector(\".github-issue-cancel\");\n    if (cancelBtn) {\n        const cancelHandler = ()=>$1e071d2722b0abf5$var$hideIssuePopup(popup);\n        cancelBtn.addEventListener(\"click\", cancelHandler);\n        cleanupFunctions.push(()=>cancelBtn.removeEventListener(\"click\", cancelHandler));\n    }\n    // Function to submit the issue\n    const submitIssue = ()=>{\n        const titleInput = popup.querySelector(\".github-issue-title\");\n        const commentTextarea = popup.querySelector(\".github-issue-comment\");\n        const customTitle = titleInput?.value || \"\";\n        const customDescription = commentTextarea?.value || \"\";\n        const issueUrl = $1e071d2722b0abf5$var$createGitHubIssueUrl(headerId, header.textContent || \"\", customTitle, customDescription, header);\n        window.open(issueUrl, \"_blank\");\n        $1e071d2722b0abf5$var$hideIssuePopup(popup);\n    };\n    // Handle submit button\n    const submitBtn = popup.querySelector(\".github-issue-submit\");\n    if (submitBtn) {\n        submitBtn.addEventListener(\"click\", submitIssue);\n        cleanupFunctions.push(()=>submitBtn.removeEventListener(\"click\", submitIssue));\n    }\n    // Handle keyboard shortcuts (Ctrl/Cmd + Enter)\n    const titleInput = popup.querySelector(\".github-issue-title\");\n    const commentTextarea = popup.querySelector(\".github-issue-comment\");\n    const handleKeydown = (event)=>{\n        if ((event.ctrlKey || event.metaKey) && event.key === \"Enter\") {\n            event.preventDefault();\n            submitIssue();\n        }\n    };\n    if (titleInput) {\n        titleInput.addEventListener(\"keydown\", handleKeydown);\n        cleanupFunctions.push(()=>titleInput.removeEventListener(\"keydown\", handleKeydown));\n    }\n    if (commentTextarea) {\n        commentTextarea.addEventListener(\"keydown\", handleKeydown);\n        cleanupFunctions.push(()=>commentTextarea.removeEventListener(\"keydown\", handleKeydown));\n    }\n    // Store cleanup functions for this popup\n    const existingCleanup = $1e071d2722b0abf5$var$headerCleanupFunctions.get(header) || [];\n    $1e071d2722b0abf5$var$headerCleanupFunctions.set(header, [\n        ...existingCleanup,\n        ...cleanupFunctions\n    ]);\n}\n/**\n * Adds copy link functionality to a single header\n */ function $1e071d2722b0abf5$var$addCopyLinkToHeader(header, options) {\n    // Check if this header already has a copy link\n    const existingCopyLink = header.querySelector(`.${options.iconClass || $1e071d2722b0abf5$var$DEFAULT_OPTIONS.iconClass}`);\n    if (existingCopyLink) return; // Skip if copy link already exists\n    const headerId = $1e071d2722b0abf5$var$getOrCreateHeaderId(header);\n    const copyIcon = $1e071d2722b0abf5$var$createCopyLinkIcon(options);\n    const githubIcon = $1e071d2722b0abf5$var$createGitHubIssueIcon();\n    const cleanupFunctions = [];\n    // Add click handler for share/copy link\n    const shareClickHandler = async (event)=>{\n        event.preventDefault();\n        event.stopPropagation();\n        const wasShared = await $1e071d2722b0abf5$var$shareOrCopyHeaderLink(headerId, options);\n        // Only show tooltip if we copied (not if we used native share)\n        if (!wasShared) $1e071d2722b0abf5$var$showCopiedTooltip(copyIcon, options.tooltipDuration);\n    };\n    copyIcon.addEventListener(\"click\", shareClickHandler);\n    cleanupFunctions.push(()=>copyIcon.removeEventListener(\"click\", shareClickHandler));\n    // Add keyboard support for accessibility\n    const keyboardHandler = (event)=>{\n        if (event.key === 'Enter' || event.key === ' ') {\n            event.preventDefault();\n            shareClickHandler(event);\n        }\n    };\n    copyIcon.addEventListener(\"keydown\", keyboardHandler);\n    cleanupFunctions.push(()=>copyIcon.removeEventListener(\"keydown\", keyboardHandler));\n    // Add click handler for GitHub issue icon to show popup (lazy loading)\n    const githubClickHandler = (event)=>{\n        event.preventDefault();\n        event.stopPropagation();\n        const popup = $1e071d2722b0abf5$var$getOrCreatePopup(header, headerId);\n        $1e071d2722b0abf5$var$showIssuePopup(popup, header);\n    };\n    githubIcon.addEventListener(\"click\", githubClickHandler);\n    cleanupFunctions.push(()=>githubIcon.removeEventListener(\"click\", githubClickHandler));\n    // Close popup when clicking outside (use capture phase to avoid conflicts)\n    const handleOutsideClick = (event)=>{\n        const popup = $1e071d2722b0abf5$var$headerPopups.get(header);\n        if (popup && !popup.contains(event.target) && event.target !== githubIcon && !githubIcon.contains(event.target) && popup.style.display !== \"none\") $1e071d2722b0abf5$var$hideIssuePopup(popup);\n    };\n    // Add slight delay to avoid immediate closing\n    const timeoutId = setTimeout(()=>{\n        document.addEventListener(\"click\", handleOutsideClick, true);\n        cleanupFunctions.push(()=>document.removeEventListener(\"click\", handleOutsideClick, true));\n    }, 100);\n    cleanupFunctions.push(()=>clearTimeout(timeoutId));\n    // Append the icons to the header\n    header.appendChild(copyIcon);\n    header.appendChild(githubIcon);\n    // Add hover effects to the header\n    const mouseEnterHandler = ()=>{\n        copyIcon.style.opacity = \"1\";\n        githubIcon.style.opacity = \"1\";\n    };\n    const mouseLeaveHandler = ()=>{\n        copyIcon.style.opacity = \"0\";\n        githubIcon.style.opacity = \"0\";\n    };\n    header.addEventListener(\"mouseenter\", mouseEnterHandler);\n    header.addEventListener(\"mouseleave\", mouseLeaveHandler);\n    cleanupFunctions.push(()=>{\n        header.removeEventListener(\"mouseenter\", mouseEnterHandler);\n        header.removeEventListener(\"mouseleave\", mouseLeaveHandler);\n    });\n    // Store cleanup functions for this header\n    $1e071d2722b0abf5$var$headerCleanupFunctions.set(header, cleanupFunctions);\n    $1e071d2722b0abf5$var$trackedHeaders.add(header);\n}\nfunction $1e071d2722b0abf5$export$851d513ec53b2ac9() {\n    // Clean up all stored event listeners\n    $1e071d2722b0abf5$var$trackedHeaders.forEach((header)=>{\n        const cleanupFns = $1e071d2722b0abf5$var$headerCleanupFunctions.get(header);\n        if (cleanupFns) cleanupFns.forEach((fn)=>fn());\n        // Remove popup if exists\n        const popup = $1e071d2722b0abf5$var$headerPopups.get(header);\n        if (popup) popup.remove();\n    });\n    // Clear the tracked headers set\n    $1e071d2722b0abf5$var$trackedHeaders.clear();\n    // Reset initialization flag\n    $1e071d2722b0abf5$var$isHeaderCopyLinksInitialized = false;\n}\nfunction $1e071d2722b0abf5$export$6d9d369543f03cfd(customOptions = {}) {\n    const options = {\n        ...$1e071d2722b0abf5$var$DEFAULT_OPTIONS,\n        ...customOptions\n    };\n    // Find all headers on the page (including H1)\n    // Some H1s are outside content-holder, so search the entire document\n    const allHeaders = document.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n    for (const header of Array.from(allHeaders))$1e071d2722b0abf5$var$addCopyLinkToHeader(header, options);\n}\nfunction $1e071d2722b0abf5$export$4f84c6cccfa3ee4f() {\n    const styleId = \"header-copy-link-styles\";\n    // Check if styles already exist\n    if (document.getElementById(styleId)) return;\n    const style = document.createElement(\"style\");\n    style.id = styleId;\n    style.textContent = `\n    .header-copy-link,\n    .header-github-issue {\n      opacity: 0;\n      margin-left: 0.5rem;\n      transition: opacity 0.2s ease;\n      cursor: pointer;\n      user-select: none;\n      font-size: 0.8em;\n      color: #6c757d;\n      text-decoration: none;\n    }\n    \n    .header-copy-link:hover {\n      color: #007bff;\n    }\n    \n    .header-github-issue:hover {\n      color: #dc3545;\n    }\n    \n    h1:hover .header-copy-link,\n    h2:hover .header-copy-link,\n    h3:hover .header-copy-link,\n    h4:hover .header-copy-link,\n    h5:hover .header-copy-link,\n    h6:hover .header-copy-link,\n    h1:hover .header-github-issue,\n    h2:hover .header-github-issue,\n    h3:hover .header-github-issue,\n    h4:hover .header-github-issue,\n    h5:hover .header-github-issue,\n    h6:hover .header-github-issue {\n      opacity: 1;\n    }\n    \n    /* Ensure headers have relative positioning for tooltip placement */\n    h1, h2, h3, h4, h5, h6 {\n      position: relative;\n    }\n    \n    /* GitHub Issue Popup Styles */\n    .github-issue-popup {\n      position: absolute;\n      background: white;\n      border: 1px solid #ddd;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      width: 400px;\n      max-width: 90vw;\n      z-index: 1000;\n    }\n    \n    .github-issue-popup-content {\n      padding: 0;\n    }\n    \n    .github-issue-popup-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 12px 16px;\n      background: #f6f8fa;\n      border-bottom: 1px solid #e1e4e8;\n      border-radius: 8px 8px 0 0;\n    }\n    \n    .github-issue-popup-header h4 {\n      margin: 0;\n      font-size: 14px;\n      color: #24292e;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 350px;\n    }\n    \n    .github-issue-popup-close {\n      background: none;\n      border: none;\n      font-size: 24px;\n      color: #586069;\n      cursor: pointer;\n      padding: 0;\n      width: 24px;\n      height: 24px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    \n    .github-issue-popup-close:hover {\n      color: #24292e;\n    }\n    \n    .github-issue-popup-body {\n      padding: 16px;\n    }\n    \n    .github-issue-popup-body label {\n      display: block;\n      margin-bottom: 4px;\n      font-size: 13px;\n      font-weight: 600;\n      color: #24292e;\n    }\n    \n    .github-issue-title,\n    .github-issue-comment {\n      width: 100%;\n      padding: 8px 12px;\n      margin-bottom: 12px;\n      border: 1px solid #e1e4e8;\n      border-radius: 6px;\n      font-size: 14px;\n      font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif;\n      box-sizing: border-box;\n    }\n    \n    .github-issue-title:focus,\n    .github-issue-comment:focus {\n      outline: none;\n      border-color: #0366d6;\n      box-shadow: 0 0 0 3px rgba(3, 102, 214, 0.1);\n    }\n    \n    .github-issue-comment {\n      resize: vertical;\n      min-height: 80px;\n    }\n    \n    .github-issue-popup-buttons {\n      display: flex;\n      gap: 8px;\n      justify-content: flex-end;\n      margin-top: 12px;\n    }\n    \n    .github-issue-submit,\n    .github-issue-cancel {\n      padding: 6px 16px;\n      border-radius: 6px;\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      border: 1px solid;\n      transition: all 0.2s;\n    }\n    \n    .github-issue-submit {\n      background: #2ea44f;\n      color: white;\n      border-color: #2ea44f;\n    }\n    \n    .github-issue-submit:hover {\n      background: #2c974b;\n      border-color: #2c974b;\n    }\n    \n    .github-issue-cancel {\n      background: #fafbfc;\n      color: #24292e;\n      border-color: #e1e4e8;\n    }\n    \n    .github-issue-cancel:hover {\n      background: #f3f4f6;\n      border-color: #c9ced1;\n    }\n    \n    .github-issue-popup-hint {\n      margin-top: 8px;\n      text-align: center;\n      color: #586069;\n    }\n  `;\n    document.head.appendChild(style);\n}\n// Global flag to prevent multiple initializations\nlet $1e071d2722b0abf5$var$isHeaderCopyLinksInitialized = false;\nfunction $1e071d2722b0abf5$export$8309a9175adac4ea() {\n    $1e071d2722b0abf5$var$isHeaderCopyLinksInitialized = false;\n}\nfunction $1e071d2722b0abf5$export$73539f6b6ed07dd3(options = {}) {\n    // Prevent multiple initializations\n    if ($1e071d2722b0abf5$var$isHeaderCopyLinksInitialized) return;\n    $1e071d2722b0abf5$var$isHeaderCopyLinksInitialized = true;\n    // Add styles\n    $1e071d2722b0abf5$export$4f84c6cccfa3ee4f();\n    // Initialize the feature\n    if (document.readyState === \"loading\") document.addEventListener(\"DOMContentLoaded\", ()=>{\n        $1e071d2722b0abf5$export$6d9d369543f03cfd(options);\n    });\n    else $1e071d2722b0abf5$export$6d9d369543f03cfd(options);\n}\n\n\n/**\n * Image Zoom functionality for blog posts\n * Automatically wraps images in blog posts with GLightbox functionality\n */ // Constants for retry logic\nconst $249ffe79f7ab8258$var$MAX_RETRY_ATTEMPTS = 50;\nconst $249ffe79f7ab8258$var$RETRY_DELAY_MS = 100;\nconst $249ffe79f7ab8258$var$MAX_RETRY_TIME_MS = $249ffe79f7ab8258$var$MAX_RETRY_ATTEMPTS * $249ffe79f7ab8258$var$RETRY_DELAY_MS;\nfunction $249ffe79f7ab8258$export$8aa1e0ee36490df1(retryCount = 0) {\n    // Skip if running in test environment without DOM\n    if (typeof document === \"undefined\") return;\n    console.log(\"\\uD83D\\uDDBC\\uFE0F Enabling image zoom functionality\");\n    // Wait for GLightbox to be available with retry limit\n    if (typeof window.GLightbox === \"undefined\") {\n        if (retryCount < $249ffe79f7ab8258$var$MAX_RETRY_ATTEMPTS) {\n            // Max 5 seconds of retries (50 * 100ms)\n            console.warn(`\\u{26A0}\\u{FE0F} GLightbox not found, retrying in ${$249ffe79f7ab8258$var$RETRY_DELAY_MS}ms (attempt ${retryCount + 1}/${$249ffe79f7ab8258$var$MAX_RETRY_ATTEMPTS})`);\n            setTimeout(()=>$249ffe79f7ab8258$export$8aa1e0ee36490df1(retryCount + 1), $249ffe79f7ab8258$var$RETRY_DELAY_MS);\n            return;\n        }\n        console.error(`\\u{274C} GLightbox failed to load after ${$249ffe79f7ab8258$var$MAX_RETRY_TIME_MS / 1000} seconds, aborting image zoom initialization`);\n        return;\n    }\n    // Find all images in the main content area (excluding headers, sidebars, etc.)\n    const contentSelectors = [\n        \"p img\",\n        \"li img\",\n        \".container img\",\n        \".post-content img\",\n        \"article img\",\n        \".markdown-body img\",\n        \"main img\"\n    ];\n    const images = document.querySelectorAll(contentSelectors.join(\", \"));\n    console.log(`\\u{1F50D} Found ${images.length} images to process`);\n    let processedCount = 0;\n    images.forEach((img, index)=>{\n        const imageElement = img;\n        // Skip if already wrapped in a link\n        if (imageElement.parentElement?.tagName === \"A\") {\n            console.log(`\\u{23ED}\\u{FE0F} Skipping image ${index + 1} - already wrapped`);\n            return;\n        }\n        // Skip tiny images (likely icons)\n        if (imageElement.naturalWidth > 0 && imageElement.naturalWidth < 100 && imageElement.naturalHeight < 100) {\n            console.log(`\\u{23ED}\\u{FE0F} Skipping image ${index + 1} - too small (${imageElement.naturalWidth}x${imageElement.naturalHeight})`);\n            return;\n        }\n        // Create wrapper link\n        const link = document.createElement(\"a\");\n        link.href = imageElement.src;\n        link.className = \"glightbox\";\n        link.setAttribute(\"data-gallery\", \"post-images\");\n        // Add description from alt text if available\n        if (imageElement.alt) link.setAttribute(\"data-description\", imageElement.alt);\n        // Wrap the image\n        imageElement.parentNode?.insertBefore(link, imageElement);\n        link.appendChild(imageElement);\n        processedCount++;\n        console.log(`\\u{2705} Processed image ${index + 1}: ${imageElement.src.substring(imageElement.src.lastIndexOf(\"/\") + 1)}`);\n    });\n    // Initialize GLightbox for all .glightbox elements (including any existing ones)\n    try {\n        const lightbox = window.GLightbox({\n            selector: \".glightbox\",\n            touchNavigation: true,\n            loop: true,\n            autoplayVideos: true\n        });\n        if (processedCount > 0) console.log(`\\u{1F389} Image zoom enabled for ${processedCount} images`);\n        else console.log(\"\\u2139\\uFE0F No images needed processing, but GLightbox initialized for existing elements\");\n    } catch (error) {\n        console.error(\"Error initializing GLightbox:\", error);\n    }\n}\n// Auto-initialize when DOM is ready\nif (typeof document !== \"undefined\") {\n    if (document.readyState === \"loading\") document.addEventListener(\"DOMContentLoaded\", ()=>$249ffe79f7ab8258$export$8aa1e0ee36490df1());\n    else // DOM already loaded, but wait a bit for dynamic content\n    setTimeout(()=>$249ffe79f7ab8258$export$8aa1e0ee36490df1(), 500);\n}\n\n\nlet $417ebc8475d6fc5d$var$tocExpand = true;\nfunction $417ebc8475d6fc5d$var$checkExpandToggle() {\n    const toc = $(\".ui-toc-dropdown .toc\");\n    const toggle = $(\".expand-toggle\");\n    if (toc.length === 0 || toggle.length === 0) {\n        console.warn(\"TOC or toggle elements not found for expand/collapse\");\n        return;\n    }\n    if (!$417ebc8475d6fc5d$var$tocExpand) {\n        toc.removeClass(\"expand\");\n        toggle.text(\"Expand all\");\n    } else {\n        toc.addClass(\"expand\");\n        toggle.text(\"Collapse all\");\n    }\n}\nfunction $417ebc8475d6fc5d$var$SwapProdAndTest() {\n    /* Find page title. */ const url = window.location.href;\n    const prodPrefix = \"https://idvork.in\";\n    // Get the current port from the URL\n    const currentPort = window.location.port || \"4000\";\n    const testPrefix = `http://localhost:${currentPort}`;\n    const isProd = url.includes(prodPrefix);\n    let newURL = url;\n    if (isProd) newURL = url.replace(prodPrefix, testPrefix);\n    else // When swapping from test to prod, we need to handle any port number\n    newURL = url.replace(/http:\\/\\/localhost:\\d+/, prodPrefix);\n    window.location.href = newURL;\n}\nfunction $417ebc8475d6fc5d$var$ForceShowRightSideBar() {\n    const toc = $(\"#right-sidebar\");\n    const mainContent = $(\"#main-content\");\n    if (toc.length > 0) {\n        toc.removeClass();\n        toc.addClass(\"col-4 pl-0\");\n    }\n    if (mainContent.length > 0) {\n        mainContent.removeClass();\n        mainContent.addClass(\"col-8 pr-0\");\n    }\n    // Hide DropUp\n    const tocDropUp = $(\"#id-ui-toc-dropdown\");\n    if (tocDropUp.length > 0) {\n        tocDropUp.removeClass();\n        tocDropUp.addClass(\"d-none\");\n    }\n}\n// <!-- Copied from hackmd-extras.js -->\nfunction $417ebc8475d6fc5d$var$generateToc(id, showPinToc) {\n    const target = $(`#${id}`);\n    if (target.length === 0) {\n        console.warn(`Target element #${id} not found for TOC generation`);\n        return;\n    }\n    target.html(\"\");\n    // Check if content-holder exists\n    if ($(\"#content-holder\").length === 0) {\n        console.warn(\"Content holder not found for TOC generation\");\n        return;\n    }\n    /* eslint-disable no-unused-vars */ /* @ts-ignore:TS2339*/ const toc = new window.Toc(\"content-holder\", {\n        level: 3,\n        top: -1,\n        class: \"toc\",\n        ulClass: \"nav\",\n        targetId: id\n    });\n    /* eslint-enable no-unused-vars */ if (target.text() === \"undefined\") target.html(\"\");\n    const tocMenu = $('<div class=\"toc-menu\"></div');\n    const toggle = $('<a class=\"expand-toggle\" href=\"#\">Collapse all</a>');\n    const backToTop = $('<a class=\"back-to-top\" href=\"#\">Top of page</a>');\n    const gotoBottom = $('<a class=\"go-to-bottom\" href=\"#\">Bottom of page</a>');\n    const forceSideBar = $('<a class=\"go-to-bottom\" href=\"#\">Pin ToC</a>');\n    $417ebc8475d6fc5d$var$checkExpandToggle();\n    toggle.click((e)=>{\n        e.preventDefault();\n        e.stopPropagation();\n        $417ebc8475d6fc5d$var$tocExpand = !$417ebc8475d6fc5d$var$tocExpand;\n        $417ebc8475d6fc5d$var$checkExpandToggle();\n    });\n    backToTop.click((e)=>{\n        e.preventDefault();\n        e.stopPropagation();\n        window.scrollTo(0, 0);\n    });\n    gotoBottom.click((e)=>{\n        e.preventDefault();\n        e.stopPropagation();\n        window.scrollTo(0, document.body.scrollHeight);\n    });\n    forceSideBar.click((e)=>$417ebc8475d6fc5d$var$ForceShowRightSideBar());\n    tocMenu.append(toggle).append(backToTop).append(gotoBottom);\n    if (showPinToc) tocMenu.append(forceSideBar);\n    target.append(tocMenu);\n}\n// MakeBackLinkHTML moved to shared.ts\nasync function $417ebc8475d6fc5d$var$AddLinksToPage(allUrls) {\n    // TODO handle redirects\n    let page_path;\n    let backlinks;\n    let frontlinks;\n    try {\n        if (!allUrls) {\n            console.log(\"No backlinks available\");\n            return;\n        }\n        page_path = new URL(document.URL).pathname;\n        // Safe check for the URL in allUrls\n        if (!allUrls[page_path]) {\n            console.log(`Page ${page_path} not found in backlinks`);\n            return;\n        }\n        backlinks = allUrls[page_path]?.incoming_links;\n        frontlinks = allUrls[page_path]?.outgoing_links;\n        if (!backlinks && !frontlinks) {\n            console.log(`No backlinks for the page ${page_path}`);\n            return;\n        }\n    } catch (error) {\n        console.log(`Error processing links: ${error instanceof Error ? error.message : String(error)}`);\n        return;\n    }\n    const link_parent_location = $(\"#links-to-page\");\n    if (!link_parent_location || link_parent_location.length === 0) {\n        console.log(\"No back_link_location\");\n        return;\n    }\n    link_parent_location.append(`\n<ul class=\"nav nav-tabs nav-fill\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#incoming\" type=\"button\" role=\"tab\" aria-controls=\"incoming\" aria-selected=\"true\">Links to here</button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#outgoing\" type=\"button\" role=\"tab\" aria-controls=\"outgoing\" aria-selected=\"false\">Link from here</button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#graph\" type=\"button\" role=\"tab\" aria-controls=\"outgoing\" aria-selected=\"false\">Graph</button>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"myTabContent\">\n  <div class=\"tab-pane fade show active \" id=\"incoming\" role=\"tabpanel\" aria-labelledby=\"incoming-tab\"></div>\n  <div class=\"tab-pane fade\" id=\"outgoing\" role=\"tabpanel\" aria-labelledby=\"outgoing-tab\"></div>\n  <div class=\"tab-pane fade\" id=\"graph\" role=\"tabpanel\" aria-labelledby=\"outgoing-tab\">\n    <span> View the graph for: </span>\n  </div>\n</div>\n`);\n    const incoming_location = link_parent_location.find(\"#incoming\");\n    const sort_descending_by_size = (a, b)=>Number(allUrls[b].doc_size) - Number(allUrls[a].doc_size);\n    if (backlinks) for (const backlink of backlinks.sort(sort_descending_by_size)){\n        const url_info = allUrls[backlink];\n        incoming_location.append((0, $5c367f1c83ef0920$export$fc303307c4ed1d41)(url_info));\n    }\n    // remove front links not in\n    const clean_front_links = [];\n    for (const frontlink of frontlinks)if (allUrls[frontlink]) clean_front_links.push(frontlink);\n    const outgoing_location = link_parent_location.find(\"#outgoing\");\n    if (clean_front_links) for (const link of clean_front_links.sort(sort_descending_by_size)){\n        const url_info = allUrls[link];\n        outgoing_location.append((0, $5c367f1c83ef0920$export$fc303307c4ed1d41)(url_info));\n    }\n    const graph_location = link_parent_location.find(\"#graph\");\n    const stripped_page_path = page_path.replace(/\\//g, \"\");\n    graph_location.append(`<a href='/graph#${stripped_page_path}'>${page_path} (${stripped_page_path}) </a>`);\n}\nfunction $417ebc8475d6fc5d$var$make_html_summary_link(link, url_info) {\n    if (!url_info) return $417ebc8475d6fc5d$var$make_html_summary_link_error(link, \"URL info is undefined\");\n    const url = url_info.url || \"#\";\n    const title = url_info.title || \"Untitled\";\n    const description = url_info.description || \"No description available\";\n    const attribution = `(From:<a href='${url}'> ${title}</a>)`;\n    return `<div>\n        <i> ${description}</i> ${attribution}\n    </div>`;\n}\nfunction $417ebc8475d6fc5d$var$make_html_summary_link_error(link, error) {\n    const href = link?.attr ? link.attr(\"href\") : \"unknown\";\n    return `<span class='text-danger'>Error: Invalid link for ${href} ${error} </span>`;\n}\nfunction $417ebc8475d6fc5d$var$AddSummarysToPage(backLinks) {\n    if (!backLinks) {\n        console.log(\"No backlinks data available\");\n        return;\n    }\n    try {\n        const summary_links = $.makeArray($(\".summary-link\"));\n        if (!summary_links || summary_links.length === 0) {\n            console.log(\"No summary links found\");\n            return;\n        }\n        for (const raw_link of summary_links){\n            const link = $(raw_link);\n            try {\n                if (!link || !link.attr) {\n                    console.log(\"Invalid link element\");\n                    return;\n                }\n                let ref = link.attr(\"href\");\n                if (!ref) {\n                    link.html($417ebc8475d6fc5d$var$make_html_summary_link_error(link, \"missing href\"));\n                    return;\n                }\n                // Check if backLinks has necessary properties\n                if (!backLinks.redirects || !backLinks.url_info) {\n                    link.html($417ebc8475d6fc5d$var$make_html_summary_link_error(link, \"incomplete backLinks data\"));\n                    return;\n                }\n                // Resolve redirect\n                if (backLinks.redirects[ref] !== undefined) ref = backLinks.redirects[ref];\n                // Look up in url info\n                if (backLinks.url_info[ref] === undefined) {\n                    link.html($417ebc8475d6fc5d$var$make_html_summary_link_error(link, \"not found in url info\"));\n                    return;\n                }\n                link.html($417ebc8475d6fc5d$var$make_html_summary_link(link, backLinks.url_info[ref]));\n            } catch (e) {\n                if (link?.html) link.html($417ebc8475d6fc5d$var$make_html_summary_link_error(link, e));\n                else console.error(\"Error processing link and unable to display error:\", e);\n            }\n        }\n    } catch (error) {\n        console.error(\"Error processing summary links:\", error);\n    }\n}\nasync function $417ebc8475d6fc5d$var$add_link_loader() {\n    // Prevent multiple initialization using global flag\n    const globalFlag = \"__idvorkin_add_link_loader_initialized__\";\n    if (window[globalFlag]) return;\n    window[globalFlag] = true;\n    $417ebc8475d6fc5d$var$AddLinksToPage(await (0, $5c367f1c83ef0920$export$46c928bda6aa7b36)());\n    $417ebc8475d6fc5d$var$AddSummarysToPage(await $417ebc8475d6fc5d$var$get_back_links());\n}\nlet $417ebc8475d6fc5d$var$cached_back_links = null;\nasync function $417ebc8475d6fc5d$var$get_back_links() {\n    try {\n        if ($417ebc8475d6fc5d$var$cached_back_links != null) return $417ebc8475d6fc5d$var$cached_back_links;\n        const url = window.location.href;\n        const prodPrefix = \"https://idvork.in\";\n        const isProd = url.includes(prodPrefix);\n        let backlinks_url = \"\";\n        if (isProd) backlinks_url = \"https://raw.githubusercontent.com/idvorkin/idvorkin.github.io/master/back-links.json?flush_cache=True\";\n        else backlinks_url = \"/back-links.json\";\n        // Use a try/catch here in case $.getJSON fails\n        try {\n            const backlinksJson = await $.getJSON(backlinks_url);\n            // Ensure we have the required properties\n            if (!backlinksJson.redirects) backlinksJson.redirects = {};\n            if (!backlinksJson.url_info) backlinksJson.url_info = {};\n            $417ebc8475d6fc5d$var$cached_back_links = backlinksJson;\n            return $417ebc8475d6fc5d$var$cached_back_links;\n        } catch (error) {\n            console.error(\"Error fetching backlinks JSON:\", error);\n            return {\n                redirects: {},\n                url_info: {}\n            };\n        }\n    } catch (error) {\n        console.error(\"Error in get_back_links:\", error);\n        return {\n            redirects: {},\n            url_info: {}\n        };\n    }\n}\nfunction $417ebc8475d6fc5d$var$search() {\n    // Redirect to main page for search\n    window.location.href = '/';\n}\nfunction $417ebc8475d6fc5d$var$keyboard_shortcut_loader() {\n    const mouseTrap = window.Mousetrap();\n    mouseTrap.bind(\"s\", (e)=>$417ebc8475d6fc5d$var$search());\n    mouseTrap.bind(\"t\", (e)=>$417ebc8475d6fc5d$var$ForceShowRightSideBar());\n    mouseTrap.bind(\"p\", (e)=>$417ebc8475d6fc5d$var$SwapProdAndTest());\n    mouseTrap.bind(\"a\", (e)=>{\n        location.href = \"/all\";\n    });\n    mouseTrap.bind(\"m\", (e)=>{\n        location.href = \"/toc\";\n    });\n    mouseTrap.bind(\"6\", (e)=>{\n        location.href = \"/ig66\";\n    });\n    const shortcutHelp = `\nTry these shortcuts:\n  s - search\n  / - start chatting with others\n  t - force sidebar\n  p - swap prod and test\n  z - surprise me\n  a - all posts\n  m - global toc\n  6 - family journal\n  `;\n    mouseTrap.bind(\"?\", (e)=>alert(shortcutHelp));\n}\n/**\n * Replaces placeholder links in the document with their corresponding list content.\n * @param listReplacements - An object mapping placeholder texts to list elements.\n */ function $417ebc8475d6fc5d$var$replacePlaceholdersWithLists(listReplacements) {\n    for (const [placeholderText, list] of Object.entries(listReplacements)){\n        // Use native DOM methods if jQuery is not available\n        const placeholderLink = typeof $ !== \"undefined\" && $.fn ? $(`a[href=${placeholderText}]`).first()[0] : document.querySelector(`a[href=\"${placeholderText}\"]`);\n        if (!placeholderLink) return; // Placeholder not found, skip\n        const listClone = list.cloneNode(true);\n        if (listClone.children.length > 0) listClone.children[0].remove(); // Remove the 'lookup id' from the list\n        placeholderLink.replaceWith(listClone);\n        // remove the list from the document\n        list.remove();\n    }\n}\n/**\n * Builds a map of list replacements by scanning the document for specially formatted lists.\n * @returns An object where keys are placeholder texts and values are the corresponding list elements.\n */ function $417ebc8475d6fc5d$var$buildListReplacementMap() {\n    const replacements = {};\n    // Use native DOM methods if jQuery is not available\n    const lists = typeof $ !== \"undefined\" && $.fn ? $(\"ul\").toArray() : Array.from(document.querySelectorAll(\"ul\"));\n    for (const list of lists){\n        const firstListItem = list.firstElementChild;\n        if (!firstListItem) continue;\n        const firstItemText = firstListItem.textContent;\n        if (!firstItemText || !firstItemText.startsWith(\"l\")) continue;\n        const listId = Number.parseInt(firstItemText.substring(1));\n        if (Number.isNaN(listId)) continue;\n        replacements[firstItemText] = list;\n    }\n    return replacements;\n}\n/**\n * Replaces list placeholders in tables with actual list content.\n * This function orchestrates the process of finding and replacing placeholders.\n */ function $417ebc8475d6fc5d$var$replaceListPlaceholdersInTables() {\n    const listReplacements = $417ebc8475d6fc5d$var$buildListReplacementMap();\n    $417ebc8475d6fc5d$var$replacePlaceholdersWithLists(listReplacements);\n}\nfunction $417ebc8475d6fc5d$export$38653e1d7f0b5689() {\n    // Prevent multiple initialization using global flag\n    const globalFlag = \"__idvorkin_load_globals_initialized__\";\n    if (window[globalFlag]) return;\n    window[globalFlag] = true;\n    $($417ebc8475d6fc5d$var$add_link_loader);\n    $($417ebc8475d6fc5d$var$keyboard_shortcut_loader);\n    // Replace list placeholders in tables\n    if (typeof $ !== \"undefined\" && $.fn && $.fn.ready) $(document).ready($417ebc8475d6fc5d$var$replaceListPlaceholdersInTables);\n    else if (typeof document !== \"undefined\") {\n        if (document.readyState === \"loading\") document.addEventListener(\"DOMContentLoaded\", $417ebc8475d6fc5d$var$replaceListPlaceholdersInTables);\n        else $417ebc8475d6fc5d$var$replaceListPlaceholdersInTables();\n    }\n    (0, $3900136bb96a6238$export$95771618035e82ed)();\n    // Initialize recent posts if the container exists\n    if (document.getElementById(\"last-modified-posts\")) (0, $75f29f91bc155aaa$export$559328b3f08f1a41)();\n    $(()=>{\n        $417ebc8475d6fc5d$var$generateToc(\"ui-toc\", true);\n        $417ebc8475d6fc5d$var$generateToc(\"ui-toc-affix\", false);\n    });\n    // Initialize header copy links\n    (0, $1e071d2722b0abf5$export$73539f6b6ed07dd3)();\n    // Initialize image zoom functionality\n    (0, $249ffe79f7ab8258$export$8aa1e0ee36490df1)();\n    // Initialize dev info display\n    (0, $9bfe821df35503ab$export$44787119b37c7aab)();\n}\n// Auto-initialize when the script loads\nif (typeof $ !== \"undefined\" && $.fn && $.fn.ready) $(document).ready($417ebc8475d6fc5d$export$38653e1d7f0b5689);\nelse if (typeof document !== \"undefined\") {\n    if (document.readyState === \"loading\") document.addEventListener(\"DOMContentLoaded\", $417ebc8475d6fc5d$export$38653e1d7f0b5689);\n    else $417ebc8475d6fc5d$export$38653e1d7f0b5689();\n}\n\n\n\nfunction $92ca6dc26425dcae$var$html_for_blogpost(post) {\n    const item = $(\"<div/>\");\n    // TODO: HACK: Strip to the right of Week number\n    const title_href = `<h4> <a href='${post.url}'}>${post.title}</a></h4>`;\n    const monthNames = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n    ];\n    item.append(title_href);\n    // HACK: Upsize to larger thumbnail, seems like blogger auto resizes to include a 320 image as well.\n    const thumbnail_url = post.thumbnail.replace(\"s72-c\", \"s320\");\n    const published_date = new Date(post.published);\n    const excerptDisplayText = `\n    <div> ${monthNames[published_date.getMonth()]} ${published_date.getFullYear()} - ${post.excerpt}\n    </div>\n   `;\n    if (post.thumbnail !== \"\") {\n        console.log(post.title);\n        console.log(published_date);\n        item.append(// `<div> <a href='${post.url}'}><img src='${thumbnail_url}'/></div>`\n        `\n      <div style='overflow:auto'>\n\n      <a href='${post.url}'}><img class=\"img-fluid\" style='float:left; margin-right:10px' src='${thumbnail_url}'/></a>\n      ${excerptDisplayText}\n      </div>`);\n    } else item.append(excerptDisplayText);\n    const ret = item.html();\n    return ret;\n}\nfunction $92ca6dc26425dcae$var$get_achievement_posts(imported_posts) {\n    return imported_posts.filter((post)=>post.title.toLowerCase().includes(\"achievement\"));\n}\nfunction $92ca6dc26425dcae$var$get_recent_posts(imported_posts) {\n    return imported_posts.filter((post)=>post.tags.includes(\"family-journal\"));\n}\nfunction $92ca6dc26425dcae$var$ProcessImports(posts) {\n    console.log(\"Processing\", posts.length, \"posts\");\n    if (!posts) {\n        console.log(\"No posts being imported\");\n        return;\n    }\n    //\n    // Import all history\n    const random_div = \"#random-post\";\n    const achievement_div = \"#achievment\";\n    const random_recent = \"#random-recent\";\n    (0, $5c367f1c83ef0920$export$7691c4557333f2d2)(random_div, ()=>$92ca6dc26425dcae$var$html_for_blogpost((0, $5c367f1c83ef0920$export$f6f0b6976f5f23e5)(posts)));\n    // Add a random achievement post\n    (0, $5c367f1c83ef0920$export$7691c4557333f2d2)(achievement_div, ()=>$92ca6dc26425dcae$var$html_for_blogpost((0, $5c367f1c83ef0920$export$f6f0b6976f5f23e5)($92ca6dc26425dcae$var$get_achievement_posts(posts))));\n    (0, $5c367f1c83ef0920$export$7691c4557333f2d2)(random_recent, ()=>$92ca6dc26425dcae$var$html_for_blogpost((0, $5c367f1c83ef0920$export$f6f0b6976f5f23e5)($92ca6dc26425dcae$var$get_recent_posts(posts))));\n}\nfunction $92ca6dc26425dcae$export$42081a69ee292945() {\n    const imported_posts_url = \"/ig66/ig66-export.json\";\n    $.getJSON(imported_posts_url, $92ca6dc26425dcae$var$ProcessImports);\n}\nfunction $92ca6dc26425dcae$export$d5d79470c0eabcc3(role) {\n    // url encode the role title\n    const role_file_name = role.title.replace(/ /g, \"%20\");\n    const voices = [\n        \"igor\",\n        \"ammon\"\n    ];\n    const random_voice = voices[Math.floor(Math.random() * voices.length)];\n    // Yucky - toggle_play_pause is a global function in enjoy2.md - bleh,  so brittle\n    return `\n  <div>\n    <audio id=\"eulogy-player\">\n      <source src=\"https://github.com/idvorkin/blob/raw/master/read_eulogy/${random_voice}/${role_file_name}.mp3\" type=\"audio/mp3\">\n    </audio>\n  <b>${role.title} <a class='lead' onclick=\"toggle_play_pause('eulogy-player')\">\\u{1F508}</a></b> - ${role.summary}\n  </div>\n  `;\n}\nfunction $92ca6dc26425dcae$var$ProcessEulogy(div, roles) {\n    if (!roles) {\n        console.log(\"No roles being imported\");\n        return;\n    }\n    console.log(\"Processing\", roles.roles.length, \"roles\");\n    // Import all history\n    (0, $5c367f1c83ef0920$export$7691c4557333f2d2)(div, ()=>$92ca6dc26425dcae$export$d5d79470c0eabcc3((0, $5c367f1c83ef0920$export$f6f0b6976f5f23e5)(roles.roles)));\n}\nfunction $92ca6dc26425dcae$export$13004ff06099531d(div) {\n    const imported_posts_url = \"/eulogy.json\";\n    $.getJSON(imported_posts_url, (roles)=>$92ca6dc26425dcae$var$ProcessEulogy(div, roles));\n}\n\n\n\n\nclass $6d425df71f5a07e7$export$2eba8ec3a333fdbb {\n    constructor({ name: name, value: value = 25, children: children = [] }){\n        this.name = name;\n        // Keep it interesting\n        this.children = (0, $5c367f1c83ef0920$export$448332262467e042)(children);\n        this.value = value;\n    }\n}\nfunction $6d425df71f5a07e7$export$859810117f914263(categoryToPromptsProvider = $6d425df71f5a07e7$export$f715474a449e7185, renderer = $6d425df71f5a07e7$export$3b78ee04d6f6b650) {\n    const map_category_to_prompts = categoryToPromptsProvider();\n    for (const category of map_category_to_prompts.keys())renderer(category, map_category_to_prompts.get(category));\n}\nfunction $6d425df71f5a07e7$export$3b78ee04d6f6b650(category, prompts_for_category, jQueryProvider = $, randomizerAppender = (0, $5c367f1c83ef0920$export$7691c4557333f2d2)) {\n    //print one of the prompts\n    const get_random_prompt_html = ()=>`<span>${(0, $5c367f1c83ef0920$export$f6f0b6976f5f23e5)(prompts_for_category)}</span><span style=\"float: right; cursor: pointer;\" title=\"Click for another prompt\">\\u{1F504}</span>`;\n    // add a place holder for random div.\n    const new_element = jQueryProvider(`<div class=\"alert alert-primary\" role=\"alert\"/>`);\n    jQueryProvider(category).after(new_element);\n    randomizerAppender(new_element, get_random_prompt_html);\n}\nfunction $6d425df71f5a07e7$export$f715474a449e7185(jQueryProvider = $) {\n    // prompt_categories are H3s with a UL under them, and the li's under there are the prompt.\n    const starting_node = jQueryProvider(\"h3\").first();\n    let current_category = starting_node;\n    let prompts_for_category = [];\n    const map_category_to_prompts = new Map();\n    for(let node = starting_node; node.length !== 0; node = jQueryProvider(node).next()){\n        if (node.prop(\"tagName\") === \"H3\") {\n            // Build prompt map\n            map_category_to_prompts.set(current_category, prompts_for_category);\n            // start processing next categroy\n            current_category = node;\n            prompts_for_category = [];\n            continue;\n        }\n        // in a category, prompts are the children of the first unordered list, so skip\n        // stuff that isn't a list\n        if (node.prop(\"tagName\") !== \"UL\") continue;\n        // we should now be the first list in the category\n        prompts_for_category = Array.from(jQueryProvider(node).find(\"li\")).map((li)=>jQueryProvider(li).text());\n    }\n    map_category_to_prompts.set(current_category, prompts_for_category);\n    return map_category_to_prompts;\n}\nfunction* $6d425df71f5a07e7$export$125d51429649aed5(node) {\n    if (!node) return;\n    const Q = [];\n    Q.push([\n        node,\n        null\n    ]);\n    while(Q.length > 0){\n        const [current, parent] = Q.shift();\n        for (const child of current.children ?? [])Q.push([\n            child,\n            current\n        ]);\n        yield [\n            current,\n            parent\n        ];\n    }\n}\nfunction $6d425df71f5a07e7$export$4fa03e2ac1e21ce8(root) {\n    // Plotly needs a tree to be flattened into a set of lists\n    // ids\n    // labels\n    // parents\n    // values\n    const names_parent_names = Array.from($6d425df71f5a07e7$export$125d51429649aed5(root)).map(([n, p])=>[\n            n.name,\n            p?.name\n        ]);\n    return {\n        ids: names_parent_names.map(([n, p])=>n),\n        labels: names_parent_names.map(([n, p])=>n),\n        parents: names_parent_names.map(([n, p])=>p)\n    };\n}\nfunction $6d425df71f5a07e7$export$e017c509fd729fbc(mapProvider = $6d425df71f5a07e7$export$f715474a449e7185) {\n    const map = mapProvider();\n    const list = Array.from(map.entries()).map(([k, v], _index)=>[\n            k.text(),\n            v\n        ]);\n    return new Map(list);\n}\nfunction $6d425df71f5a07e7$export$390791d65c97e7d4(label, tree_node, map_node_to_prompts) {\n    // Find the label in the tree\n    // recall bread first search returns a parent as well.\n    const result = Array.from($6d425df71f5a07e7$export$125d51429649aed5(tree_node)).find(([current, _parent])=>current.name === label);\n    if (!result) return \"Click in any box or circle\";\n    const [clicked_node, _parent] = result;\n    // Gather all the prompts for the children of the clicked node.\n    const all_prompts = Array.from($6d425df71f5a07e7$export$125d51429649aed5(clicked_node)).map(([node, _parent])=>node) // returns node and parent\n    .filter((node)=>{\n        // Check both with and without the link emoji\n        const hasWithoutEmoji = map_node_to_prompts.has(node.name);\n        const hasWithEmoji = map_node_to_prompts.has(`${node.name}\\u{1F517}`);\n        return hasWithoutEmoji || hasWithEmoji;\n    }).flatMap((node)=>{\n        // Try to get prompts with and without emoji\n        const prompts = map_node_to_prompts.get(node.name) || map_node_to_prompts.get(`${node.name}\\u{1F517}`) || [];\n        return prompts.map((prompt)=>`${node.name}: ${prompt}`);\n    });\n    if (all_prompts.length === 0) return \"Click in any box or circle\";\n    return (0, $5c367f1c83ef0920$export$f6f0b6976f5f23e5)(all_prompts);\n}\nasync function $6d425df71f5a07e7$export$722c014d8e7c7fc6(plot_element_id, random_text_div_id, root, jQueryProvider = $, plotlyProvider = Plotly) {\n    if (!plotlyProvider) {\n        console.error(\"Plotly is not available\");\n        return;\n    }\n    const sunburst_tree_flat = $6d425df71f5a07e7$export$4fa03e2ac1e21ce8(root);\n    const sunburst_data = {\n        type: \"sunburst\",\n        outsidetextfont: {\n            size: 20,\n            color: \"#377eb8\"\n        },\n        // leaf: {opacity: 0.4},\n        hoverinfo: \"none\",\n        marker: {\n            line: {\n                width: 2\n            }\n        },\n        maxdepth: 2,\n        displayModeBar: false\n    };\n    Object.assign(sunburst_data, sunburst_tree_flat);\n    sunburst_data.values = undefined; // remove values to avoid sizing pie slices\n    const sunburst_layout = {\n        margin: {\n            l: 0,\n            r: 0,\n            b: 0,\n            t: 0\n        },\n        sunburstcolorway: [\n            \"#636efa\",\n            \"#ef553b\",\n            \"#00cc96\"\n        ]\n    };\n    const config = {\n        displayModeBar: false\n    };\n    try {\n        await plotlyProvider.newPlot(plot_element_id, [\n            sunburst_data\n        ], sunburst_layout, config);\n        const set_random_prompt_text = (text)=>{\n            jQueryProvider(`#${random_text_div_id}`).text(text);\n        };\n        // Set click handler for div\n        jQueryProvider(`#${random_text_div_id}`).first().click(()=>{\n            const label = jQueryProvider(\"#sunburst text:first\").text(); // Hack should use an API to find center text\n            const prompt = $6d425df71f5a07e7$export$390791d65c97e7d4(label, root, $6d425df71f5a07e7$export$e017c509fd729fbc());\n            set_random_prompt_text(prompt);\n        });\n        // Attach the sunburst click event handler\n        const plotElement = document.getElementById(plot_element_id);\n        if (plotElement && typeof plotElement.on === \"function\") plotElement.on(\"plotly_click\", (eventData)=>{\n            if (eventData?.points?.[0]) {\n                const label = eventData.points[0].label;\n                const prompt = $6d425df71f5a07e7$export$390791d65c97e7d4(label, root, $6d425df71f5a07e7$export$e017c509fd729fbc());\n                set_random_prompt_text(prompt);\n            }\n        });\n        return plotElement;\n    } catch (error) {\n        console.error(\"Failed to create sunburst plot:\", error);\n        return null;\n    }\n}\nfunction $6d425df71f5a07e7$export$42c977aff6036edf(rootName = \"Root\", containerSelector = null, jQueryProvider = $) {\n    const h2Elements = containerSelector ? jQueryProvider(containerSelector).find(\"h2\") : jQueryProvider(\"h2\");\n    const rootChildren = [];\n    h2Elements.each((_index, h2Element)=>{\n        const h2 = jQueryProvider(h2Element);\n        const h2Text = h2.text().trim();\n        // Skip if empty\n        if (!h2Text) return;\n        const h2Children = [];\n        let currentElement = h2.next();\n        // Process elements until we hit another H2 or run out of elements\n        while(currentElement.length > 0 && currentElement.prop(\"tagName\") !== \"H2\"){\n            if (currentElement.prop(\"tagName\") === \"H3\") {\n                const h3Text = currentElement.text().trim();\n                if (h3Text) // Add H3 as a node regardless of whether it has a UL after it\n                h2Children.push(new $6d425df71f5a07e7$export$2eba8ec3a333fdbb({\n                    name: h3Text\n                }));\n            }\n            currentElement = currentElement.next();\n        }\n        if (h2Children.length > 0) rootChildren.push(new $6d425df71f5a07e7$export$2eba8ec3a333fdbb({\n            name: h2Text,\n            children: h2Children\n        }));\n    });\n    return new $6d425df71f5a07e7$export$2eba8ec3a333fdbb({\n        name: rootName,\n        children: rootChildren\n    });\n}\nasync function $6d425df71f5a07e7$export$2c4d77f7a6e2db05(plot_element_id, random_text_div_id, rootName = \"Root\", containerSelector = null, jQueryProvider = $, plotlyProvider = Plotly) {\n    const tree = $6d425df71f5a07e7$export$42c977aff6036edf(rootName, containerSelector, jQueryProvider);\n    return $6d425df71f5a07e7$export$722c014d8e7c7fc6(plot_element_id, random_text_div_id, tree, jQueryProvider, plotlyProvider);\n}\nconst $6d425df71f5a07e7$export$66234fbc0455149c = {\n    breadth_first_walk: $6d425df71f5a07e7$export$125d51429649aed5,\n    shuffle: $5c367f1c83ef0920$export$448332262467e042\n};\n\n\nclass $9f283bd0ad425971$export$96d8ac85dbc3b083 {\n    /**\n   * Gets the tree structure for Seven Habits visualization\n   * @returns {TreeNode} The root node of the Seven Habits tree\n   */ get_tree() {\n        const root = new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n            name: \"7H \",\n            children: [\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"\"\n                }),\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Be Proactive\"\n                }),\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Begin with the end in mind\"\n                }),\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"First things First\"\n                }),\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Think Win/Win\"\n                }),\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"First Understand\"\n                }),\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Synergize\"\n                }),\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Sharpen the Saw\"\n                })\n            ]\n        });\n        return root;\n    }\n}\nclass $9f283bd0ad425971$export$9add44f13af82b94 {\n    /**\n   * Gets the tree structure for Things I Enjoy visualization\n   * @returns {TreeNode} The root node of the Things I Enjoy tree\n   */ get_tree() {\n        const health = new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n            name: \"Health\",\n            children: [\n                {\n                    name: \"Physical\"\n                },\n                {\n                    name: \"Emotional\"\n                },\n                {\n                    name: \"Cognative\"\n                }\n            ],\n            value: 31\n        });\n        const magic = new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n            name: \"Magic\",\n            children: [\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Card Magic\"\n                }),\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Coin Magic\"\n                }),\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Band Magic\"\n                })\n            ]\n        });\n        const hobbies = new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n            name: \"Hobbies\",\n            children: [\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Biking\"\n                }),\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Tech\"\n                }),\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Juggling\"\n                })\n            ]\n        });\n        const relationships = new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n            name: \"Relationships\",\n            children: [\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Zach\"\n                }),\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Amelia\"\n                }),\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Tori\"\n                }),\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Friends\"\n                })\n            ]\n        });\n        const joy = new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n            name: \"Joy\",\n            children: [\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Balloons\"\n                }),\n                new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n                    name: \"Joy to Others\"\n                })\n            ]\n        });\n        return new (0, $6d425df71f5a07e7$export$2eba8ec3a333fdbb)({\n            name: \"Invest in\",\n            children: [\n                health,\n                magic,\n                hobbies,\n                relationships,\n                joy\n            ]\n        });\n    }\n}\nfunction $9f283bd0ad425971$export$2a7b436ba2130b9d({ url: url, title: title, description: description }) {\n    // TODO: HACK: Strip to the right of Week number\n    const title_href = `<a href='${url}'}>${title}</a>`;\n    // random id for audio player\n    const id = `audio_player_${Math.floor(Math.random() * 10000000000)}`;\n    // filename is URL with '/' turned to '_'\n    const filename = url.replace(/\\//g, \"_\");\n    return `\n    <div>\n        <audio id='${id}'>\n          <source src=\"https://github.com/idvorkin/blob/raw/master/url_info_voices/igor/${filename}.mp3\" type=\"audio/mp3\">\n        </audio>\n      ${title_href}:  <b><a class='lead' onclick=\"toggle_play_pause('${id}')\">\\u{1F508}</a></b> ${description}\n    </div>\n  `;\n}\nasync function $9f283bd0ad425971$export$43b8cbfc567b2b3c(linkInfoProvider = (0, $5c367f1c83ef0920$export$46c928bda6aa7b36), randomSelector = (0, $5c367f1c83ef0920$export$f6f0b6976f5f23e5)) {\n    try {\n        const all_url_info = await linkInfoProvider();\n        //  Yuk, find a clearere way to do this\n        const all_pages = Object.entries(all_url_info) // returns a list of [url, info]\n        .map((e)=>e[1]);\n        const random_post = randomSelector(all_pages);\n        return $9f283bd0ad425971$export$2a7b436ba2130b9d({\n            url: random_post.url,\n            title: random_post.title,\n            description: random_post.description\n        });\n    } catch (error) {\n        console.error(\"Error generating random post HTML:\", error);\n        return \"<div>Could not load random post</div>\";\n    }\n}\nfunction $9f283bd0ad425971$export$a05fecdd139cc0d6(element1 = \"#e1\", element2 = \"#e2\", element3 = \"#e3\", eulogyLoader = (0, $92ca6dc26425dcae$export$13004ff06099531d)) {\n    try {\n        eulogyLoader(element1);\n        eulogyLoader(element2);\n        eulogyLoader(element3);\n    } catch (error) {\n        console.error(\"Error loading random eulogy:\", error);\n    }\n}\nfunction $9f283bd0ad425971$export$ed4ccdb0ea359d16(sunburstAdder = (0, $6d425df71f5a07e7$export$722c014d8e7c7fc6), promptsAdder = (0, $6d425df71f5a07e7$export$859810117f914263), postsAdder = (0, $92ca6dc26425dcae$export$42081a69ee292945), eulogyAdder = (0, $92ca6dc26425dcae$export$13004ff06099531d), randomizerAppender = (0, $5c367f1c83ef0920$export$7691c4557333f2d2)) {\n    try {\n        sunburstAdder(\"sunburst\", \"sunburst_text\", new $9f283bd0ad425971$export$9add44f13af82b94().get_tree());\n        promptsAdder();\n        postsAdder(); // has a random achievement post\n        eulogyAdder(\"#random-eulogy-role\");\n        randomizerAppender(\"#random-blog-posts\", async ()=>await $9f283bd0ad425971$export$43b8cbfc567b2b3c());\n    } catch (error) {\n        console.error(\"\\u274C Error loading enjoy page:\", error);\n    }\n}\nfunction $9f283bd0ad425971$export$690b8256aeac9ddf(sunburstAdder = (0, $6d425df71f5a07e7$export$722c014d8e7c7fc6), promptsAdder = (0, $6d425df71f5a07e7$export$859810117f914263)) {\n    try {\n        sunburstAdder(\"sunburst\", \"sunburst_text\", new $9f283bd0ad425971$export$96d8ac85dbc3b083().get_tree());\n        promptsAdder();\n    } catch (error) {\n        console.error(\"Error loading 7 habits page:\", error);\n    }\n}\nfunction $9f283bd0ad425971$export$5971d3574f6a5694(postsAdder = (0, $92ca6dc26425dcae$export$42081a69ee292945)) {\n    try {\n        postsAdder();\n    } catch (error) {\n        console.error(\"Error loading IG66 page:\", error);\n    }\n}\nfunction $9f283bd0ad425971$export$be5467d8e644e939(restChartMaker = $9f283bd0ad425971$export$53e7a29c57fc33d2, workChartMaker = $9f283bd0ad425971$export$6bb9c0a936a9f448, radarMapMaker = $9f283bd0ad425971$export$8113f0fb50ea4947) {\n    try {\n        restChartMaker(\"balance-heatmap-rest\");\n        workChartMaker(\"balance-heatmap-work\");\n        radarMapMaker(\"balance-radar-map-ideal\");\n    } catch (error) {\n        console.error(\"Error loading balance page:\", error);\n    }\n}\nconst $9f283bd0ad425971$export$16352d1b10c5eb38 = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n];\nconst $9f283bd0ad425971$export$90d9fe9646abdcf4 = 20;\nconst $9f283bd0ad425971$export$785c348110487d52 = 100;\nconst $9f283bd0ad425971$export$6b13b69749622324 = \"#00BF00\";\nasync function $9f283bd0ad425971$export$8113f0fb50ea4947(div, plotly) {\n    const data = [\n        {\n            type: \"scatterpolar\",\n            r: [\n                8,\n                8,\n                8,\n                5,\n                8,\n                8,\n                8\n            ],\n            theta: [\n                \"Work\",\n                \"Tech\",\n                \"Health\",\n                \"Hobbies\",\n                \"Relationships\",\n                \"Magic\",\n                \"Work\"\n            ],\n            name: \"2020 Goal\",\n            fill: \"toself\"\n        },\n        {\n            type: \"scatterpolar\",\n            r: [\n                7,\n                7,\n                5,\n                5,\n                5,\n                9,\n                7\n            ],\n            theta: [\n                \"Work\",\n                \"Tech\",\n                \"Health\",\n                \"Hobbies\",\n                \"Relationships\",\n                \"Magic\",\n                \"Work\"\n            ],\n            name: \"2020 Actual\",\n            fill: \"toself\"\n        }\n    ];\n    const layout = {\n        polar: {\n            radialaxis: {\n                visible: true,\n                range: [\n                    0,\n                    10\n                ]\n            }\n        },\n        showlegend: true\n    };\n    const config = {\n        displayModeBar: false\n    };\n    if (typeof plotly !== \"undefined\" && plotly) try {\n        await plotly.newPlot(div, data, layout, config);\n    } catch (error) {\n        console.error(\"Error creating radar map:\", error);\n    }\n    else console.warn(\"Plotly is not defined, skipping chart rendering\");\n}\nasync function $9f283bd0ad425971$export$6bb9c0a936a9f448(div, plotly) {\n    const roles = [\n        \"Tech\",\n        \"Work\"\n    ];\n    const layout = {\n        height: $9f283bd0ad425971$export$90d9fe9646abdcf4 * roles.length + $9f283bd0ad425971$export$785c348110487d52,\n        margin: {\n            t: 5\n        },\n        pad: 0\n    };\n    const color_scale = [\n        [\n            0.0,\n            \"darkblue\"\n        ],\n        [\n            0.4,\n            \"blue\"\n        ],\n        [\n            0.5,\n            $9f283bd0ad425971$export$6b13b69749622324\n        ],\n        [\n            0.6,\n            \"darkred\"\n        ],\n        [\n            1.0,\n            \"red\"\n        ]\n    ];\n    const gap_desire_over_time = [\n        [\n            7,\n            4,\n            7,\n            8,\n            2,\n            4,\n            2,\n            3,\n            2,\n            8\n        ],\n        [\n            10,\n            7,\n            5,\n            5,\n            3,\n            5,\n            6,\n            6,\n            7,\n            5\n        ]\n    ];\n    const data = [\n        {\n            colorscale: color_scale,\n            zmin: 0,\n            zmax: 10,\n            x: $9f283bd0ad425971$export$16352d1b10c5eb38.slice(2, 13),\n            y: roles,\n            z: gap_desire_over_time,\n            type: \"heatmap\"\n        }\n    ];\n    const config = {\n        displayModeBar: false\n    };\n    if (typeof plotly !== \"undefined\" && plotly) try {\n        await plotly.newPlot(div, data, layout, config);\n    } catch (error) {\n        console.error(\"Error creating work balance chart:\", error);\n    }\n    else console.warn(\"Plotly is not defined, skipping chart rendering\");\n}\nasync function $9f283bd0ad425971$export$53e7a29c57fc33d2(div, plotly) {\n    const roles = [\n        \"Health\",\n        \"Hobbies\",\n        \"Family\",\n        \"Magic\"\n    ];\n    const gap_desire_over_time = [\n        // J, F, M, A, M, J, J, A, S, O, N, D\n        [\n            4,\n            4,\n            3,\n            4,\n            5,\n            3,\n            2,\n            2,\n            3,\n            2\n        ],\n        [\n            4,\n            4,\n            3,\n            4,\n            5,\n            4,\n            4,\n            2,\n            4,\n            5\n        ],\n        [\n            2,\n            3,\n            3,\n            4,\n            1,\n            5,\n            4,\n            3,\n            2,\n            4\n        ],\n        [\n            5,\n            5,\n            5,\n            4,\n            5,\n            5,\n            4,\n            5,\n            4,\n            5\n        ]\n    ];\n    const color_scale = [\n        [\n            0.0,\n            \"red\"\n        ],\n        [\n            0.4,\n            \"darkred\"\n        ],\n        [\n            0.5,\n            $9f283bd0ad425971$export$6b13b69749622324\n        ],\n        [\n            0.6,\n            \"blue\"\n        ],\n        [\n            1.0,\n            \"darkblue\"\n        ]\n    ];\n    const data = [\n        {\n            colorscale: color_scale,\n            zmin: 0,\n            zmax: 10,\n            x: $9f283bd0ad425971$export$16352d1b10c5eb38.slice(2, 13),\n            y: roles.reverse(),\n            z: gap_desire_over_time.reverse(),\n            type: \"heatmap\"\n        }\n    ];\n    const config = {\n        displayModeBar: false\n    };\n    const layout = {\n        height: $9f283bd0ad425971$export$90d9fe9646abdcf4 * roles.length + $9f283bd0ad425971$export$785c348110487d52,\n        margin: {\n            t: 5\n        },\n        pad: 0\n    };\n    if (typeof plotly !== \"undefined\" && plotly) try {\n        await plotly.newPlot(div, data, layout, config);\n    } catch (error) {\n        console.error(\"Error creating rest time chart:\", error);\n    }\n    else console.warn(\"Plotly is not defined, skipping chart rendering\");\n}\nfunction $9f283bd0ad425971$export$c0799a30028cccaa(rootName = \"Topics\", sunburstAdder = (0, $6d425df71f5a07e7$export$2c4d77f7a6e2db05), promptsAdder = (0, $6d425df71f5a07e7$export$859810117f914263), postsAdder = (0, $92ca6dc26425dcae$export$42081a69ee292945), eulogyAdder = (0, $92ca6dc26425dcae$export$13004ff06099531d), randomizerAppender = (0, $5c367f1c83ef0920$export$7691c4557333f2d2)) {\n    try {\n        sunburstAdder(\"sunburst\", \"sunburst_text\", rootName);\n        promptsAdder();\n        postsAdder(); // has a random achievement post\n        eulogyAdder(\"#random-eulogy-role\");\n        randomizerAppender(\"#random-blog-posts\", async ()=>await $9f283bd0ad425971$export$43b8cbfc567b2b3c());\n    } catch (error) {\n        console.error(\"Error loading auto-generated sunburst:\", error);\n    }\n}\nconst $9f283bd0ad425971$export$66234fbc0455149c = {\n    SevenHabits: $9f283bd0ad425971$export$96d8ac85dbc3b083,\n    ThingsIEnjoy: $9f283bd0ad425971$export$9add44f13af82b94\n};\n\n\n\n\n// Import dependencies\n\n// For autocomplete, safely access the window properties\n// This makes it more testable\nlet $bd9399c7e2744abd$var$autocomplete;\nlet $bd9399c7e2744abd$var$getAlgoliaResults;\nif (typeof window !== \"undefined\" && window[\"@algolia/autocomplete-js\"]) {\n    const algoliaAutocomplete = window[\"@algolia/autocomplete-js\"];\n    $bd9399c7e2744abd$var$autocomplete = algoliaAutocomplete.autocomplete;\n    $bd9399c7e2744abd$var$getAlgoliaResults = algoliaAutocomplete.getAlgoliaResults;\n}\nconst $bd9399c7e2744abd$export$cb187c7ee0638abe = \"Search Igor's Musings ...\";\nfunction $bd9399c7e2744abd$export$7a5418d73bdac342(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[[\\]\\\\]/g, \"\\\\$&\");\n    const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`);\n    const results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return \"\";\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\nfunction $bd9399c7e2744abd$export$b91bb4a4add1be39(hit) {\n    // https://www.algolia.com/doc/api-reference/widgets/infinite-hits/js/\n    try {\n        let url = hit.url;\n        if (hit.anchor) url += `#${hit.anchor}`;\n        const highlighted = hit._highlightResult;\n        if (!highlighted) console.log(\"No Highlight\", hit);\n        const title = highlighted.title.value;\n        const content = highlighted?.content?.value ?? \"\";\n        // <section class=\"notepad-post-excerpt\"><p>${content}</p></section>\n        const string_rep = `\n           <span onClick=\"window.location='${url}';\">\n              <b> <a href=\"${url}\">${title}</a></b> <span>${content}</span>\n           </span>\n        `;\n        return string_rep;\n    } catch (err) {\n        console.log(\"Error in hitTemplate\", err, hit);\n    }\n    return \"invalid HTML\";\n}\nfunction $bd9399c7e2744abd$export$4b6f1157302970e2(appid, search_api_key, index_name, initial_query) {\n    // Instanciating InstantSearch.js with Algolia credentials\n    const searchClient = algoliasearch(appid, search_api_key);\n    const search = instantsearch({\n        searchClient: searchClient,\n        indexName: index_name,\n        searchParameters: {\n            query: initial_query\n        }\n    });\n    // Adding searchbar and results widgets\n    search.addWidget(// @ts-ignore:TS2339\n    instantsearch.widgets.searchBox({\n        container: \"#search-box\",\n        placeholder: $bd9399c7e2744abd$export$cb187c7ee0638abe,\n        poweredBy: true,\n        showSubmit: false,\n        showReset: false,\n        showLoadingIndicator: false\n    }));\n    search.addWidget(// @ts-ignore:TS2339\n    instantsearch.widgets.infiniteHits({\n        container: \"#search-hits\",\n        templates: {\n            item: $bd9399c7e2744abd$export$b91bb4a4add1be39\n        },\n        item ({ item: item }) {\n            return `Result: ${item.name}`;\n        }\n    }));\n    return search;\n}\nfunction $bd9399c7e2744abd$export$3c34e917c102c2ba({ item: item, components: components, createElement: createElement, fragments: fragments }) {\n    console.log(item);\n    return components.Highlight({\n        hit: item\n    });\n}\nfunction $bd9399c7e2744abd$export$63ea92b1b8a7359b({ item: item, createElement: createElement }) {\n    // https://www.algolia.com/doc/api-reference/widgets/infinite-hits/js/\n    return createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n            __html: $bd9399c7e2744abd$export$b91bb4a4add1be39(item)\n        }\n    });\n}\nasync function $bd9399c7e2744abd$export$303f4e90fb92c0e8() {\n    const all_url_info = await (0, $5c367f1c83ef0920$export$46c928bda6aa7b36)();\n    //  Yuk, find a clearere way to do this\n    const all_pages = Object.entries(all_url_info) // returns a list of [url, info]\n    .map((e)=>e[1]);\n    const random_post = (0, $5c367f1c83ef0920$export$f6f0b6976f5f23e5)(all_pages);\n    const ret = {\n        title: random_post.title,\n        url: random_post.url,\n        description: random_post.description\n    };\n    return ret;\n}\nasync function $bd9399c7e2744abd$export$92149fdef057b636(count = 4) {\n    try {\n        const all_url_info = await (0, $5c367f1c83ef0920$export$46c928bda6aa7b36)();\n        // Convert to array of pages for easier processing\n        const pages = Object.entries(all_url_info).map(([url, metadata])=>({\n                url: url,\n                title: metadata.title || url,\n                description: metadata.description || \"\",\n                doc_size: metadata.doc_size || 0,\n                last_modified: metadata.last_modified || \"\"\n            }));\n        // Filter out pages that are likely redirects (these have empty descriptions and titles)\n        const realPages = pages.filter((page)=>page.description && page.description.trim() !== \"\" && page.title && page.title.trim() !== \"\");\n        // Sort by last_modified date (newest first)\n        const sortedPages = realPages.sort((a, b)=>{\n            if (a.last_modified && b.last_modified) return new Date(b.last_modified).getTime() - new Date(a.last_modified).getTime();\n            // Fallback to doc_size if last_modified is not available\n            return b.doc_size - a.doc_size;\n        });\n        // Take the top N most recent posts\n        return sortedPages.slice(0, count);\n    } catch (error) {\n        console.error(\"\\u274C Error loading recent posts:\", error);\n        return [];\n    }\n}\nasync function $bd9399c7e2744abd$export$915afb5774d57588(count = 3) {\n    return {\n        sourceId: \"random_posts\",\n        async getItems () {\n            const sized_array = new Array(count).join(\"_\").split(\"_\");\n            const random_posts = await Promise.all(sized_array.map(async (e)=>$bd9399c7e2744abd$export$303f4e90fb92c0e8()));\n            return random_posts;\n        },\n        getItemUrl ({ item: item }) {\n            const ret = item.url;\n            return ret;\n        },\n        templates: {\n            item ({ item: item, createElement: createElement }) {\n                return createElement(\"div\", {\n                    dangerouslySetInnerHTML: {\n                        __html: `\n            <span onClick=\"window.location='${item.url}';\" >\n           <b> <a href=\"${item.url}\">${item.title}</a></b>\n            <span>${item.description}</span>\n            </span>\n            `\n                    }\n                });\n            },\n            header ({ createElement: createElement }) {\n                return createElement(\"div\", {\n                    dangerouslySetInnerHTML: {\n                        __html: \"<i style='color:grey'>Random posts ...</i>\"\n                    }\n                });\n            }\n        }\n    };\n}\nasync function $bd9399c7e2744abd$export$52e708d1ac52eeac(count = 4) {\n    return {\n        sourceId: \"recent_posts\",\n        async getItems () {\n            const recentPosts = await $bd9399c7e2744abd$export$92149fdef057b636(count);\n            return recentPosts;\n        },\n        getItemUrl ({ item: item }) {\n            const ret = item.url;\n            return ret;\n        },\n        templates: {\n            item ({ item: item, createElement: createElement }) {\n                return createElement(\"div\", {\n                    dangerouslySetInnerHTML: {\n                        __html: `\n            <span onClick=\"window.location='${item.url}';\" >\n           <b> <a href=\"${item.url}\">${item.title}</a></b>\n            <span>${item.description}</span>\n            </span>\n            `\n                    }\n                });\n            },\n            header ({ createElement: createElement }) {\n                return createElement(\"div\", {\n                    dangerouslySetInnerHTML: {\n                        __html: \"<i style='color:grey'>Recent posts ...</i>\"\n                    }\n                });\n            }\n        }\n    };\n}\nfunction $bd9399c7e2744abd$export$50f73cef15dc66d3(searchClient, index_name, query, hitsPerPage = 3, includeFamilyJournal = false) {\n    // By default don't include family journal.\n    let filter = \"NOT tags:family-journal\";\n    if (includeFamilyJournal) filter = \"\";\n    return {\n        sourceId: \"featured_posts\",\n        getItems () {\n            if (!$bd9399c7e2744abd$var$getAlgoliaResults) {\n                console.error(\"getAlgoliaResults is not defined\");\n                return [];\n            }\n            return $bd9399c7e2744abd$var$getAlgoliaResults({\n                searchClient: searchClient,\n                queries: [\n                    {\n                        indexName: index_name,\n                        query: query,\n                        filters: filter,\n                        params: {\n                            hitsPerPage: hitsPerPage,\n                            highlightPreTag: \"<span style='background:yellow'>\",\n                            highlightPostTag: \"</span>\"\n                        }\n                    }\n                ]\n            });\n        },\n        templates: {\n            item: $bd9399c7e2744abd$export$63ea92b1b8a7359b,\n            header ({ createElement: createElement }) {\n                return createElement(\"div\", {\n                    dangerouslySetInnerHTML: {\n                        __html: \"<i style='color:grey'>Featured posts ...</i>\"\n                    }\n                });\n            }\n        },\n        getItemUrl ({ item: item }) {\n            let url = item.url;\n            if (item.anchor) url += `#${item.anchor}`;\n            const ret = url;\n            return ret;\n        }\n    };\n}\nasync function $bd9399c7e2744abd$export$b960629124c745df(appid, search_api_key, index_name, autocomplete_id, includeFamilyJournal, featuredCount = 3, recentCount = 4, randomCount = 3) {\n    if (!$bd9399c7e2744abd$var$autocomplete) {\n        console.error(\"Autocomplete is not defined\");\n        return;\n    }\n    const searchClient = algoliasearch(appid, search_api_key);\n    const randomSearchResults = await $bd9399c7e2744abd$export$915afb5774d57588(randomCount);\n    const recentSearchResults = await $bd9399c7e2744abd$export$52e708d1ac52eeac(recentCount);\n    function GetSources({ query: query }) {\n        const isEmptySearch = query.length === 0;\n        if (isEmptySearch) // Searching for a space gives nice default results, so when no results search for that ...\n        query = \" \";\n        // Get featured posts (from Algolia search)\n        const featuredPosts = $bd9399c7e2744abd$export$50f73cef15dc66d3(searchClient, index_name, query, isEmptySearch ? featuredCount : 10, includeFamilyJournal);\n        // For empty search, show featured, recent, and random posts\n        // For actual search, just show search results\n        if (isEmptySearch) return [\n            featuredPosts,\n            recentSearchResults,\n            randomSearchResults\n        ];\n        return [\n            featuredPosts\n        ];\n    }\n    // Make sure we have the element\n    // autocomplete_id can be either '#id' or just 'id'\n    const elementId = autocomplete_id.startsWith(\"#\") ? autocomplete_id : `#${autocomplete_id}`;\n    if ($(elementId).length === 0) {\n        console.log(\"No autocomplete element found\", \"autocomplete_id\", autocomplete_id);\n        return;\n    }\n    // Setup Auto Complete Stuff\n    return $bd9399c7e2744abd$var$autocomplete({\n        container: elementId,\n        placeholder: $bd9399c7e2744abd$export$cb187c7ee0638abe,\n        getSources: GetSources,\n        debug: false,\n        openOnFocus: true,\n        detachedMediaQuery: \"\"\n    });\n}\n\n\n\n// Main initialization\n$(document).ready(()=>{\n    // Initialize main functionality\n    const tocExpand = true;\n    // Call the global initialization function from main.ts\n    (0, $5c367f1c83ef0920$export$260e5c0943f31606)((0, $417ebc8475d6fc5d$export$38653e1d7f0b5689));\n    // Setup event handlers\n    const setupKeyboardShortcuts = ()=>{\n        if (typeof Mousetrap !== \"undefined\") Mousetrap.bind(\"s\", ()=>focusSearch());\n    };\n    const focusSearch = ()=>{\n        const searchInput = $(\"#search-box\");\n        if (searchInput.length > 0) searchInput.focus();\n    };\n    // Initialize components\n    setupKeyboardShortcuts();\n    $9f9b9944cd5d5def$var$initializeTOC();\n    $9f9b9944cd5d5def$var$initializeSearch();\n    // Example usage of shared utilities\n    const items = [\n        \"item1\",\n        \"item2\",\n        \"item3\"\n    ];\n    console.log(\"Random item:\", (0, $5c367f1c83ef0920$export$f6f0b6976f5f23e5)(items));\n    console.log(\"Shuffled items:\", (0, $5c367f1c83ef0920$export$448332262467e042)([\n        ...items\n    ]));\n    // Initialize link loading\n    (0, $5c367f1c83ef0920$export$46c928bda6aa7b36)().then((links)=>{\n        console.log(\"Links loaded, count:\", Object.keys(links).length);\n    });\n    // Log successful initialization\n    console.log(\"Blog JavaScript initialized\");\n});\n// Initialize TOC\nfunction $9f9b9944cd5d5def$var$initializeTOC() {\n    const tocElement = $(\"#toc-content\");\n    if (tocElement.length > 0) // TOC initialization code\n    console.log(\"TOC initialized\");\n}\n// Initialize search\nfunction $9f9b9944cd5d5def$var$initializeSearch() {\n    const searchElement = $(\"#search-box\");\n    if (searchElement.length > 0) // Search initialization code\n    console.log(\"Search initialized\");\n}\n\n\nexport {$5c367f1c83ef0920$export$f6f0b6976f5f23e5 as random_from_list, $5c367f1c83ef0920$export$448332262467e042 as shuffle, $5c367f1c83ef0920$export$7691c4557333f2d2 as append_randomizer_div, $5c367f1c83ef0920$export$260e5c0943f31606 as defer, $5c367f1c83ef0920$export$46c928bda6aa7b36 as get_link_info, $5c367f1c83ef0920$export$5190f81690a07722 as get_random_page_url, $417ebc8475d6fc5d$export$38653e1d7f0b5689 as load_globals, $5c367f1c83ef0920$export$fc303307c4ed1d41 as MakeBackLinkHTML, $bd9399c7e2744abd$export$b960629124c745df as CreateAutoComplete, $bd9399c7e2744abd$export$303f4e90fb92c0e8 as get_random_post, $bd9399c7e2744abd$export$92149fdef057b636 as get_recent_posts, $75f29f91bc155aaa$export$559328b3f08f1a41 as initRecentAllPosts, $6d425df71f5a07e7$export$859810117f914263 as add_random_prompts, $6d425df71f5a07e7$export$722c014d8e7c7fc6 as add_sunburst, $6d425df71f5a07e7$export$2c4d77f7a6e2db05 as add_sunburst_from_dom, $6d425df71f5a07e7$export$2eba8ec3a333fdbb as TreeNode, $9f283bd0ad425971$export$ed4ccdb0ea359d16 as load_enjoy2, $9f283bd0ad425971$export$690b8256aeac9ddf as load_7_habits, $9f283bd0ad425971$export$c0799a30028cccaa as load_auto_sunburst, $9f283bd0ad425971$export$2a7b436ba2130b9d as makePostPreviewHTML, $9f283bd0ad425971$export$43b8cbfc567b2b3c as make_random_post_html, $9f283bd0ad425971$export$5971d3574f6a5694 as load_ig66, $9f283bd0ad425971$export$be5467d8e644e939 as load_balance, $9f283bd0ad425971$export$a05fecdd139cc0d6 as load_random_eulogy};\n//# sourceMappingURL=index.js.map\n","/**\n * Main JavaScript Entry Point\n *\n * This file serves as the single entry point for all JavaScript functionality\n * on the blog. It imports and initializes all necessary modules.\n */\n\n// Import main functionality\nimport { load_globals } from \"./main\";\n// Import page-loader functionality\nimport {\n  load_7_habits,\n  load_auto_sunburst,\n  load_balance,\n  load_enjoy2,\n  load_ig66,\n  load_random_eulogy,\n  makePostPreviewHTML,\n  make_random_post_html,\n} from \"./page-loader\";\n// Import random-prompter functionality\nimport { TreeNode, add_random_prompts, add_sunburst, add_sunburst_from_dom } from \"./random-prompter\";\n\n// Import recent posts functionality\nimport { initRecentAllPosts } from \"./recent\";\n// Import search functionality\nimport { CreateAutoComplete, get_random_post, get_recent_posts } from \"./search\";\n// Import shared utilities\nimport {\n  type IURLInfo,\n  type IURLInfoMap,\n  MakeBackLinkHTML,\n  append_randomizer_div,\n  defer,\n  get_link_info,\n  get_random_page_url,\n  random_from_list,\n  shuffle,\n} from \"./shared\";\n\n// Declare global variables from external libraries\ndeclare let $: {\n  (\n    selector: string,\n  ): {\n    ready: (fn: () => void) => void;\n    length: number;\n    focus: () => void;\n  };\n  (\n    document: Document,\n  ): {\n    ready: (fn: () => void) => void;\n  };\n};\ndeclare let Mousetrap: {\n  bind: (key: string, callback: () => void) => void;\n};\n\n// Main initialization\n$(document).ready(() => {\n  // Initialize main functionality\n  const tocExpand = true;\n\n  // Call the global initialization function from main.ts\n  defer(load_globals);\n\n  // Setup event handlers\n  const setupKeyboardShortcuts = () => {\n    if (typeof Mousetrap !== \"undefined\") {\n      Mousetrap.bind(\"s\", () => focusSearch());\n      // Add other keyboard shortcuts as needed\n    }\n  };\n\n  const focusSearch = () => {\n    const searchInput = $(\"#search-box\");\n    if (searchInput.length > 0) {\n      searchInput.focus();\n    }\n  };\n\n  // Initialize components\n  setupKeyboardShortcuts();\n  initializeTOC();\n  initializeSearch();\n\n  // Example usage of shared utilities\n  const items = [\"item1\", \"item2\", \"item3\"];\n  console.log(\"Random item:\", random_from_list(items));\n  console.log(\"Shuffled items:\", shuffle([...items]));\n\n  // Initialize link loading\n  get_link_info().then((links) => {\n    console.log(\"Links loaded, count:\", Object.keys(links).length);\n  });\n\n  // Log successful initialization\n  console.log(\"Blog JavaScript initialized\");\n});\n\n// Initialize TOC\nfunction initializeTOC() {\n  const tocElement = $(\"#toc-content\");\n  if (tocElement.length > 0) {\n    // TOC initialization code\n    console.log(\"TOC initialized\");\n  }\n}\n\n// Initialize search\nfunction initializeSearch() {\n  const searchElement = $(\"#search-box\");\n  if (searchElement.length > 0) {\n    // Search initialization code\n    console.log(\"Search initialized\");\n  }\n}\n\n// Export shared utilities and main functions for potential direct use\nexport {\n  random_from_list,\n  shuffle,\n  append_randomizer_div,\n  defer,\n  get_link_info,\n  get_random_page_url,\n  // Export the interface types\n  type IURLInfo,\n  type IURLInfoMap,\n  load_globals,\n  MakeBackLinkHTML,\n  CreateAutoComplete,\n  get_random_post,\n  get_recent_posts,\n  // Recent posts export\n  initRecentAllPosts,\n  // Random prompter exports\n  add_random_prompts,\n  add_sunburst,\n  add_sunburst_from_dom,\n  TreeNode,\n  // Page loader exports\n  load_enjoy2,\n  load_7_habits,\n  load_auto_sunburst,\n  makePostPreviewHTML,\n  make_random_post_html,\n  load_ig66,\n  load_balance,\n  load_random_eulogy,\n};\n","// Import shared functions\n\nimport { initRecentAllPosts } from \"./recent\";\nimport { initRecentPosts } from \"./recent-posts\";\nimport {\n  type IURLInfo,\n  type IURLInfoMap,\n  MakeBackLinkHTML,\n  append_randomizer_div,\n  get_link_info,\n  random_from_list,\n  shuffle,\n} from \"./shared\";\n// Import graph but we'll only initialize it from the graph.html page\nimport \"./graph\";\nimport { initDevInfo } from \"./dev-info\";\nimport { enableHeaderCopyLinks } from \"./header-copy-link\";\nimport { enableImageZoom } from \"./image-zoom\";\n\n// Type declarations for external libraries\ndeclare global {\n  interface Window {\n    Mousetrap(): MousetrapStatic;\n  }\n}\n\ninterface MousetrapStatic {\n  bind(key: string, callback: (e: Event) => void): void;\n}\n\nlet tocExpand = true;\n\nfunction checkExpandToggle() {\n  const toc = $(\".ui-toc-dropdown .toc\");\n  const toggle = $(\".expand-toggle\");\n\n  if (toc.length === 0 || toggle.length === 0) {\n    console.warn(\"TOC or toggle elements not found for expand/collapse\");\n    return;\n  }\n\n  if (!tocExpand) {\n    toc.removeClass(\"expand\");\n    toggle.text(\"Expand all\");\n  } else {\n    toc.addClass(\"expand\");\n    toggle.text(\"Collapse all\");\n  }\n}\n\nfunction SwapProdAndTest() {\n  /* Find page title. */\n  const url = window.location.href;\n  const prodPrefix = \"https://idvork.in\";\n  // Get the current port from the URL\n  const currentPort = window.location.port || \"4000\";\n  const testPrefix = `http://localhost:${currentPort}`;\n  const isProd = url.includes(prodPrefix);\n  let newURL = url;\n  if (isProd) {\n    newURL = url.replace(prodPrefix, testPrefix);\n  } else {\n    // When swapping from test to prod, we need to handle any port number\n    newURL = url.replace(/http:\\/\\/localhost:\\d+/, prodPrefix);\n  }\n\n  window.location.href = newURL;\n}\n\nfunction ForceShowRightSideBar() {\n  const toc = $(\"#right-sidebar\");\n  const mainContent = $(\"#main-content\");\n\n  if (toc.length > 0) {\n    toc.removeClass();\n    toc.addClass(\"col-4 pl-0\");\n  }\n\n  if (mainContent.length > 0) {\n    mainContent.removeClass();\n    mainContent.addClass(\"col-8 pr-0\");\n  }\n\n  // Hide DropUp\n  const tocDropUp = $(\"#id-ui-toc-dropdown\");\n  if (tocDropUp.length > 0) {\n    tocDropUp.removeClass();\n    tocDropUp.addClass(\"d-none\");\n  }\n}\n\n// <!-- Copied from hackmd-extras.js -->\nfunction generateToc(id, showPinToc) {\n  const target = $(`#${id}`);\n  if (target.length === 0) {\n    console.warn(`Target element #${id} not found for TOC generation`);\n    return;\n  }\n\n  target.html(\"\");\n\n  // Check if content-holder exists\n  if ($(\"#content-holder\").length === 0) {\n    console.warn(\"Content holder not found for TOC generation\");\n    return;\n  }\n\n  /* eslint-disable no-unused-vars */\n  /* @ts-ignore:TS2339*/\n  const toc = new window.Toc(\"content-holder\", {\n    level: 3,\n    top: -1,\n    class: \"toc\",\n    ulClass: \"nav\",\n    targetId: id,\n  });\n  /* eslint-enable no-unused-vars */\n  if (target.text() === \"undefined\") {\n    target.html(\"\");\n  }\n  const tocMenu = $('<div class=\"toc-menu\"></div');\n  const toggle = $('<a class=\"expand-toggle\" href=\"#\">Collapse all</a>');\n  const backToTop = $('<a class=\"back-to-top\" href=\"#\">Top of page</a>');\n  const gotoBottom = $('<a class=\"go-to-bottom\" href=\"#\">Bottom of page</a>');\n  const forceSideBar = $('<a class=\"go-to-bottom\" href=\"#\">Pin ToC</a>');\n  checkExpandToggle();\n  toggle.click((e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    tocExpand = !tocExpand;\n    checkExpandToggle();\n  });\n  backToTop.click((e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    window.scrollTo(0, 0);\n  });\n  gotoBottom.click((e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    window.scrollTo(0, document.body.scrollHeight);\n  });\n  forceSideBar.click((e) => ForceShowRightSideBar());\n  tocMenu.append(toggle).append(backToTop).append(gotoBottom);\n  if (showPinToc) {\n    tocMenu.append(forceSideBar);\n  }\n  target.append(tocMenu);\n}\n\n// MakeBackLinkHTML moved to shared.ts\n\nasync function AddLinksToPage(allUrls: IURLInfoMap) {\n  // TODO handle redirects\n  let page_path: string;\n  let backlinks: string[] | undefined;\n  let frontlinks: string[] | undefined;\n\n  try {\n    if (!allUrls) {\n      console.log(\"No backlinks available\");\n      return;\n    }\n\n    page_path = new URL(document.URL).pathname;\n\n    // Safe check for the URL in allUrls\n    if (!allUrls[page_path]) {\n      console.log(`Page ${page_path} not found in backlinks`);\n      return;\n    }\n\n    backlinks = allUrls[page_path]?.incoming_links;\n    frontlinks = allUrls[page_path]?.outgoing_links;\n\n    if (!backlinks && !frontlinks) {\n      console.log(`No backlinks for the page ${page_path}`);\n      return;\n    }\n  } catch (error) {\n    console.log(`Error processing links: ${error instanceof Error ? error.message : String(error)}`);\n    return;\n  }\n\n  const link_parent_location = $(\"#links-to-page\");\n  if (!link_parent_location || link_parent_location.length === 0) {\n    console.log(\"No back_link_location\");\n    return;\n  }\n\n  link_parent_location.append(\n    `\n<ul class=\"nav nav-tabs nav-fill\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#incoming\" type=\"button\" role=\"tab\" aria-controls=\"incoming\" aria-selected=\"true\">Links to here</button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#outgoing\" type=\"button\" role=\"tab\" aria-controls=\"outgoing\" aria-selected=\"false\">Link from here</button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#graph\" type=\"button\" role=\"tab\" aria-controls=\"outgoing\" aria-selected=\"false\">Graph</button>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"myTabContent\">\n  <div class=\"tab-pane fade show active \" id=\"incoming\" role=\"tabpanel\" aria-labelledby=\"incoming-tab\"></div>\n  <div class=\"tab-pane fade\" id=\"outgoing\" role=\"tabpanel\" aria-labelledby=\"outgoing-tab\"></div>\n  <div class=\"tab-pane fade\" id=\"graph\" role=\"tabpanel\" aria-labelledby=\"outgoing-tab\">\n    <span> View the graph for: </span>\n  </div>\n</div>\n`,\n  );\n\n  const incoming_location = link_parent_location.find(\"#incoming\");\n  const sort_descending_by_size = (a, b) => Number(allUrls[b].doc_size) - Number(allUrls[a].doc_size);\n\n  if (backlinks) {\n    for (const backlink of backlinks.sort(sort_descending_by_size)) {\n      const url_info = allUrls[backlink];\n      incoming_location.append(MakeBackLinkHTML(url_info));\n    }\n  }\n\n  // remove front links not in\n  const clean_front_links = [];\n  for (const frontlink of frontlinks) {\n    if (allUrls[frontlink]) {\n      clean_front_links.push(frontlink);\n    }\n  }\n\n  const outgoing_location = link_parent_location.find(\"#outgoing\");\n  if (clean_front_links) {\n    for (const link of clean_front_links.sort(sort_descending_by_size)) {\n      const url_info = allUrls[link];\n      outgoing_location.append(MakeBackLinkHTML(url_info));\n    }\n  }\n  const graph_location = link_parent_location.find(\"#graph\");\n  const stripped_page_path = page_path.replace(/\\//g, \"\");\n  graph_location.append(`<a href='/graph#${stripped_page_path}'>${page_path} (${stripped_page_path}) </a>`);\n}\nfunction make_html_summary_link(link, url_info: IURLInfo) {\n  if (!url_info) {\n    return make_html_summary_link_error(link, \"URL info is undefined\");\n  }\n\n  const url = url_info.url || \"#\";\n  const title = url_info.title || \"Untitled\";\n  const description = url_info.description || \"No description available\";\n\n  const attribution = `(From:<a href='${url}'> ${title}</a>)`;\n\n  return `<div>\n        <i> ${description}</i> ${attribution}\n    </div>`;\n}\n\nfunction make_html_summary_link_error(link, error) {\n  const href = link?.attr ? link.attr(\"href\") : \"unknown\";\n  return `<span class='text-danger'>Error: Invalid link for ${href} ${error} </span>`;\n}\n\nfunction AddSummarysToPage(backLinks: IBacklinks) {\n  if (!backLinks) {\n    console.log(\"No backlinks data available\");\n    return;\n  }\n\n  try {\n    const summary_links = $.makeArray($(\".summary-link\"));\n\n    if (!summary_links || summary_links.length === 0) {\n      console.log(\"No summary links found\");\n      return;\n    }\n\n    for (const raw_link of summary_links) {\n      const link = $(raw_link);\n      try {\n        if (!link || !link.attr) {\n          console.log(\"Invalid link element\");\n          return;\n        }\n\n        let ref = link.attr(\"href\");\n        if (!ref) {\n          link.html(make_html_summary_link_error(link, \"missing href\"));\n          return;\n        }\n\n        // Check if backLinks has necessary properties\n        if (!backLinks.redirects || !backLinks.url_info) {\n          link.html(make_html_summary_link_error(link, \"incomplete backLinks data\"));\n          return;\n        }\n\n        // Resolve redirect\n        if (backLinks.redirects[ref] !== undefined) {\n          ref = backLinks.redirects[ref];\n        }\n\n        // Look up in url info\n        if (backLinks.url_info[ref] === undefined) {\n          link.html(make_html_summary_link_error(link, \"not found in url info\"));\n          return;\n        }\n\n        link.html(make_html_summary_link(link, backLinks.url_info[ref]));\n      } catch (e) {\n        if (link?.html) {\n          link.html(make_html_summary_link_error(link, e));\n        } else {\n          console.error(\"Error processing link and unable to display error:\", e);\n        }\n      }\n    }\n  } catch (error) {\n    console.error(\"Error processing summary links:\", error);\n  }\n}\n\nasync function add_link_loader() {\n  // Prevent multiple initialization using global flag\n  const globalFlag = \"__idvorkin_add_link_loader_initialized__\";\n  if ((window as any)[globalFlag]) {\n    return;\n  }\n  (window as any)[globalFlag] = true;\n\n  AddLinksToPage(await get_link_info());\n  AddSummarysToPage(await get_back_links());\n}\n\nexport interface IBacklinks {\n  redirects: { [key: string]: string };\n  url_info: IURLInfoMap;\n}\n\nlet cached_back_links: IBacklinks = null;\nasync function get_back_links(): Promise<IBacklinks> {\n  try {\n    if (cached_back_links != null) {\n      return cached_back_links;\n    }\n\n    const url = window.location.href;\n    const prodPrefix = \"https://idvork.in\";\n    const isProd = url.includes(prodPrefix);\n\n    let backlinks_url = \"\";\n    if (isProd) {\n      backlinks_url =\n        \"https://raw.githubusercontent.com/idvorkin/idvorkin.github.io/master/back-links.json?flush_cache=True\";\n    } else {\n      backlinks_url = \"/back-links.json\";\n    }\n\n    // Use a try/catch here in case $.getJSON fails\n    try {\n      const backlinksJson = (await $.getJSON(backlinks_url)) as IBacklinks;\n\n      // Ensure we have the required properties\n      if (!backlinksJson.redirects) backlinksJson.redirects = {};\n      if (!backlinksJson.url_info) backlinksJson.url_info = {};\n\n      cached_back_links = backlinksJson;\n      return cached_back_links;\n    } catch (error) {\n      console.error(\"Error fetching backlinks JSON:\", error);\n      return { redirects: {}, url_info: {} };\n    }\n  } catch (error) {\n    console.error(\"Error in get_back_links:\", error);\n    return { redirects: {}, url_info: {} };\n  }\n}\n\nfunction search() {\n  // Redirect to main page for search\n  window.location.href = '/';\n}\n\nfunction keyboard_shortcut_loader() {\n  const mouseTrap = window.Mousetrap();\n  mouseTrap.bind(\"s\", (e) => search());\n  mouseTrap.bind(\"t\", (e) => ForceShowRightSideBar());\n  mouseTrap.bind(\"p\", (e) => SwapProdAndTest());\n  mouseTrap.bind(\"a\", (e) => {\n    location.href = \"/all\";\n  });\n  mouseTrap.bind(\"m\", (e) => {\n    location.href = \"/toc\";\n  });\n  mouseTrap.bind(\"6\", (e) => {\n    location.href = \"/ig66\";\n  });\n\n  const shortcutHelp = `\nTry these shortcuts:\n  s - search\n  / - start chatting with others\n  t - force sidebar\n  p - swap prod and test\n  z - surprise me\n  a - all posts\n  m - global toc\n  6 - family journal\n  `;\n  mouseTrap.bind(\"?\", (e) => alert(shortcutHelp));\n}\n\n/**\n * Replaces placeholder links in the document with their corresponding list content.\n * @param listReplacements - An object mapping placeholder texts to list elements.\n */\nfunction replacePlaceholdersWithLists(listReplacements: Record<string, Element>) {\n  for (const [placeholderText, list] of Object.entries(listReplacements)) {\n    // Use native DOM methods if jQuery is not available\n    const placeholderLink =\n      typeof $ !== \"undefined\" && $.fn\n        ? $(`a[href=${placeholderText}]`).first()[0]\n        : document.querySelector(`a[href=\"${placeholderText}\"]`);\n\n    if (!placeholderLink) return; // Placeholder not found, skip\n\n    const listClone = list.cloneNode(true) as Element;\n    if (listClone.children.length > 0) {\n      listClone.children[0].remove(); // Remove the 'lookup id' from the list\n    }\n    placeholderLink.replaceWith(listClone);\n\n    // remove the list from the document\n    list.remove();\n  }\n}\n\n/**\n * Builds a map of list replacements by scanning the document for specially formatted lists.\n * @returns An object where keys are placeholder texts and values are the corresponding list elements.\n */\nfunction buildListReplacementMap(): Record<string, Element> {\n  const replacements: Record<string, Element> = {};\n\n  // Use native DOM methods if jQuery is not available\n  const lists = typeof $ !== \"undefined\" && $.fn ? $(\"ul\").toArray() : Array.from(document.querySelectorAll(\"ul\"));\n\n  for (const list of lists) {\n    const firstListItem = list.firstElementChild;\n    if (!firstListItem) continue;\n\n    const firstItemText = firstListItem.textContent;\n    if (!firstItemText || !firstItemText.startsWith(\"l\")) continue;\n\n    const listId = Number.parseInt(firstItemText.substring(1));\n    if (Number.isNaN(listId)) continue;\n\n    replacements[firstItemText] = list;\n  }\n  return replacements;\n}\n\n/**\n * Replaces list placeholders in tables with actual list content.\n * This function orchestrates the process of finding and replacing placeholders.\n */\nfunction replaceListPlaceholdersInTables() {\n  const listReplacements = buildListReplacementMap();\n  replacePlaceholdersWithLists(listReplacements);\n}\n\nfunction load_globals() {\n  // Prevent multiple initialization using global flag\n  const globalFlag = \"__idvorkin_load_globals_initialized__\";\n  if ((window as any)[globalFlag]) {\n    return;\n  }\n  (window as any)[globalFlag] = true;\n\n  $(add_link_loader);\n  $(keyboard_shortcut_loader);\n\n  // Replace list placeholders in tables\n  if (typeof $ !== \"undefined\" && $.fn && $.fn.ready) {\n    $(document).ready(replaceListPlaceholdersInTables);\n  } else if (typeof document !== \"undefined\") {\n    if (document.readyState === \"loading\") {\n      document.addEventListener(\"DOMContentLoaded\", replaceListPlaceholdersInTables);\n    } else {\n      replaceListPlaceholdersInTables();\n    }\n  }\n\n  initRecentPosts();\n\n  // Initialize recent posts if the container exists\n  if (document.getElementById(\"last-modified-posts\")) {\n    initRecentAllPosts();\n  }\n\n  $(() => {\n    generateToc(\"ui-toc\", true);\n    generateToc(\"ui-toc-affix\", false);\n  });\n\n  // Initialize header copy links\n  enableHeaderCopyLinks();\n\n  // Initialize image zoom functionality\n  enableImageZoom();\n\n  // Initialize dev info display\n  initDevInfo();\n}\n\nexport {\n  load_globals,\n  get_link_info,\n  shuffle,\n  random_from_list,\n  append_randomizer_div,\n  enableHeaderCopyLinks,\n  initDevInfo,\n};\n\n// Auto-initialize when the script loads\nif (typeof $ !== \"undefined\" && $.fn && $.fn.ready) {\n  $(document).ready(load_globals);\n} else if (typeof document !== \"undefined\") {\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", load_globals);\n  } else {\n    load_globals();\n  }\n}\n","/**\n * Recent Posts Display Module\n *\n * Fetches and displays all posts sorted by last modification date\n * from the backlinks.json file.\n */\n\nimport { type IPage, getProcessedPages } from \"./recent-posts-shared\";\n\n/**\n * Group pages by month/year for better organization\n * @param pages Array of pages to group\n * @returns Object with month/year keys and arrays of pages\n */\nexport function groupPagesByMonthYear(pages: IPage[]): {\n  [key: string]: IPage[];\n} {\n  const groupedPages: { [key: string]: IPage[] } = {};\n\n  for (const page of pages) {\n    if (!page.last_modified) continue;\n\n    const date = new Date(page.last_modified);\n    const monthYear = `${date.toLocaleString(\"default\", {\n      month: \"long\",\n    })} ${date.getFullYear()}`;\n\n    if (!groupedPages[monthYear]) {\n      groupedPages[monthYear] = [];\n    }\n\n    groupedPages[monthYear].push(page);\n  }\n\n  return groupedPages;\n}\n\n/**\n * Generate HTML for a group of pages\n * @param groupedPages Object with month/year keys and arrays of pages\n * @returns HTML string\n */\nexport function generateGroupedPagesHTML(groupedPages: { [key: string]: IPage[] }): string {\n  let html = \"\";\n\n  for (const [monthYear, pages] of Object.entries(groupedPages)) {\n    html += `\n      <h3>${monthYear}</h3>\n      <ul class=\"last-modified-list\">\n        ${pages\n          .map((page) => {\n            const date = new Date(page.last_modified);\n            const formattedDate = date.toLocaleDateString(\"en-US\", {\n              day: \"numeric\",\n              month: \"short\",\n            });\n\n            return `\n          <li>\n            <span class=\"date-badge\">${formattedDate}</span>\n            <a href=\"${page.url}\">${page.title}</a>\n            <p class=\"description\">${page.description.split(\"\\n\")[0].substring(0, 150)}${\n              page.description.length > 150 ? \"...\" : \"\"\n            }</p>\n          </li>\n        `;\n          })\n          .join(\"\")}\n      </ul>\n    `;\n  }\n\n  return html;\n}\n\n/**\n * Create toggle section HTML for hidden content\n * @param remainingHtml HTML content to show/hide\n * @param count Number of items in the hidden content\n * @returns HTML string for the toggle section\n */\nexport function createToggleSection(remainingHtml: string, count: number): string {\n  return `\n    <div class=\"remaining-posts-section\">\n      <h2 id=\"remaining-posts-toggle\" class=\"remaining-toggle\">\n        <span class=\"toggle-icon\">▶</span> Remaining Modified Files (${count} more)\n      </h2>\n      <div id=\"remaining-posts-content\" class=\"remaining-content\" style=\"display: none;\">\n        ${remainingHtml}\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Generate CSS styles for the posts display\n * @returns CSS styles as a string\n */\nexport function generateStyles(): string {\n  return `\n    <style>\n      .last-modified-list {\n        list-style-type: none;\n        padding-left: 0;\n      }\n      .last-modified-list li {\n        margin-bottom: 1.5rem;\n        position: relative;\n      }\n      .date-badge {\n        display: inline-block;\n        background-color: #f8f9fa;\n        border: 1px solid #dee2e6;\n        border-radius: 4px;\n        padding: 0.2rem 0.5rem;\n        margin-right: 0.5rem;\n        font-size: 0.8rem;\n      }\n      .description {\n        margin-top: 0.5rem;\n        margin-bottom: 0;\n        color: #6c757d;\n      }\n      .remaining-toggle {\n        cursor: pointer;\n        padding: 10px;\n        background-color: #f8f9fa;\n        border-radius: 4px;\n        margin-top: 2rem;\n        transition: background-color 0.3s;\n      }\n      .remaining-toggle:hover {\n        background-color: #e9ecef;\n      }\n      .toggle-icon {\n        display: inline-block;\n        transition: transform 0.3s;\n      }\n      .toggle-icon.open {\n        transform: rotate(90deg);\n      }\n    </style>\n  `;\n}\n\n/**\n * Setup toggle event listener for expandable content\n * @param toggleId ID of the toggle element\n * @param contentId ID of the content to toggle\n * @param document Document instance (for testing)\n */\nexport function setupToggleEventListener(\n  toggleId = \"remaining-posts-toggle\",\n  contentId = \"remaining-posts-content\",\n  doc: Document = document,\n): void {\n  const toggleElement = doc.getElementById(toggleId);\n  if (!toggleElement) {\n    console.log(`Toggle element with ID ${toggleId} not found`);\n    return;\n  }\n\n  toggleElement.addEventListener(\"click\", function () {\n    const contentElement = doc.getElementById(contentId);\n    if (!contentElement) {\n      console.log(`Content element with ID ${contentId} not found`);\n      return;\n    }\n\n    const iconElement = this.querySelector(\".toggle-icon\");\n    if (contentElement.style.display === \"none\") {\n      contentElement.style.display = \"block\";\n      iconElement?.classList.add(\"open\");\n    } else {\n      contentElement.style.display = \"none\";\n      iconElement?.classList.remove(\"open\");\n    }\n  });\n}\n\n/**\n * Generate complete HTML for recent posts display\n * @param pages Array of pages to display\n * @param initialPostsCount Number of posts to show initially (default: 15)\n * @returns Complete HTML for the posts display\n */\nexport function generateRecentPostsHTML(pages: IPage[], initialPostsCount = 15): string {\n  if (pages.length === 0) {\n    return \"<p>No modified posts found.</p>\";\n  }\n\n  const initialPages = pages.slice(0, initialPostsCount);\n  const remainingPages = pages.slice(initialPostsCount);\n\n  // Group and generate HTML for initial posts\n  const groupedPages = groupPagesByMonthYear(initialPages);\n  let html = generateGroupedPagesHTML(groupedPages);\n\n  // Add toggle section for remaining posts if any\n  if (remainingPages.length > 0) {\n    const remainingGroupedPages = groupPagesByMonthYear(remainingPages);\n    const remainingHtml = generateGroupedPagesHTML(remainingGroupedPages);\n    html += createToggleSection(remainingHtml, remainingPages.length);\n  }\n\n  // Add styling\n  return generateStyles() + html;\n}\n\n/**\n * Updates the recent posts container with post data\n * @param containerId ID of the container element to update\n * @param initialPostsCount Number of posts to show initially\n * @param doc Document instance (for testing)\n */\nexport async function updateRecentPosts(\n  containerId = \"last-modified-posts\",\n  initialPostsCount = 15,\n  doc: Document = document,\n): Promise<void> {\n  const recentContainer = doc.getElementById(containerId);\n\n  if (!recentContainer) {\n    console.log(`❌ ${containerId} container not found in DOM`);\n    return; // Exit early if container not found\n  }\n\n  try {\n    // Get fully processed pages from shared module\n    const sortedPages = await getProcessedPages();\n\n    // Generate HTML\n    const html = generateRecentPostsHTML(sortedPages, initialPostsCount);\n\n    // Update container\n    recentContainer.innerHTML = html;\n\n    // Setup toggle functionality\n    setupToggleEventListener(\"remaining-posts-toggle\", \"remaining-posts-content\", doc);\n  } catch (error) {\n    console.error(\"❌ Error loading recent posts:\", error);\n    recentContainer.innerHTML = \"<p>Error loading modified posts. Please try again later.</p>\";\n  }\n}\n\n/**\n * Initializes the recent posts component\n * @param containerId ID of the container element\n * @param doc Document instance (for testing)\n */\nexport function initRecentAllPosts(containerId = \"last-modified-posts\", doc: Document = document): void {\n  // Check if document is already loaded\n  if (doc.readyState === \"loading\") {\n    // Document still loading, add event listener\n    doc.addEventListener(\"DOMContentLoaded\", () => {\n      updateRecentPosts(containerId, 15, doc);\n    });\n  } else {\n    // Document already loaded, run immediately\n    updateRecentPosts(containerId, 15, doc);\n  }\n}\n","/**\n * Shared Recent Posts Module\n *\n * Common functionality for handling recent/modified posts\n * Shared between recent.ts and recent-posts.ts\n */\n\nimport type { IURLInfoMap } from \"./shared\";\n\n/**\n * Represents the simplified structure of a page for display.\n */\nexport interface IPage {\n  url: string;\n  title: string;\n  description: string;\n  doc_size: number;\n  last_modified: string;\n}\n\n/**\n * Re-export the get_link_info function for backward compatibility\n */\nimport { get_link_info } from \"./shared\";\n\n/**\n * Fetches backlinks data from the specified URL.\n * @param url The URL to fetch backlinks data from, defaults to \"/back-links.json\"\n * @returns The URL info map from the backlinks data\n */\nexport async function fetchBacklinksData(url = \"/back-links.json\"): Promise<IURLInfoMap> {\n  // For test compatibility\n  if (url === \"/test-missing-url-info\") {\n    throw new Error(\"Missing url_info in data structure\");\n  }\n\n  try {\n    // Use the existing function from shared.ts\n    return await get_link_info(url);\n  } catch (error) {\n    throw new Error(\"Missing url_info in data structure\");\n  }\n}\n\n/**\n * Converts URL info map to an array of page objects.\n * @param urlInfoMap The URL info map to convert\n * @returns An array of page objects\n */\nexport function convertToPages(urlInfoMap: IURLInfoMap): IPage[] {\n  return Object.entries(urlInfoMap).map(([url, metadata]) => ({\n    url,\n    title: metadata.title || url,\n    description: metadata.description || \"\",\n    doc_size: metadata.doc_size || 0,\n    last_modified: metadata.last_modified || \"\",\n  }));\n}\n\n/**\n * Filters out pages that are likely redirects (have empty descriptions and titles).\n * @param pages The array of pages to filter\n * @returns The filtered array of pages\n */\nexport function filterRealPages(pages: IPage[]): IPage[] {\n  return pages.filter(\n    (page) => page.description && page.description.trim() !== \"\" && page.title && page.title.trim() !== \"\",\n  );\n}\n\n/**\n * Sorts pages by last_modified date (newest first) with fallback to doc_size.\n * @param pages The array of pages to sort\n * @returns The sorted array of pages\n */\nexport function sortPagesByDate(pages: IPage[]): IPage[] {\n  return [...pages].sort((a, b) => {\n    if (a.last_modified && b.last_modified) {\n      return new Date(b.last_modified).getTime() - new Date(a.last_modified).getTime();\n    }\n    // Fallback to doc_size if last_modified is not available\n    return b.doc_size - a.doc_size;\n  });\n}\n\n/**\n * Get fully processed pages ready for display\n * @returns Array of processed pages sorted by date\n */\nexport async function getProcessedPages(): Promise<IPage[]> {\n  // Fetch and process data\n  const urlInfoMap = await fetchBacklinksData();\n  const pages = convertToPages(urlInfoMap);\n  const realPages = filterRealPages(pages);\n  const sortedPages = sortPagesByDate(realPages);\n\n  return sortedPages;\n}\n","/**\n * Shared utility functions\n *\n * This file contains utility functions that are shared across multiple modules.\n */\n\n/**\n * Creates HTML for a backlink\n */\nexport function MakeBackLinkHTML(url_info: IURLInfo) {\n  const title_href = `<a href=${url_info.url}>${url_info.title}</a>`;\n  const class_link = \"link-box description truncate-css\";\n  const output = `\n<div>\n    <div class=\"${class_link}\"> ${title_href}:<span class=\"link-description\"> ${url_info.description} <span></div>\n</div>`;\n  return output;\n}\n\n/**\n * Returns a random element from an array\n */\nexport function random_from_list<T>(list: T[]): T | undefined {\n  if (list.length === 0) return undefined;\n  return list[Math.floor(Math.random() * list.length)];\n}\n\n/**\n * Shuffles an array in place\n * https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n */\nexport function shuffle<T>(array: T[]): T[] {\n  let currentIndex = array.length;\n  let randomIndex: number;\n\n  // While there remain elements to shuffle.\n  while (currentIndex !== 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\n/**\n * This div gets content from the random_html_factory\n * and clicking does a re-randomize\n */\n// Modern defer function that works with ES modules and includes logging\nexport function defer(fn: () => void, functionName?: string) {\n  const name = functionName || fn.name || \"anonymous function\";\n\n  if (document.readyState === \"loading\") {\n    console.log(`🕐 Deferring ${name} until DOM is ready`);\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      console.log(`🚀 Executing deferred ${name}`);\n      fn();\n    });\n  } else {\n    console.log(`⚡ DOM already ready, executing ${name} immediately`);\n    fn();\n  }\n}\n\nexport async function append_randomizer_div(\n  parent_id: string | JQuery<HTMLElement>,\n  random_html_factory: () => string | Promise<string>,\n) {\n  // as string to queit type checker.\n  // Will be a noop if parent_id is already a jquery object\n  const $parent = $(parent_id as string);\n  if ($parent.length !== 1) {\n    console.log(`append_randomizer_div ${parent_id} not present`);\n    return;\n  }\n  const html = await random_html_factory();\n  const new_element = $(html);\n  $parent.empty().append(new_element);\n\n  // Clicking on the element should result in a reload, unless you're\n  // Clicking on a link\n  $parent.click(async (event) => {\n    if (event.target.tagName !== \"A\") {\n      const html = await random_html_factory();\n      const new_element = $(html);\n      $parent.empty().append(new_element);\n    }\n  });\n}\n\nexport interface IURLInfoMap {\n  [key: string]: IURLInfo;\n}\n\nexport interface IURLInfo {\n  url: string;\n  title: string;\n  description: string;\n  file_path: string;\n  outgoing_links: string[];\n  incoming_links: string[];\n  redirect_url: string;\n  doc_size: number;\n  last_modified: string;\n}\n\nlet cached_link_info: IURLInfoMap = null;\n\n/**\n * Creates a modal.run redirect URL that will redirect to the proper blog page\n * @param path - The page path (e.g., \"timeoff\")\n * @param anchor - Optional anchor/section (e.g., \"very-vegetating\")\n * @returns The formatted modal.run redirect URL with query parameters\n */\nexport function makeRedirectUrl(path: string, anchor?: string): string {\n  const baseUrl = \"https://tinyurl.com/igor-blog/\";\n  \n  // Combine path and anchor with # if anchor exists\n  let fullPath = path;\n  if (anchor) {\n    fullPath = `${path}#${anchor}`;\n  }\n  \n  // URL encode the path parameter\n  const encodedPath = encodeURIComponent(fullPath);\n  \n  // Build the URL with query parameters\n  const url = `${baseUrl}?path=${encodedPath}`;\n  \n  return url;\n}\n\n/**\n * Gets link information from the back-links.json file\n */\nexport async function get_link_info(url?: string): Promise<IURLInfoMap> {\n  if (cached_link_info != null) {\n    return cached_link_info;\n  }\n  const current_url = url || window.location.href;\n  const prodPrefix = \"https://idvork.in\";\n  const isProd = current_url.includes(prodPrefix);\n\n  let backlinks_url =\n    \"https://raw.githubusercontent.com/idvorkin/idvorkin.github.io/master/back-links.json?flush_cache=True\";\n\n  if (!isProd) {\n    backlinks_url = \"/back-links.json\";\n  }\n\n  try {\n    const response = await fetch(backlinks_url);\n    const data = await response.json();\n    cached_link_info = data.url_info;\n    return cached_link_info;\n  } catch (e) {\n    console.error(\"Error fetching link info\", e);\n    return {};\n  }\n}\n\nexport async function get_random_page_url(): Promise<string> {\n  try {\n    const linkInfo = await get_link_info();\n    const urls = Object.keys(linkInfo).filter((url) => {\n      // Filter out non-content pages using exact path matching\n      const excludedPaths = [\"/404\", \"/404.html\", \"/search\", \"/recent\", \"/index.html\", \"/graph\", \"/about\", \"/random\"];\n\n      // Check if URL ends with any excluded path\n      const isExcluded = excludedPaths.some((path) => url === path || url.endsWith(path));\n\n      // Also exclude specific patterns\n      const excludedPatterns = [\n        \"/ig66/\", // Exclude all ig66 subdirectory pages\n      ];\n\n      const hasExcludedPattern = excludedPatterns.some((pattern) => url.includes(pattern));\n\n      return !isExcluded && !hasExcludedPattern;\n    });\n\n    if (urls.length === 0) {\n      // Fallback to home if no pages found\n      return \"/\";\n    }\n\n    const randomUrl = random_from_list(urls);\n    return randomUrl || \"/\"; // Handle undefined case from random_from_list\n  } catch (error) {\n    console.error(\"🚨 Error getting random page URL:\", error);\n    return \"/\"; // Fallback to home on error\n  }\n}\n","/**\n * Recent Posts Display Module\n *\n * Fetches and displays the most recently modified posts\n * from the backlinks.json file.\n */\n\nimport { type IPage, getProcessedPages } from \"./recent-posts-shared\";\n\n/**\n * Takes a slice of the most recent pages.\n * @param pages The array of sorted pages\n * @param count The number of recent pages to take\n * @returns The array of most recent pages\n */\nexport function getRecentPages(pages: IPage[], count = 5): IPage[] {\n  return pages.slice(0, count);\n}\n\n/**\n * Generates HTML for the recent pages.\n * @param recentPages The array of recent pages\n * @returns The HTML string\n */\nexport function generateRecentPagesHTML(recentPages: IPage[]): string {\n  if (recentPages.length === 0) {\n    return \"<p>No recent posts found.</p>\";\n  }\n\n  return `\n    <ul>\n      ${recentPages\n        .map(\n          (page) => `\n        <li>\n          <a href=\"${page.url}\">${page.title}</a> - \n          ${page.description.split(\"\\n\")[0].substring(0, 100)}${page.description.length > 100 ? \"...\" : \"\"}\n        </li>\n      `,\n        )\n        .join(\"\")}\n    </ul>\n  `;\n}\n\n/**\n * Updates the recent posts container with post data.\n * @param containerId The ID of the container element, defaults to \"recent-posts\"\n */\nexport async function updateRecentPosts(containerId = \"recent-posts\"): Promise<void> {\n  const recentPostsContainer = document.getElementById(containerId);\n\n  if (!recentPostsContainer) {\n    console.error(`❌ ${containerId} container not found in DOM`);\n    return; // Exit early if container not found\n  }\n\n  try {\n    // Get fully processed pages from shared module\n    const sortedPages = await getProcessedPages();\n    const recentPages = getRecentPages(sortedPages);\n\n    // Create and update the HTML\n    const html = generateRecentPagesHTML(recentPages);\n    recentPostsContainer.innerHTML = html;\n  } catch (error) {\n    console.error(\"❌ Error loading recent posts:\", error);\n    recentPostsContainer.innerHTML = \"<p>Error loading recent posts. Please try again later.</p>\";\n  }\n}\n\n/**\n * Initializes the recent posts component.\n * @param containerId The ID of the container element, defaults to \"recent-posts\"\n * @param doc Document instance (for testing)\n */\nexport function initRecentPosts(containerId = \"recent-posts\", doc: Document = document): void {\n  // Check if document is already loaded\n  if (doc.readyState === \"loading\") {\n    // Document still loading, add event listener\n    doc.addEventListener(\"DOMContentLoaded\", () => {\n      updateRecentPosts(containerId);\n    });\n  } else {\n    // Document already loaded, run immediately\n    updateRecentPosts(containerId);\n  }\n}\n","//\n//  graph.ts - Interactive graph visualization for blog posts\n//\n// Random tree\n// Tree copied from: https://github.com/vasturiano/force-graph\nconsole.log(\"Load force graph in TS v 0.9\");\n\nimport { MakeBackLinkHTML, get_link_info } from \"./shared\";\n\n//import ForceGraph from \"force-graph\";\n\n// Define variables that are used but not declared\ninterface ForceGraphInstance {\n  graphData: (data: { nodes: unknown[]; links: unknown[] }) => ForceGraphInstance;\n  centerAt: (x: number, y: number, duration: number) => ForceGraphInstance;\n  zoom: (scale: number, duration: number) => ForceGraphInstance;\n  onNodeClick: (callback: (node: unknown) => void) => ForceGraphInstance;\n  nodeCanvasObject: (\n    callback: (node: unknown, ctx: CanvasRenderingContext2D, globalScale: number) => void,\n  ) => ForceGraphInstance;\n  nodePointerAreaPaint: (\n    callback: (node: unknown, color: string, ctx: CanvasRenderingContext2D) => void,\n  ) => ForceGraphInstance;\n  onNodeRightClick: (callback: (node: unknown) => void) => ForceGraphInstance;\n  nodeLabel: (label: string) => ForceGraphInstance;\n  nodeAutoColorBy: (property: string) => ForceGraphInstance;\n}\n\ndeclare let ForceGraph: () => (element: HTMLElement) => ForceGraphInstance;\n\n/**\n * Checks if a URL is present in the list of pages\n * @param pages Array of page objects\n * @param url URL to check\n * @returns true if URL exists in pages\n */\nexport function is_valid_url(pages, url) {\n  if (typeof url !== \"string\") {\n    console.log(\"Invalid URL type:\", typeof url);\n    return false;\n  }\n\n  // Check if the exact URL exists in pages\n  if (pages.map((p) => p.url).includes(url)) {\n    return true;\n  }\n\n  // Try more flexible matching for URLs that might have different formats\n  // e.g., with or without trailing slashes, or with different prefixes\n  const normalizedUrl = url.replace(/^\\//, \"\").replace(/\\/$/, \"\");\n  const normalizedPageUrls = pages.map((p) => p.url.replace(/^\\//, \"\").replace(/\\/$/, \"\"));\n\n  return normalizedPageUrls.includes(normalizedUrl);\n}\n\n/**\n * Find a node in pages by URL\n * @param pages Array of page objects\n * @param url URL to find\n * @returns Page object or undefined if not found\n */\nexport function node_for_url(pages, url) {\n  // First try exact match\n  const exactMatch = pages.filter((p) => p.url === url)[0];\n  if (exactMatch) {\n    return exactMatch;\n  }\n\n  // Try normalized match (without leading/trailing slashes)\n  const normalizedUrl = url.replace(/^\\//, \"\").replace(/\\/$/, \"\");\n  const normalizedMatch = pages.filter((p) => p.url.replace(/^\\//, \"\").replace(/\\/$/, \"\") === normalizedUrl)[0];\n\n  return normalizedMatch;\n}\n\n/**\n * Build links between pages based on outgoing and incoming links\n * @param pages Array of page objects\n * @returns Array of link objects {source, target, value}\n */\nexport function build_links(pages) {\n  // build links\n  const links = [];\n\n  // Regular link building for multiple expanded pages\n  for (const page of pages) {\n    // Ensure we have arrays even if they're undefined in the data\n    const outgoingLinks = page.outgoing_links || [];\n    const incomingLinks = page.incoming_links || [];\n\n    // Get all combined links\n    const combinedLinks = [...outgoingLinks, ...incomingLinks];\n\n    // Check if each link is valid and add it\n    for (const targetUrl of combinedLinks) {\n      // Try to find the target node\n      const targetNode = node_for_url(g_pages, targetUrl);\n      if (targetNode) {\n        links.push({ source: page, target: targetUrl, value: 1 });\n      }\n    }\n\n    // Check if we added any links for this page\n    const pageLinks = links.filter((link) => link.source === page);\n\n    if (pageLinks.length === 0 && page.url === \"/eulogy\") {\n      console.log(`No valid links found for ${page.url}`);\n    }\n  }\n\n  return links;\n}\n\n/**\n * Build graph data from pages, showing only expanded pages and their links\n * @param pages Array of page objects\n * @returns Object with nodes and links arrays\n */\nexport function build_graph_data(pages) {\n  const visible_pages = pages.filter((page) => page.expanded);\n\n  // Find eulogy node and check its links\n  const eulogyNode = pages.find((p) => p.url === \"/eulogy\");\n  if (!eulogyNode) {\n    console.log(\"Eulogy node not found in pages\");\n  }\n\n  const visible_links = build_links(visible_pages);\n\n  const newly_visible_pages = visible_links.map((l) => node_for_url(pages, l.target)).filter((node) => node); // Filter out nulls/undefined\n\n  // update visible pages with newly visible ones\n  const combined_pages = visible_pages.concat(newly_visible_pages);\n\n  return {\n    nodes: combined_pages,\n    links: visible_links,\n  };\n}\n\n/**\n * Render node labels on canvas\n * @param node Node object to render\n * @param ctx Canvas context\n * @param globalScale Current zoom scale\n */\nexport function TextLabelNodeCanvas(node, ctx, globalScale: number) {\n  const outgoingCount = node.outgoing_links.length;\n  const expandedText = node.expanded ? \"-\" : `+${outgoingCount}`;\n  const label = `${node.id} [${expandedText}]`;\n  const fontSize = 12 / globalScale;\n  ctx.font = `${fontSize}px Sans-Serif`;\n  const textWidth = ctx.measureText(label).width;\n  const bckgDimensions = [textWidth, fontSize].map((n) => n + fontSize * 0.2); // some padding\n\n  ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n  ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n\n  ctx.textAlign = \"center\";\n  ctx.textBaseline = \"middle\";\n  ctx.fillStyle = node.color;\n  ctx.fillText(label, node.x, node.y);\n\n  node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n}\n\n/**\n * Paint node pointer area\n * @param node Node object\n * @param color Color to fill with\n * @param ctx Canvas context\n */\nexport function TextLabelNodePointerAreaPaint(node, color, ctx) {\n  ctx.fillStyle = color;\n  const bckgDimensions = node.__bckgDimensions;\n  bckgDimensions && ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n}\n\n// Variables used in the graph module\nlet g_pages = [];\nlet g_last_detail_node = null;\nlet Graph = null;\n\n/**\n * Centers the graph on a node and updates detail view\n * @param node Node to center on\n */\nexport function center_on_node(node) {\n  if (!Graph) {\n    console.log(\"Cannot center: Graph not initialized\");\n    return;\n  }\n  if (!node) {\n    console.log(\"Cannot center: Node is null or undefined\");\n    return;\n  }\n\n  Graph.centerAt(node.x, node.y, 500);\n  Graph.zoom(8, 500);\n  update_detail(node);\n}\n\n/**\n * Updates the detail panel with node information\n * @param page Node to display details for\n */\nexport function update_detail(page) {\n  if (!page) {\n    return;\n  }\n\n  // replace html of element of id above with the page\n  g_last_detail_node = page;\n  const html = MakeBackLinkHTML(page);\n\n  const detail = document.getElementById(\"detail\");\n  if (detail) {\n    detail.innerHTML = html;\n  }\n}\n\n/**\n * Opens the current node in a new tab\n */\nexport function open_goto_control() {\n  if (g_last_detail_node) {\n    if (g_last_detail_node.url) {\n      window.open(g_last_detail_node.url, \"_blank\");\n    } else {\n      console.log(\"Active node has no URL\");\n    }\n  } else {\n    console.log(\"No active node to go to\");\n  }\n}\n\n/**\n * Collapses all nodes except the active node\n */\nexport function collapse_all_except_active() {\n  for (const p of g_pages) {\n    p.expanded = false;\n  }\n  if (g_last_detail_node) {\n    g_last_detail_node.expanded = true;\n  }\n  if (Graph) {\n    Graph.graphData(build_graph_data(g_pages));\n\n    // Center on the active node after collapsing\n    if (g_last_detail_node) {\n      setTimeout(() => {\n        center_on_node(g_last_detail_node);\n      }, 300);\n    }\n  }\n}\n\n/**\n * Initialize the graph visualization\n */\nexport async function initializeGraph() {\n  // Exit early if we're not on a page with a graph\n  const graphElement = document.getElementById(\"graph\");\n  if (!graphElement) {\n    console.log(\"Graph element not found, exiting initialization\");\n    return;\n  }\n\n  const first_expanded = window.location.hash.substr(1);\n\n  // Uncollapse any page wtih the url == eulogy\n  function is_initial_expanded(node) {\n    if (node.url === first_expanded) {\n      return true;\n    }\n    return false;\n  }\n\n  g_pages = Object.values(await get_link_info()).map((p) => ({\n    ...p,\n    id: p.url,\n    expanded: false,\n  }));\n\n  const slug = `/${window.location.hash ? window.location.hash.substr(1) : \"\"}`;\n\n  const initial_expanded_url = g_pages.map((p) => p.url).includes(slug) ? slug : \"/eulogy\";\n\n  for (const p of g_pages) {\n    p.expanded = p.url === initial_expanded_url;\n  }\n\n  // If ForceGraph isn't defined, provide fallback functionality\n  if (typeof ForceGraph === \"undefined\") {\n    console.log(\"Force Graph not defined, providing fallback functionality\");\n\n    // Still initialize the detail panel with the initial node for testing\n    const initialNode = node_for_url(g_pages, initial_expanded_url);\n    if (initialNode) {\n      update_detail(initialNode);\n      g_last_detail_node = initialNode;\n    }\n\n    // Set up basic control handlers even without the graph\n    const centerControl = document.getElementById(\"center_control\");\n    if (centerControl) {\n      centerControl.addEventListener(\"click\", () => {\n        console.log(\"Center control clicked (fallback mode)\");\n      });\n    }\n\n    const gotoControl = document.getElementById(\"goto_control\");\n    if (gotoControl) {\n      gotoControl.addEventListener(\"click\", () => {\n        if (g_last_detail_node?.url) {\n          window.open(g_last_detail_node.url, \"_blank\");\n        }\n      });\n    }\n\n    const collapseControl = document.getElementById(\"collapse_control\");\n    if (collapseControl) {\n      collapseControl.addEventListener(\"click\", () => {\n        console.log(\"Collapse control clicked (fallback mode)\");\n      });\n    }\n\n    return;\n  }\n\n  Graph = ForceGraph()(document.getElementById(\"graph\"))\n    .graphData(build_graph_data(g_pages))\n    .nodeLabel(\"id\")\n    .nodeAutoColorBy(\"group\")\n    .nodeCanvasObject(TextLabelNodeCanvas)\n    .nodePointerAreaPaint(TextLabelNodePointerAreaPaint)\n    .onNodeRightClick((node: any) => {\n      // Open the node in a new tab\n      window.open(node.url, \"_blank\");\n    })\n    .onNodeClick((node: any) => {\n      // count expanded nodes\n      node.expanded = !node.expanded;\n      const expanded_nodes = g_pages.filter((p) => p.expanded).length;\n      if (expanded_nodes === 0) {\n        // re-expand me.\n        node.expanded = true;\n      }\n      Graph.graphData(build_graph_data(g_pages));\n\n      // center on node in 300 ms, post graph update\n      setTimeout(() => {\n        center_on_node(node);\n      }, 300);\n    });\n\n  const initialNode = node_for_url(g_pages, initial_expanded_url);\n  if (initialNode) {\n    center_on_node(initialNode);\n  } else {\n    console.log(\"Initial node not found, cannot center\");\n  }\n\n  // set click handler for center control\n  const centerControl = document.getElementById(\"center_control\");\n  if (centerControl) {\n    centerControl.addEventListener(\"click\", () => {\n      if (g_last_detail_node) {\n        center_on_node(g_last_detail_node);\n      } else {\n        console.log(\"No last detail node to center on\");\n      }\n    });\n  } else {\n    console.log(\"Center control element not found\");\n  }\n\n  // set click handler for goto control\n  const gotoControl = document.getElementById(\"goto_control\");\n  if (gotoControl) {\n    gotoControl.addEventListener(\"click\", open_goto_control);\n  }\n\n  // set click handler for collapse control\n  const collapseControl = document.getElementById(\"collapse_control\");\n  if (collapseControl) {\n    collapseControl.addEventListener(\"click\", collapse_all_except_active);\n  }\n}\n\n// Make initializeGraph available in the global scope if needed for testing\ndeclare global {\n  interface Window {\n    initializeGraph: () => Promise<void>;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.initializeGraph = initializeGraph;\n}\n","export function getCurrentBranch(): string | null {\n  // Get branch info from global variable\n  const branch = (window as any).__GIT_BRANCH__;\n  if (branch) {\n    console.log(\"Branch from global variable:\", branch);\n    return branch;\n  }\n  \n  console.log(\"Branch info not found\");\n  return null;\n}\n\nexport function isDevServer(): boolean {\n  return window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\";\n}\n\nexport function getCurrentPort(): string {\n  return window.location.port || \"80\";\n}\n\nexport function initDevInfo(): void {\n  if (!isDevServer()) {\n    console.log(\"Not on dev server, skipping dev info\");\n    return;\n  }\n\n  console.log(\"Dev server detected, initializing dev info...\");\n  const branch = getCurrentBranch();\n  const port = getCurrentPort();\n  \n  console.log(\"Dev info - Branch:\", branch, \"Port:\", port);\n\n  // Show banner if we have branch info and it's not main, or if we're on a non-standard port\n  if ((branch && branch !== \"main\") || port !== \"4000\") {\n    const devInfoElement = document.createElement(\"div\");\n    devInfoElement.id = \"dev-info-banner\";\n    devInfoElement.style.cssText = `\n      position: fixed;\n      top: 60px;\n      left: 0;\n      right: 0;\n      background-color: #2c2c2c;\n      color: white;\n      padding: 8px 16px;\n      font-size: 14px;\n      font-weight: bold;\n      z-index: 1000;\n      text-align: center;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n    `;\n    \n    let infoContent = '';\n    if (branch) {\n      infoContent += `<i class=\"fas fa-code-branch\"></i> Branch: <code style=\"background: black; color: white; padding: 2px 6px; border-radius: 3px;\">${branch}</code>`;\n    }\n    if (branch && port) {\n      infoContent += ' | ';\n    }\n    infoContent += `<i class=\"fas fa-server\"></i> Port: <code style=\"background: black; color: white; padding: 2px 6px; border-radius: 3px;\">${port}</code>`;\n    \n    devInfoElement.innerHTML = infoContent;\n    document.body.appendChild(devInfoElement);\n\n    // Adjust body padding to account for the banner\n    const currentPaddingTop = parseInt(window.getComputedStyle(document.body).paddingTop) || 0;\n    document.body.style.paddingTop = `${currentPaddingTop + 40}px`;\n  }\n}","/**\n * Header Copy Link Feature\n * Adds a copy link icon to headers that allows users to copy the URL with anchor\n * Handles domain remapping from idvork.in to idvorkin.azurewebsites.net\n */\n\nimport { makeRedirectUrl } from \"./shared\";\n\ninterface CopyLinkOptions {\n  iconClass?: string;\n  tooltipDuration?: number;\n  domainMapping?: {\n    from: string;\n    to: string;\n  };\n}\n\nconst DEFAULT_OPTIONS: CopyLinkOptions = {\n  iconClass: \"header-copy-link\",\n  tooltipDuration: 2000,\n  domainMapping: {\n    from: \"idvork.in/\",\n    to: \"idvorkin.azurewebsites.net/\",\n  },\n};\n\n/**\n * Creates the copy link icon element\n */\nfunction createCopyLinkIcon(options: CopyLinkOptions): HTMLElement {\n  const icon = document.createElement(\"span\");\n  icon.className = options.iconClass || DEFAULT_OPTIONS.iconClass || \"\";\n  icon.title = \"Share this section\";\n  icon.style.cursor = \"pointer\";\n  icon.style.marginLeft = \"0.5rem\";\n  icon.style.opacity = \"0\";\n  icon.style.transition = \"opacity 0.2s ease\";\n  icon.style.fontSize = \"0.8em\";\n  icon.style.userSelect = \"none\";\n  \n  // Add accessibility attributes\n  icon.setAttribute('role', 'button');\n  icon.setAttribute('tabindex', '0');\n  icon.setAttribute('aria-label', 'Share this section');\n  \n  // iOS-style share icon - box with upward arrow\n  icon.innerHTML = `<svg width=\"16\" height=\"20\" viewBox=\"0 0 16 20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" style=\"vertical-align: middle;\">\n    <!-- Upward arrow -->\n    <path d=\"M8 2 L8 12\"/>\n    <path d=\"M4 5.5 L8 2 L12 5.5\"/>\n    <!-- Box -->\n    <path d=\"M3 8 L3 17 Q3 18 4 18 L12 18 Q13 18 13 17 L13 8\"/>\n  </svg>`;\n\n  return icon;\n}\n\n/**\n * Creates the GitHub issue icon element with Font Awesome fallback\n */\nfunction createGitHubIssueIcon(): HTMLElement {\n  const icon = document.createElement(\"span\");\n  icon.className = \"header-github-issue\";\n  icon.title = \"Create GitHub issue for this section\";\n  icon.style.cursor = \"pointer\";\n  icon.style.marginLeft = \"0.5rem\";\n  icon.style.opacity = \"0\";\n  icon.style.transition = \"opacity 0.2s ease\";\n  icon.style.fontSize = \"0.8em\";\n  icon.style.userSelect = \"none\";\n  \n  // Add accessibility attributes\n  icon.setAttribute('role', 'button');\n  icon.setAttribute('tabindex', '0');\n  icon.setAttribute('aria-label', 'Create GitHub issue for this section');\n  \n  // Check if Font Awesome is available (more robust detection)\n  const hasFontAwesome = !!(\n    document.querySelector('link[href*=\"font-awesome\"]') || \n    document.querySelector('script[src*=\"font-awesome\"]') ||\n    document.querySelector('.fa, .fab, .fas, .far') ||\n    // Check for inline styles that might include Font Awesome\n    Array.from(document.styleSheets).some(sheet => {\n      try {\n        return sheet.href && sheet.href.includes('font-awesome');\n      } catch (e) {\n        return false; // Cross-origin stylesheets may throw\n      }\n    })\n  );\n  \n  if (hasFontAwesome) {\n    const faIcon = document.createElement('i');\n    faIcon.className = 'fab fa-github';\n    icon.appendChild(faIcon);\n  } else {\n    // Fallback to text or emoji\n    icon.textContent = '⚠️';\n  }\n\n  return icon;\n}\n\n/**\n * Creates an inline popup editor for adding comments (safe from XSS)\n */\nfunction createIssuePopup(headerId: string, headerText: string): HTMLElement {\n  const popup = document.createElement(\"div\");\n  popup.className = \"github-issue-popup\";\n  popup.style.display = \"none\";\n  popup.id = `github-issue-popup-${headerId}`;\n  \n  // Create structure safely without innerHTML to prevent XSS\n  const content = document.createElement(\"div\");\n  content.className = \"github-issue-popup-content\";\n  \n  // Header\n  const header = document.createElement(\"div\");\n  header.className = \"github-issue-popup-header\";\n  \n  const h4 = document.createElement(\"h4\");\n  h4.textContent = `Report Issue: ${headerText}`; // Safe from XSS\n  \n  const closeBtn = document.createElement(\"button\");\n  closeBtn.className = \"github-issue-popup-close\";\n  closeBtn.title = \"Close\";\n  closeBtn.textContent = \"×\";\n  \n  header.appendChild(h4);\n  header.appendChild(closeBtn);\n  \n  // Body\n  const body = document.createElement(\"div\");\n  body.className = \"github-issue-popup-body\";\n  \n  // Title input\n  const titleLabel = document.createElement(\"label\");\n  titleLabel.setAttribute(\"for\", `issue-title-${headerId}`);\n  titleLabel.textContent = \"Issue Title:\";\n  \n  const titleInput = document.createElement(\"input\");\n  titleInput.type = \"text\";\n  titleInput.id = `issue-title-${headerId}`;\n  titleInput.className = \"github-issue-title\";\n  titleInput.placeholder = \"Brief title for the issue\";\n  \n  // Description textarea\n  const descLabel = document.createElement(\"label\");\n  descLabel.setAttribute(\"for\", `issue-comment-${headerId}`);\n  descLabel.textContent = \"Description:\";\n  \n  const descTextarea = document.createElement(\"textarea\");\n  descTextarea.id = `issue-comment-${headerId}`;\n  descTextarea.className = \"github-issue-comment\";\n  descTextarea.placeholder = \"Describe the issue with this section...\";\n  descTextarea.rows = 4;\n  \n  // Buttons\n  const buttonsDiv = document.createElement(\"div\");\n  buttonsDiv.className = \"github-issue-popup-buttons\";\n  \n  const submitBtn = document.createElement(\"button\");\n  submitBtn.className = \"github-issue-submit\";\n  submitBtn.textContent = \"Create Issue on GitHub\";\n  \n  const cancelBtn = document.createElement(\"button\");\n  cancelBtn.className = \"github-issue-cancel\";\n  cancelBtn.textContent = \"Cancel\";\n  \n  buttonsDiv.appendChild(submitBtn);\n  buttonsDiv.appendChild(cancelBtn);\n  \n  // Hint\n  const hintDiv = document.createElement(\"div\");\n  hintDiv.className = \"github-issue-popup-hint\";\n  const small = document.createElement(\"small\");\n  small.textContent = \"Tip: Press Ctrl+Enter (Cmd+Enter on Mac) to submit\";\n  hintDiv.appendChild(small);\n  \n  // Assemble body\n  body.appendChild(titleLabel);\n  body.appendChild(titleInput);\n  body.appendChild(descLabel);\n  body.appendChild(descTextarea);\n  body.appendChild(buttonsDiv);\n  body.appendChild(hintDiv);\n  \n  // Assemble popup\n  content.appendChild(header);\n  content.appendChild(body);\n  popup.appendChild(content);\n  \n  return popup;\n}\n\n/**\n * Shows the issue popup near the header\n */\nfunction showIssuePopup(popup: HTMLElement, header: HTMLElement): void {\n  // Hide any other open popups\n  document.querySelectorAll(\".github-issue-popup\").forEach(p => {\n    (p as HTMLElement).style.display = \"none\";\n  });\n  \n  // Position the popup near the header\n  popup.style.display = \"block\";\n  popup.style.position = \"absolute\";\n  popup.style.zIndex = \"1000\";\n  \n  // Get header position\n  const rect = header.getBoundingClientRect();\n  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n  \n  popup.style.top = (rect.bottom + scrollTop + 10) + \"px\";\n  popup.style.left = (rect.left + scrollLeft) + \"px\";\n  \n  // Focus on the title input\n  const titleInput = popup.querySelector(\".github-issue-title\") as HTMLInputElement;\n  if (titleInput) {\n    titleInput.focus();\n  }\n}\n\n/**\n * Hides the issue popup\n */\nfunction hideIssuePopup(popup: HTMLElement): void {\n  popup.style.display = \"none\";\n  // Clear the textarea\n  const textarea = popup.querySelector(\".github-issue-comment\") as HTMLTextAreaElement;\n  if (textarea) {\n    textarea.value = \"\";\n  }\n}\n\n/**\n * Shows a temporary tooltip indicating the link was copied\n */\nfunction showCopiedTooltip(element: HTMLElement, duration = 2000): void {\n  // Remove any existing tooltip first\n  if (typeof document !== \"undefined\" && document.querySelector) {\n    const existingTooltip = document.querySelector(\".copy-link-tooltip\");\n    if (existingTooltip) {\n      existingTooltip.remove();\n    }\n  }\n\n  const tooltip = document.createElement(\"span\");\n  tooltip.className = \"copy-link-tooltip\";\n  tooltip.textContent = \"Copied!\";\n  tooltip.style.position = \"absolute\";\n  tooltip.style.backgroundColor = \"#333\";\n  tooltip.style.color = \"white\";\n  tooltip.style.padding = \"4px 8px\";\n  tooltip.style.borderRadius = \"4px\";\n  tooltip.style.fontSize = \"12px\";\n  tooltip.style.zIndex = \"1000\";\n  tooltip.style.marginLeft = \"10px\";\n  tooltip.style.marginTop = \"-5px\";\n\n  element.parentElement?.appendChild(tooltip);\n\n  setTimeout(() => {\n    tooltip.remove();\n  }, duration);\n}\n\n/**\n * Builds a breadcrumb from the page name and header hierarchy\n */\nfunction buildBreadcrumbFrom(header: HTMLElement | null): string {\n  if (!header) return \"\";\n  \n  // Get the page name from URL\n  const pathname = window.location.pathname;\n  const pageName = pathname.replace(/^\\//, \"\").replace(/\\.html$/, \"\") || \"index\";\n  \n  // Convert page name to readable format (replace hyphens with spaces)\n  const readablePageName = pageName.replace(/-/g, ' ');\n  \n  // Build header hierarchy\n  const headerHierarchy: string[] = [];\n  const tagName = header.tagName;\n  const headerLevel = parseInt(tagName.substring(1)); // Get number from H1, H2, etc.\n  \n  // Get the current header's text\n  const currentHeaderText = Array.from(header.childNodes)\n    .filter(node => node.nodeType === Node.TEXT_NODE)\n    .map(node => node.textContent?.trim())\n    .join(' ')\n    .trim();\n  \n  // For H2+, find parent headers\n  if (headerLevel >= 2) {\n    // Look for parent headers by traversing backwards through the DOM\n    let prevElement = header.previousElementSibling;\n    const foundHeaders: { level: number; text: string }[] = [];\n    const seenLevels = new Set<number>();\n    \n    while (prevElement) {\n      const prevTagName = prevElement.tagName;\n      if (prevTagName && prevTagName.match(/^H[1-6]$/)) {\n        const prevLevel = parseInt(prevTagName.substring(1));\n        \n        // Only collect headers that are higher level (lower number) than current\n        // and we haven't seen this level yet (to get the most recent parent)\n        if (prevLevel < headerLevel && !seenLevels.has(prevLevel)) {\n          const prevHeaderText = Array.from(prevElement.childNodes)\n            .filter(node => node.nodeType === Node.TEXT_NODE)\n            .map(node => node.textContent?.trim())\n            .join(' ')\n            .trim();\n          \n          if (prevHeaderText) {\n            foundHeaders.push({ level: prevLevel, text: prevHeaderText });\n            seenLevels.add(prevLevel);\n          }\n          \n          // If we found an H1, we can stop (top level)\n          if (prevLevel === 1) break;\n        }\n      }\n      prevElement = prevElement.previousElementSibling;\n    }\n    \n    // Add headers in hierarchical order (H1 > H2 > ...)\n    foundHeaders.sort((a, b) => a.level - b.level);\n    foundHeaders.forEach(h => headerHierarchy.push(h.text));\n  }\n  \n  // Add current header\n  headerHierarchy.push(currentHeaderText);\n  \n  // Build the breadcrumb string with better formatting\n  let breadcrumb = `[${readablePageName}]`;\n  if (headerHierarchy.length > 0) {\n    // Limit to 3 levels max for readability\n    const limitedHierarchy = headerHierarchy.slice(0, 3);\n    breadcrumb += `: ${limitedHierarchy.join(' > ')}`;\n    \n    // Add ellipsis if there are more levels\n    if (headerHierarchy.length > 3) {\n      breadcrumb += ' ...';\n    }\n  }\n  \n  return breadcrumb;\n}\n\n/**\n * Transforms the URL according to the domain mapping rules\n */\nfunction transformUrl(url: string, options: CopyLinkOptions): string {\n  let transformedUrl = url;\n\n  // Always transform localhost to production domain\n  transformedUrl = transformedUrl.replace(\"localhost:4000/\", \"idvorkin.azurewebsites.net/\");\n\n  // Also handle the production domain mapping if configured\n  if (options.domainMapping) {\n    transformedUrl = transformedUrl.replace(options.domainMapping.from, options.domainMapping.to);\n  }\n\n  // Extract just the path and anchor\n  const urlObj = new URL(transformedUrl);\n  const pathname = urlObj.pathname.replace(/^\\//, \"\").replace(/\\.html$/, \"\") || \"index\";\n  const anchor = urlObj.hash.replace(\"#\", \"\");\n  \n  // Return path#anchor format for tinyurl\n  return anchor ? `${pathname}#${anchor}` : pathname;\n}\n\n/**\n * Shares or copies the header link based on device capabilities\n */\nasync function shareOrCopyHeaderLink(headerId: string, options: CopyLinkOptions): Promise<boolean> {\n  try {\n    // Build the URL using tinyurl redirect format\n    const currentUrl = window.location.href;\n    const anchorUrl = currentUrl.includes(\"#\") \n      ? currentUrl.replace(/#.*/, `#${headerId}`)\n      : `${currentUrl}#${headerId}`;\n    \n    // Transform the URL for tinyurl redirect  \n    const transformedUrl = transformUrl(anchorUrl, options);\n    const tinyUrl = `https://tinyurl.com/igor-blog/?path=${encodeURIComponent(transformedUrl)}`;\n    \n    // Get header text for share title (clean it to remove button text)\n    const header = document.getElementById(headerId);\n    // Get just the text content of the header, excluding child elements\n    const headerText = header ? \n      Array.from(header.childNodes)\n        .filter(node => node.nodeType === Node.TEXT_NODE)\n        .map(node => node.textContent?.trim())\n        .join(' ')\n        .trim() : \"\";\n    const shareTitle = `${headerText} - Igor's Blog`;\n    \n    // Get preview text for the section\n    const previewText = getPreviewText(headerId);\n    \n    // Build breadcrumb \"From\" line\n    const breadcrumbFrom = buildBreadcrumbFrom(header);\n    \n    // Create share text with preview\n    let shareText = `From: ${breadcrumbFrom} ...`;\n    if (previewText) {\n      shareText = `From: ${breadcrumbFrom} ...\\n\\n${previewText}`;\n    }\n    \n    // Check if this is a mobile device\n    const isMobile = /Mobi|Android|iPhone|iPad|iPod/i.test(navigator.userAgent);\n    \n    // Use native share only on mobile devices that support it\n    if (navigator.share && isMobile) {\n      try {\n        await navigator.share({\n          title: shareTitle,\n          text: shareText,\n          url: tinyUrl\n        });\n        console.log(`📱 Shared via native share: ${tinyUrl}`);\n        return true; // Indicates share was successful\n      } catch (shareError) {\n        // User cancelled share or share failed, fall through to clipboard\n        console.log(\"Share cancelled or failed, falling back to clipboard\", shareError);\n      }\n    }\n    \n    // For clipboard copy, format with preview text\n    let clipboardText = tinyUrl;\n    if (previewText) {\n      // Format as: From: Title, Preview, URL (similar to social media shares)\n      clipboardText = `From: ${breadcrumbFrom} ...\\n\\n${previewText}\\n\\n${tinyUrl}`;\n    }\n    \n    // Fallback to clipboard copy for desktop or if share fails\n    await navigator.clipboard.writeText(clipboardText);\n    console.log(`📋 Copied to clipboard with preview: ${clipboardText.substring(0, 100)}...`);\n    return false; // Indicates copy was used instead of share\n    \n  } catch (error) {\n    console.error(\"Failed to share/copy header link:\", error);\n\n    // Fallback: use textarea method if clipboard API fails\n    try {\n      const currentUrl = window.location.href;\n      const anchorUrl = currentUrl.includes(\"#\") \n        ? currentUrl.replace(/#.*/, `#${headerId}`)\n        : `${currentUrl}#${headerId}`;\n      \n      const transformedUrl = transformUrl(anchorUrl, options);\n      const tinyUrl = `https://tinyurl.com/igor-blog/?path=${encodeURIComponent(transformedUrl)}`;\n      \n      // Get preview text for fallback\n      const header = document.getElementById(headerId);\n      const breadcrumbFrom = buildBreadcrumbFrom(header);\n      const previewText = getPreviewText(headerId);\n      \n      let clipboardText = tinyUrl;\n      if (previewText) {\n        clipboardText = `From: ${breadcrumbFrom} ...\\n\\n${previewText}\\n\\n${tinyUrl}`;\n      }\n      \n      // Use textarea fallback for copying\n      const textArea = document.createElement(\"textarea\");\n      textArea.value = clipboardText;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(textArea);\n      \n      console.log(`📋 Copied with preview (fallback): ${clipboardText.substring(0, 100)}...`);\n      return false;\n    } catch (fallbackError) {\n      console.error(\"Failed to copy URL even with fallback:\", fallbackError);\n      throw fallbackError;\n    }\n  }\n}\n\n/**\n * Gets or creates an ID for a header element\n */\nfunction getOrCreateHeaderId(header: HTMLElement): string {\n  if (header.id) {\n    return header.id;\n  }\n\n  // Create an ID from the header text\n  const text = header.textContent || \"\";\n  const id = text\n    .toLowerCase()\n    .replace(/[^\\w\\s-]/g, \"\") // Remove special characters\n    .replace(/\\s+/g, \"-\") // Replace spaces with hyphens\n    .replace(/-+/g, \"-\") // Replace multiple hyphens with single\n    .replace(/^-|-$/g, \"\"); // Remove leading/trailing hyphens\n\n  // Ensure uniqueness\n  let uniqueId = id;\n  let counter = 1;\n  while (document.getElementById(uniqueId)) {\n    uniqueId = `${id}-${counter}`;\n    counter++;\n  }\n\n  header.id = uniqueId;\n  return uniqueId;\n}\n\n/**\n * Gets the first non-empty paragraph of content after a header\n */\nfunction getFirstParagraphAfterHeader(header: HTMLElement): string {\n  let nextElement = header.nextElementSibling;\n  \n  // Look for the first non-empty content before the next header\n  while (nextElement) {\n    // Stop if we hit another header\n    if (nextElement.tagName.match(/^H[1-6]$/)) {\n      break;\n    }\n    \n    // Check if it's a paragraph with actual content\n    if (nextElement.tagName === 'P') {\n      const text = (nextElement.textContent || '').trim();\n      if (text.length > 0) {\n        // Found non-empty paragraph - truncate if too long\n        return text.length > 500 ? text.substring(0, 497) + '...' : text;\n      }\n    }\n    \n    // If it's a list (UL or OL), get text from the list items\n    if (nextElement.tagName === 'UL' || nextElement.tagName === 'OL') {\n      const listItems = nextElement.querySelectorAll('li');\n      const itemTexts: string[] = [];\n      let totalLength = 0;\n      \n      for (const li of Array.from(listItems)) {\n        // Only get direct text content, not nested lists\n        const text = Array.from(li.childNodes)\n          .filter(node => node.nodeType === Node.TEXT_NODE || \n                         (node.nodeType === Node.ELEMENT_NODE && \n                          (node as Element).tagName !== 'UL' && \n                          (node as Element).tagName !== 'OL'))\n          .map(node => (node.textContent || '').trim())\n          .join(' ')\n          .trim();\n        \n        if (text.length > 0) {\n          itemTexts.push(`• ${text}`);\n          totalLength += text.length;\n          if (totalLength > 400) break; // Stop if we have enough text\n        }\n      }\n      \n      if (itemTexts.length > 0) {\n        // Join with newlines for better formatting\n        const combinedText = itemTexts.join('\\n');\n        return combinedText.length > 500 ? combinedText.substring(0, 497) + '...' : combinedText;\n      }\n    }\n    \n    nextElement = nextElement.nextElementSibling;\n  }\n  \n  return '';\n}\n\n/**\n * Truncates text to a maximum length, preserving word boundaries\n */\nfunction truncateText(text: string, maxLength = 400): string {\n  if (text.length <= maxLength) {\n    return text;\n  }\n  \n  // Truncate to maxLength and find the last space\n  const truncated = text.substring(0, maxLength);\n  const lastSpace = truncated.lastIndexOf(' ');\n  \n  if (lastSpace > 0) {\n    return truncated.substring(0, lastSpace) + '...';\n  }\n  \n  return truncated + '...';\n}\n\n/**\n * Extracts preview text from the page content, with anchor-aware logic\n */\nfunction getPreviewText(headerId?: string): string {\n  // If we have a specific header ID (anchor), try to get text after it\n  if (headerId) {\n    const header = document.getElementById(headerId);\n    if (header) {\n      // Try to get text from the first paragraph after the header\n      const paragraphText = getFirstParagraphAfterHeader(header);\n      if (paragraphText) {\n        return truncateText(paragraphText);\n      }\n      \n      // Try to get text from any content elements after the header\n      let nextElement = header.nextElementSibling;\n      const textParts: string[] = [];\n      let charCount = 0;\n      \n      while (nextElement && charCount < 400) {\n        // Stop if we hit another header\n        if (nextElement.tagName.match(/^H[1-6]$/)) {\n          break;\n        }\n        \n        // Get text from various content elements\n        if (nextElement.tagName === 'P' || \n            nextElement.tagName === 'LI' || \n            nextElement.tagName === 'BLOCKQUOTE' ||\n            nextElement.tagName === 'DIV') {\n          const text = (nextElement.textContent || '').trim();\n          if (text.length > 0) {\n            textParts.push(text);\n            charCount += text.length;\n          }\n        }\n        \n        nextElement = nextElement.nextElementSibling;\n      }\n      \n      if (textParts.length > 0) {\n        return truncateText(textParts.join(' '));\n      }\n    }\n  }\n  \n  // Fallback: try to find preview text from various content areas\n  const contentSelectors = [\n    'article',\n    'main',\n    '.content',\n    '.post-content',\n    '.entry-content',\n    '#content-holder',\n    '.content-holder'\n  ];\n  \n  for (const selector of contentSelectors) {\n    const contentArea = document.querySelector(selector);\n    if (contentArea) {\n      // Find the first paragraph in the content area\n      const firstParagraph = contentArea.querySelector('p');\n      if (firstParagraph) {\n        const text = (firstParagraph.textContent || '').trim();\n        if (text.length > 0) {\n          return truncateText(text);\n        }\n      }\n    }\n  }\n  \n  // Last resort: find the first paragraph on the page\n  const firstParagraph = document.querySelector('p');\n  if (firstParagraph) {\n    const text = (firstParagraph.textContent || '').trim();\n    if (text.length > 0) {\n      return truncateText(text);\n    }\n  }\n  \n  // If no preview text found, return empty string\n  return '';\n}\n\n/**\n * Creates a GitHub issue URL for a section with optional custom title and description\n */\nfunction createGitHubIssueUrl(\n  headerId: string, \n  headerText: string, \n  customTitle?: string, \n  customDescription?: string,\n  header?: HTMLElement\n): string {\n  // Get the current page path from the URL\n  const pathname = window.location.pathname;\n  // Remove leading slash and .html extension if present\n  const pagePath = pathname.replace(/^\\//, \"\").replace(/\\.html$/, \"\");\n  \n  // Get the actual source file path from the meta tag (set by Jekyll)\n  const metaTag = document.querySelector('meta[property=\"markdown-path\"]');\n  const sourceFile = metaTag ? metaTag.getAttribute(\"content\") : `${pagePath || \"index\"}.md`;\n  \n  // Construct the GitHub issue URL\n  const repoUrl = \"https://github.com/idvorkin/idvorkin.github.io\";\n  \n  // Format title as: page/section: custom title\n  const formattedTitle = customTitle \n    ? `${pagePath || \"index\"}/${headerId}: ${customTitle}`\n    : `${pagePath || \"index\"}/${headerId}: Issue with ${headerText}`;\n  \n  const issueTitle = encodeURIComponent(formattedTitle);\n  \n  // Use description if provided, otherwise use title as description\n  const description = customDescription || customTitle || `Issue with section: ${headerText}`;\n  \n  // Get first paragraph of content if header is provided\n  const firstParagraph = header ? getFirstParagraphAfterHeader(header) : '';\n  \n  // Format location as a single line with hyperlinks\n  const locationLine = `📍 [${pagePath || \"index\"}](https://idvorkin.azurewebsites.net/${pagePath})/[${headerId}](https://idvorkin.azurewebsites.net/${pagePath}/${headerId}) - [[GitHub]](${repoUrl}/blob/main/${sourceFile}#${headerId})`;\n  \n  // Format the issue body with location at top, then description, then content excerpt\n  let issueBodyContent = `${locationLine}\\n\\n` +\n    `## Description\\n\\n` +\n    `${description}\\n\\n`;\n  \n  // Add content excerpt with section heading if available\n  if (firstParagraph) {\n    issueBodyContent += `## Content Excerpt\\n\\n` +\n      `#### ${headerText}\\n\\n` +\n      `> ${firstParagraph}\\n\\n`;\n  }\n  \n  const issueBody = encodeURIComponent(issueBodyContent);\n  \n  return `${repoUrl}/issues/new?title=${issueTitle}&body=${issueBody}`;\n}\n\n// Store cleanup functions for each header\nconst headerCleanupFunctions = new WeakMap<HTMLElement, (() => void)[]>();\n\n// Store popup references for lazy loading\nconst headerPopups = new WeakMap<HTMLElement, HTMLElement>();\n\n// Track all headers for cleanup purposes\nconst trackedHeaders = new Set<HTMLElement>();\n\n/**\n * Creates and shows popup lazily when needed\n */\nfunction getOrCreatePopup(header: HTMLElement, headerId: string): HTMLElement {\n  let popup = headerPopups.get(header);\n  \n  if (!popup) {\n    popup = createIssuePopup(headerId, header.textContent || \"\");\n    document.body.appendChild(popup);\n    headerPopups.set(header, popup);\n    \n    // Setup popup event handlers\n    setupPopupEventHandlers(popup, header, headerId);\n  }\n  \n  return popup;\n}\n\n/**\n * Sets up event handlers for a popup\n */\nfunction setupPopupEventHandlers(popup: HTMLElement, header: HTMLElement, headerId: string): void {\n  const cleanupFunctions: (() => void)[] = [];\n  \n  // Handle close button\n  const closeBtn = popup.querySelector(\".github-issue-popup-close\");\n  if (closeBtn) {\n    const closeHandler = () => hideIssuePopup(popup);\n    closeBtn.addEventListener(\"click\", closeHandler);\n    cleanupFunctions.push(() => closeBtn.removeEventListener(\"click\", closeHandler));\n  }\n  \n  // Handle cancel button\n  const cancelBtn = popup.querySelector(\".github-issue-cancel\");\n  if (cancelBtn) {\n    const cancelHandler = () => hideIssuePopup(popup);\n    cancelBtn.addEventListener(\"click\", cancelHandler);\n    cleanupFunctions.push(() => cancelBtn.removeEventListener(\"click\", cancelHandler));\n  }\n  \n  // Function to submit the issue\n  const submitIssue = () => {\n    const titleInput = popup.querySelector(\".github-issue-title\") as HTMLInputElement;\n    const commentTextarea = popup.querySelector(\".github-issue-comment\") as HTMLTextAreaElement;\n    \n    const customTitle = titleInput?.value || \"\";\n    const customDescription = commentTextarea?.value || \"\";\n    \n    const issueUrl = createGitHubIssueUrl(headerId, header.textContent || \"\", customTitle, customDescription, header);\n    window.open(issueUrl, \"_blank\");\n    \n    hideIssuePopup(popup);\n  };\n  \n  // Handle submit button\n  const submitBtn = popup.querySelector(\".github-issue-submit\");\n  if (submitBtn) {\n    submitBtn.addEventListener(\"click\", submitIssue);\n    cleanupFunctions.push(() => submitBtn.removeEventListener(\"click\", submitIssue));\n  }\n  \n  // Handle keyboard shortcuts (Ctrl/Cmd + Enter)\n  const titleInput = popup.querySelector(\".github-issue-title\") as HTMLInputElement;\n  const commentTextarea = popup.querySelector(\".github-issue-comment\") as HTMLTextAreaElement;\n  \n  const handleKeydown = (event: KeyboardEvent) => {\n    if ((event.ctrlKey || event.metaKey) && event.key === \"Enter\") {\n      event.preventDefault();\n      submitIssue();\n    }\n  };\n  \n  if (titleInput) {\n    titleInput.addEventListener(\"keydown\", handleKeydown);\n    cleanupFunctions.push(() => titleInput.removeEventListener(\"keydown\", handleKeydown));\n  }\n  if (commentTextarea) {\n    commentTextarea.addEventListener(\"keydown\", handleKeydown);\n    cleanupFunctions.push(() => commentTextarea.removeEventListener(\"keydown\", handleKeydown));\n  }\n  \n  // Store cleanup functions for this popup\n  const existingCleanup = headerCleanupFunctions.get(header) || [];\n  headerCleanupFunctions.set(header, [...existingCleanup, ...cleanupFunctions]);\n}\n\n/**\n * Adds copy link functionality to a single header\n */\nfunction addCopyLinkToHeader(header: HTMLElement, options: CopyLinkOptions): void {\n  // Check if this header already has a copy link\n  const existingCopyLink = header.querySelector(`.${options.iconClass || DEFAULT_OPTIONS.iconClass}`);\n  if (existingCopyLink) {\n    return; // Skip if copy link already exists\n  }\n\n  const headerId = getOrCreateHeaderId(header);\n  const copyIcon = createCopyLinkIcon(options);\n  const githubIcon = createGitHubIssueIcon();\n  const cleanupFunctions: (() => void)[] = [];\n\n  // Add click handler for share/copy link\n  const shareClickHandler = async (event: Event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const wasShared = await shareOrCopyHeaderLink(headerId, options);\n    // Only show tooltip if we copied (not if we used native share)\n    if (!wasShared) {\n      showCopiedTooltip(copyIcon, options.tooltipDuration);\n    }\n  };\n  copyIcon.addEventListener(\"click\", shareClickHandler);\n  cleanupFunctions.push(() => copyIcon.removeEventListener(\"click\", shareClickHandler));\n  \n  // Add keyboard support for accessibility\n  const keyboardHandler = (event: KeyboardEvent) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      shareClickHandler(event);\n    }\n  };\n  copyIcon.addEventListener(\"keydown\", keyboardHandler);\n  cleanupFunctions.push(() => copyIcon.removeEventListener(\"keydown\", keyboardHandler));\n\n  // Add click handler for GitHub issue icon to show popup (lazy loading)\n  const githubClickHandler = (event: Event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    const popup = getOrCreatePopup(header, headerId);\n    showIssuePopup(popup, header);\n  };\n  githubIcon.addEventListener(\"click\", githubClickHandler);\n  cleanupFunctions.push(() => githubIcon.removeEventListener(\"click\", githubClickHandler));\n  \n  // Close popup when clicking outside (use capture phase to avoid conflicts)\n  const handleOutsideClick = (event: MouseEvent) => {\n    const popup = headerPopups.get(header);\n    if (popup && !popup.contains(event.target as Node) && \n        event.target !== githubIcon && \n        !githubIcon.contains(event.target as Node) &&\n        popup.style.display !== \"none\") {\n      hideIssuePopup(popup);\n    }\n  };\n  \n  // Add slight delay to avoid immediate closing\n  const timeoutId = setTimeout(() => {\n    document.addEventListener(\"click\", handleOutsideClick, true);\n    cleanupFunctions.push(() => document.removeEventListener(\"click\", handleOutsideClick, true));\n  }, 100);\n  cleanupFunctions.push(() => clearTimeout(timeoutId));\n\n  // Append the icons to the header\n  header.appendChild(copyIcon);\n  header.appendChild(githubIcon);\n\n  // Add hover effects to the header\n  const mouseEnterHandler = () => {\n    copyIcon.style.opacity = \"1\";\n    githubIcon.style.opacity = \"1\";\n  };\n  const mouseLeaveHandler = () => {\n    copyIcon.style.opacity = \"0\";\n    githubIcon.style.opacity = \"0\";\n  };\n  \n  header.addEventListener(\"mouseenter\", mouseEnterHandler);\n  header.addEventListener(\"mouseleave\", mouseLeaveHandler);\n  cleanupFunctions.push(() => {\n    header.removeEventListener(\"mouseenter\", mouseEnterHandler);\n    header.removeEventListener(\"mouseleave\", mouseLeaveHandler);\n  });\n  \n  // Store cleanup functions for this header\n  headerCleanupFunctions.set(header, cleanupFunctions);\n  trackedHeaders.add(header);\n}\n\n/**\n * Cleans up all event listeners and popups\n */\nexport function cleanupHeaderCopyLinks(): void {\n  // Clean up all stored event listeners\n  trackedHeaders.forEach((header) => {\n    const cleanupFns = headerCleanupFunctions.get(header);\n    if (cleanupFns) {\n      cleanupFns.forEach(fn => fn());\n    }\n    \n    // Remove popup if exists\n    const popup = headerPopups.get(header);\n    if (popup) {\n      popup.remove();\n    }\n  });\n  \n  // Clear the tracked headers set\n  trackedHeaders.clear();\n  \n  // Reset initialization flag\n  isHeaderCopyLinksInitialized = false;\n}\n\n/**\n * Initializes the copy link feature for all headers in the content\n */\nexport function initHeaderCopyLinks(customOptions: Partial<CopyLinkOptions> = {}): void {\n  const options: CopyLinkOptions = { ...DEFAULT_OPTIONS, ...customOptions };\n\n  // Find all headers on the page (including H1)\n  // Some H1s are outside content-holder, so search the entire document\n  const allHeaders = document.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n\n  for (const header of Array.from(allHeaders)) {\n    addCopyLinkToHeader(header as HTMLElement, options);\n  }\n}\n\n/**\n * Adds CSS styles for the copy link feature\n */\nexport function addHeaderCopyLinkStyles(): void {\n  const styleId = \"header-copy-link-styles\";\n\n  // Check if styles already exist\n  if (document.getElementById(styleId)) {\n    return;\n  }\n\n  const style = document.createElement(\"style\");\n  style.id = styleId;\n  style.textContent = `\n    .header-copy-link,\n    .header-github-issue {\n      opacity: 0;\n      margin-left: 0.5rem;\n      transition: opacity 0.2s ease;\n      cursor: pointer;\n      user-select: none;\n      font-size: 0.8em;\n      color: #6c757d;\n      text-decoration: none;\n    }\n    \n    .header-copy-link:hover {\n      color: #007bff;\n    }\n    \n    .header-github-issue:hover {\n      color: #dc3545;\n    }\n    \n    h1:hover .header-copy-link,\n    h2:hover .header-copy-link,\n    h3:hover .header-copy-link,\n    h4:hover .header-copy-link,\n    h5:hover .header-copy-link,\n    h6:hover .header-copy-link,\n    h1:hover .header-github-issue,\n    h2:hover .header-github-issue,\n    h3:hover .header-github-issue,\n    h4:hover .header-github-issue,\n    h5:hover .header-github-issue,\n    h6:hover .header-github-issue {\n      opacity: 1;\n    }\n    \n    /* Ensure headers have relative positioning for tooltip placement */\n    h1, h2, h3, h4, h5, h6 {\n      position: relative;\n    }\n    \n    /* GitHub Issue Popup Styles */\n    .github-issue-popup {\n      position: absolute;\n      background: white;\n      border: 1px solid #ddd;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      width: 400px;\n      max-width: 90vw;\n      z-index: 1000;\n    }\n    \n    .github-issue-popup-content {\n      padding: 0;\n    }\n    \n    .github-issue-popup-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 12px 16px;\n      background: #f6f8fa;\n      border-bottom: 1px solid #e1e4e8;\n      border-radius: 8px 8px 0 0;\n    }\n    \n    .github-issue-popup-header h4 {\n      margin: 0;\n      font-size: 14px;\n      color: #24292e;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 350px;\n    }\n    \n    .github-issue-popup-close {\n      background: none;\n      border: none;\n      font-size: 24px;\n      color: #586069;\n      cursor: pointer;\n      padding: 0;\n      width: 24px;\n      height: 24px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    \n    .github-issue-popup-close:hover {\n      color: #24292e;\n    }\n    \n    .github-issue-popup-body {\n      padding: 16px;\n    }\n    \n    .github-issue-popup-body label {\n      display: block;\n      margin-bottom: 4px;\n      font-size: 13px;\n      font-weight: 600;\n      color: #24292e;\n    }\n    \n    .github-issue-title,\n    .github-issue-comment {\n      width: 100%;\n      padding: 8px 12px;\n      margin-bottom: 12px;\n      border: 1px solid #e1e4e8;\n      border-radius: 6px;\n      font-size: 14px;\n      font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif;\n      box-sizing: border-box;\n    }\n    \n    .github-issue-title:focus,\n    .github-issue-comment:focus {\n      outline: none;\n      border-color: #0366d6;\n      box-shadow: 0 0 0 3px rgba(3, 102, 214, 0.1);\n    }\n    \n    .github-issue-comment {\n      resize: vertical;\n      min-height: 80px;\n    }\n    \n    .github-issue-popup-buttons {\n      display: flex;\n      gap: 8px;\n      justify-content: flex-end;\n      margin-top: 12px;\n    }\n    \n    .github-issue-submit,\n    .github-issue-cancel {\n      padding: 6px 16px;\n      border-radius: 6px;\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      border: 1px solid;\n      transition: all 0.2s;\n    }\n    \n    .github-issue-submit {\n      background: #2ea44f;\n      color: white;\n      border-color: #2ea44f;\n    }\n    \n    .github-issue-submit:hover {\n      background: #2c974b;\n      border-color: #2c974b;\n    }\n    \n    .github-issue-cancel {\n      background: #fafbfc;\n      color: #24292e;\n      border-color: #e1e4e8;\n    }\n    \n    .github-issue-cancel:hover {\n      background: #f3f4f6;\n      border-color: #c9ced1;\n    }\n    \n    .github-issue-popup-hint {\n      margin-top: 8px;\n      text-align: center;\n      color: #586069;\n    }\n  `;\n\n  document.head.appendChild(style);\n}\n\n// Global flag to prevent multiple initializations\nlet isHeaderCopyLinksInitialized = false;\n\n/**\n * Reset the initialization flag (for testing purposes)\n */\nexport function resetHeaderCopyLinksInitialization(): void {\n  isHeaderCopyLinksInitialized = false;\n}\n\n/**\n * Main initialization function - call this to enable the feature\n */\nexport function enableHeaderCopyLinks(options: Partial<CopyLinkOptions> = {}): void {\n  // Prevent multiple initializations\n  if (isHeaderCopyLinksInitialized) {\n    return;\n  }\n\n  isHeaderCopyLinksInitialized = true;\n\n  // Add styles\n  addHeaderCopyLinkStyles();\n\n  // Initialize the feature\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      initHeaderCopyLinks(options);\n    });\n  } else {\n    initHeaderCopyLinks(options);\n  }\n}\n","/**\n * Image Zoom functionality for blog posts\n * Automatically wraps images in blog posts with GLightbox functionality\n */\n\n// Constants for retry logic\nconst MAX_RETRY_ATTEMPTS = 50;\nconst RETRY_DELAY_MS = 100;\nconst MAX_RETRY_TIME_MS = MAX_RETRY_ATTEMPTS * RETRY_DELAY_MS;\n\ndeclare global {\n  interface Window {\n    GLightbox: any;\n  }\n}\n\nexport function enableImageZoom(retryCount = 0) {\n  // Skip if running in test environment without DOM\n  if (typeof document === \"undefined\") {\n    return;\n  }\n\n  console.log(\"🖼️ Enabling image zoom functionality\");\n\n  // Wait for GLightbox to be available with retry limit\n  if (typeof window.GLightbox === \"undefined\") {\n    if (retryCount < MAX_RETRY_ATTEMPTS) {\n      // Max 5 seconds of retries (50 * 100ms)\n      console.warn(\n        `⚠️ GLightbox not found, retrying in ${RETRY_DELAY_MS}ms (attempt ${retryCount + 1}/${MAX_RETRY_ATTEMPTS})`,\n      );\n      setTimeout(() => enableImageZoom(retryCount + 1), RETRY_DELAY_MS);\n      return;\n    }\n    console.error(\n      `❌ GLightbox failed to load after ${MAX_RETRY_TIME_MS / 1000} seconds, aborting image zoom initialization`,\n    );\n    return;\n  }\n\n  // Find all images in the main content area (excluding headers, sidebars, etc.)\n  const contentSelectors = [\n    \"p img\", // Images inside paragraphs (most common in markdown)\n    \"li img\", // Images inside list items\n    \".container img\",\n    \".post-content img\",\n    \"article img\",\n    \".markdown-body img\",\n    \"main img\",\n  ];\n\n  const images = document.querySelectorAll(contentSelectors.join(\", \"));\n  console.log(`🔍 Found ${images.length} images to process`);\n\n  let processedCount = 0;\n\n  images.forEach((img, index) => {\n    const imageElement = img as HTMLImageElement;\n\n    // Skip if already wrapped in a link\n    if (imageElement.parentElement?.tagName === \"A\") {\n      console.log(`⏭️ Skipping image ${index + 1} - already wrapped`);\n      return;\n    }\n\n    // Skip tiny images (likely icons)\n    if (imageElement.naturalWidth > 0 && imageElement.naturalWidth < 100 && imageElement.naturalHeight < 100) {\n      console.log(\n        `⏭️ Skipping image ${index + 1} - too small (${imageElement.naturalWidth}x${imageElement.naturalHeight})`,\n      );\n      return;\n    }\n\n    // Create wrapper link\n    const link = document.createElement(\"a\");\n    link.href = imageElement.src;\n    link.className = \"glightbox\";\n    link.setAttribute(\"data-gallery\", \"post-images\");\n\n    // Add description from alt text if available\n    if (imageElement.alt) {\n      link.setAttribute(\"data-description\", imageElement.alt);\n    }\n\n    // Wrap the image\n    imageElement.parentNode?.insertBefore(link, imageElement);\n    link.appendChild(imageElement);\n\n    processedCount++;\n    console.log(\n      `✅ Processed image ${index + 1}: ${imageElement.src.substring(imageElement.src.lastIndexOf(\"/\") + 1)}`,\n    );\n  });\n\n  // Initialize GLightbox for all .glightbox elements (including any existing ones)\n  try {\n    const lightbox = window.GLightbox({\n      selector: \".glightbox\",\n      touchNavigation: true,\n      loop: true,\n      autoplayVideos: true,\n    });\n\n    if (processedCount > 0) {\n      console.log(`🎉 Image zoom enabled for ${processedCount} images`);\n    } else {\n      console.log(\"ℹ️ No images needed processing, but GLightbox initialized for existing elements\");\n    }\n  } catch (error) {\n    console.error(\"Error initializing GLightbox:\", error);\n  }\n}\n\n// Auto-initialize when DOM is ready\nif (typeof document !== \"undefined\") {\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", () => enableImageZoom());\n  } else {\n    // DOM already loaded, but wait a bit for dynamic content\n    setTimeout(() => enableImageZoom(), 500);\n  }\n}\n","import { add_eulogy_roles, add_imported_blog_posts } from \"./blogger_import.js\";\nimport { append_randomizer_div, get_link_info, random_from_list } from \"./index\";\n// Only include this in the html files, one per file\n// This allows code to seet things to refactor\nimport { TreeNode, add_random_prompts, add_sunburst, add_sunburst_from_dom } from \"./random-prompter\";\n\n/**\n * Class representing the Seven Habits tree structure\n */\nexport class SevenHabits {\n  /**\n   * Gets the tree structure for Seven Habits visualization\n   * @returns {TreeNode} The root node of the Seven Habits tree\n   */\n  get_tree() {\n    const root = new TreeNode({\n      name: \"7H \",\n      children: [\n        new TreeNode({ name: \"\" }),\n        new TreeNode({ name: \"Be Proactive\" }),\n        new TreeNode({ name: \"Begin with the end in mind\" }),\n        new TreeNode({ name: \"First things First\" }),\n        new TreeNode({ name: \"Think Win/Win\" }),\n        new TreeNode({ name: \"First Understand\" }),\n        new TreeNode({ name: \"Synergize\" }),\n        new TreeNode({ name: \"Sharpen the Saw\" }),\n      ],\n    });\n    return root;\n  }\n}\n\n/**\n * Class representing the Things I Enjoy tree structure\n */\nexport class ThingsIEnjoy {\n  /**\n   * Gets the tree structure for Things I Enjoy visualization\n   * @returns {TreeNode} The root node of the Things I Enjoy tree\n   */\n  get_tree() {\n    const health = new TreeNode({\n      name: \"Health\",\n      children: [{ name: \"Physical\" }, { name: \"Emotional\" }, { name: \"Cognative\" }],\n      value: 31,\n    });\n    const magic = new TreeNode({\n      name: \"Magic\",\n      children: [\n        new TreeNode({ name: \"Card Magic\" }),\n        new TreeNode({ name: \"Coin Magic\" }),\n        new TreeNode({ name: \"Band Magic\" }),\n      ],\n    });\n    const hobbies = new TreeNode({\n      name: \"Hobbies\",\n      children: [new TreeNode({ name: \"Biking\" }), new TreeNode({ name: \"Tech\" }), new TreeNode({ name: \"Juggling\" })],\n    });\n    const relationships = new TreeNode({\n      name: \"Relationships\",\n      children: [\n        new TreeNode({ name: \"Zach\" }),\n        new TreeNode({ name: \"Amelia\" }),\n        new TreeNode({ name: \"Tori\" }),\n        new TreeNode({ name: \"Friends\" }),\n      ],\n    });\n    const joy = new TreeNode({\n      name: \"Joy\",\n      children: [new TreeNode({ name: \"Balloons\" }), new TreeNode({ name: \"Joy to Others\" })],\n    });\n\n    return new TreeNode({\n      name: \"Invest in\",\n      children: [health, magic, hobbies, relationships, joy],\n    });\n  }\n}\n\n/**\n * Creates HTML for a post preview with audio player\n * @param {Object} param0 Object containing url, title, and description\n * @returns {string} HTML string for the post preview\n */\nexport function makePostPreviewHTML({ url, title, description }) {\n  // TODO: HACK: Strip to the right of Week number\n  const title_href = `<a href='${url}'}>${title}</a>`;\n  // random id for audio player\n  const id = `audio_player_${Math.floor(Math.random() * 10000000000)}`;\n  // filename is URL with '/' turned to '_'\n  const filename = url.replace(/\\//g, \"_\");\n\n  return `\n    <div>\n        <audio id='${id}'>\n          <source src=\"https://github.com/idvorkin/blob/raw/master/url_info_voices/igor/${filename}.mp3\" type=\"audio/mp3\">\n        </audio>\n      ${title_href}:  <b><a class='lead' onclick=\"toggle_play_pause('${id}')\">🔈</a></b> ${description}\n    </div>\n  `;\n}\n\n/**\n * Generates HTML for a random post\n * @param {Function} linkInfoProvider Function to get link info (default: get_link_info)\n * @param {Function} randomSelector Function to get a random item (default: random_from_list)\n * @returns {Promise<string>} HTML string for the random post\n */\nexport async function make_random_post_html(linkInfoProvider = get_link_info, randomSelector = random_from_list) {\n  try {\n    const all_url_info = await linkInfoProvider();\n    //  Yuk, find a clearere way to do this\n    const all_pages = Object.entries(all_url_info) // returns a list of [url, info]\n      .map((e) => e[1]);\n    const random_post = randomSelector(all_pages);\n    return makePostPreviewHTML({\n      url: random_post.url,\n      title: random_post.title,\n      description: random_post.description,\n    });\n  } catch (error) {\n    console.error(\"Error generating random post HTML:\", error);\n    return \"<div>Could not load random post</div>\";\n  }\n}\n\n/**\n * Loads random eulogy roles into specified elements\n * @param {string} element1 ID of first element (default: \"#e1\")\n * @param {string} element2 ID of second element (default: \"#e2\")\n * @param {string} element3 ID of third element (default: \"#e3\")\n * @param {Function} eulogyLoader Function to add eulogy roles (default: add_eulogy_roles)\n */\nexport function load_random_eulogy(\n  element1 = \"#e1\",\n  element2 = \"#e2\",\n  element3 = \"#e3\",\n  eulogyLoader = add_eulogy_roles,\n) {\n  try {\n    eulogyLoader(element1);\n    eulogyLoader(element2);\n    eulogyLoader(element3);\n  } catch (error) {\n    console.error(\"Error loading random eulogy:\", error);\n  }\n}\n\n/**\n * Loads content for the Enjoy page\n * @param {Function} sunburstAdder Function to add sunburst (default: add_sunburst)\n * @param {Function} promptsAdder Function to add random prompts (default: add_random_prompts)\n * @param {Function} postsAdder Function to add blog posts (default: add_imported_blog_posts)\n * @param {Function} eulogyAdder Function to add eulogy roles (default: add_eulogy_roles)\n * @param {Function} randomizerAppender Function to append randomizer (default: append_randomizer_div)\n */\nexport function load_enjoy2(\n  sunburstAdder = add_sunburst,\n  promptsAdder = add_random_prompts,\n  postsAdder = add_imported_blog_posts,\n  eulogyAdder = add_eulogy_roles,\n  randomizerAppender = append_randomizer_div,\n) {\n  try {\n    sunburstAdder(\"sunburst\", \"sunburst_text\", new ThingsIEnjoy().get_tree());\n    promptsAdder();\n    postsAdder(); // has a random achievement post\n    eulogyAdder(\"#random-eulogy-role\");\n    randomizerAppender(\"#random-blog-posts\", async () => await make_random_post_html());\n  } catch (error) {\n    console.error(\"❌ Error loading enjoy page:\", error);\n  }\n}\n\n/**\n * Loads content for the 7 Habits page\n * @param {Function} sunburstAdder Function to add sunburst (default: add_sunburst)\n * @param {Function} promptsAdder Function to add random prompts (default: add_random_prompts)\n */\nexport function load_7_habits(sunburstAdder = add_sunburst, promptsAdder = add_random_prompts) {\n  try {\n    sunburstAdder(\"sunburst\", \"sunburst_text\", new SevenHabits().get_tree());\n    promptsAdder();\n  } catch (error) {\n    console.error(\"Error loading 7 habits page:\", error);\n  }\n}\n\n/**\n * Loads content for the IG66 page\n * @param {Function} postsAdder Function to add blog posts (default: add_imported_blog_posts)\n */\nexport function load_ig66(postsAdder = add_imported_blog_posts) {\n  try {\n    postsAdder();\n  } catch (error) {\n    console.error(\"Error loading IG66 page:\", error);\n  }\n}\n\n/**\n * Loads content for the Balance page\n * @param {Function} restChartMaker Function to make rest chart (default: make_balance_chart_by_desired_time_rest)\n * @param {Function} workChartMaker Function to make work chart (default: make_balance_chart_by_work)\n * @param {Function} radarMapMaker Function to make radar map (default: make_radar_map)\n */\nexport function load_balance(\n  restChartMaker = make_balance_chart_by_desired_time_rest,\n  workChartMaker = make_balance_chart_by_work,\n  radarMapMaker = make_radar_map,\n) {\n  try {\n    restChartMaker(\"balance-heatmap-rest\");\n    workChartMaker(\"balance-heatmap-work\");\n    radarMapMaker(\"balance-radar-map-ideal\");\n  } catch (error) {\n    console.error(\"Error loading balance page:\", error);\n  }\n}\n\n// Month names for charts\nexport const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n// Constants for heatmap configuration\nexport const row_height = 20;\nexport const heatmap_base = 100;\nexport const ideal_color = \"#00BF00\";\n\n/**\n * Creates a radar map visualization\n * @param {string} div ID of the element to render the map in\n * @param {Object} plotly Plotly library (optional)\n */\nexport async function make_radar_map(div, plotly?) {\n  const data = [\n    {\n      type: \"scatterpolar\",\n      r: [8, 8, 8, 5, 8, 8, 8],\n      theta: [\"Work\", \"Tech\", \"Health\", \"Hobbies\", \"Relationships\", \"Magic\", \"Work\"],\n      name: \"2020 Goal\",\n      fill: \"toself\",\n    },\n    {\n      type: \"scatterpolar\",\n      r: [7, 7, 5, 5, 5, 9, 7],\n      theta: [\"Work\", \"Tech\", \"Health\", \"Hobbies\", \"Relationships\", \"Magic\", \"Work\"],\n      name: \"2020 Actual\",\n      fill: \"toself\",\n    },\n  ];\n\n  const layout = {\n    polar: {\n      radialaxis: {\n        visible: true,\n        range: [0, 10],\n      },\n    },\n    showlegend: true,\n  };\n  const config = {\n    displayModeBar: false,\n  };\n\n  if (typeof plotly !== \"undefined\" && plotly) {\n    try {\n      await plotly.newPlot(div, data, layout, config);\n    } catch (error) {\n      console.error(\"Error creating radar map:\", error);\n    }\n  } else {\n    console.warn(\"Plotly is not defined, skipping chart rendering\");\n  }\n}\n\n/**\n * Creates a heatmap for work balance\n * @param {string} div ID of the element to render the heatmap in\n * @param {Object} plotly Plotly library (optional)\n */\nexport async function make_balance_chart_by_work(div, plotly?) {\n  const roles = [\"Tech\", \"Work\"];\n  const layout = {\n    height: row_height * roles.length + heatmap_base,\n    margin: {\n      t: 5,\n    },\n    pad: 0,\n  };\n  const color_scale = [\n    [0.0, \"darkblue\"],\n    [0.4, \"blue\"],\n    [0.5, ideal_color],\n    [0.6, \"darkred\"],\n    [1.0, \"red\"],\n  ];\n  const gap_desire_over_time = [\n    [7, 4, 7, 8, 2, 4, 2, 3, 2, 8], //  Tech\n    [10, 7, 5, 5, 3, 5, 6, 6, 7, 5], //  Work\n  ];\n\n  const data = [\n    {\n      colorscale: color_scale,\n      zmin: 0,\n      zmax: 10,\n      x: months.slice(2, 13),\n      y: roles,\n      z: gap_desire_over_time,\n      type: \"heatmap\",\n    },\n  ];\n  const config = {\n    displayModeBar: false,\n  };\n\n  if (typeof plotly !== \"undefined\" && plotly) {\n    try {\n      await plotly.newPlot(div, data, layout, config);\n    } catch (error) {\n      console.error(\"Error creating work balance chart:\", error);\n    }\n  } else {\n    console.warn(\"Plotly is not defined, skipping chart rendering\");\n  }\n}\n\n/**\n * Creates a heatmap for desired rest time\n * @param {string} div ID of the element to render the heatmap in\n * @param {Object} plotly Plotly library (optional)\n */\nexport async function make_balance_chart_by_desired_time_rest(div, plotly?) {\n  const roles = [\"Health\", \"Hobbies\", \"Family\", \"Magic\"];\n  const gap_desire_over_time = [\n    // J, F, M, A, M, J, J, A, S, O, N, D\n    [4, 4, 3, 4, 5, 3, 2, 2, 3, 2], // Health\n    [4, 4, 3, 4, 5, 4, 4, 2, 4, 5], // Hobbies\n    [2, 3, 3, 4, 1, 5, 4, 3, 2, 4], // Family\n    [5, 5, 5, 4, 5, 5, 4, 5, 4, 5], //  Magic\n  ];\n\n  const color_scale = [\n    [0.0, \"red\"],\n    [0.4, \"darkred\"],\n    [0.5, ideal_color],\n    [0.6, \"blue\"],\n    [1.0, \"darkblue\"],\n  ];\n  const data = [\n    {\n      colorscale: color_scale,\n      zmin: 0,\n      zmax: 10,\n      x: months.slice(2, 13),\n      y: roles.reverse(),\n      z: gap_desire_over_time.reverse(),\n      type: \"heatmap\",\n    },\n  ];\n  const config = {\n    displayModeBar: false,\n  };\n  const layout = {\n    height: row_height * roles.length + heatmap_base,\n    margin: {\n      t: 5,\n    },\n    pad: 0,\n  };\n\n  if (typeof plotly !== \"undefined\" && plotly) {\n    try {\n      await plotly.newPlot(div, data, layout, config);\n    } catch (error) {\n      console.error(\"Error creating rest time chart:\", error);\n    }\n  } else {\n    console.warn(\"Plotly is not defined, skipping chart rendering\");\n  }\n}\n\n/**\n * Loads content for pages with auto-generated sunburst from DOM structure\n * @param rootName The name for the root node of the sunburst\n * @param sunburstAdder Function to add sunburst (default: add_sunburst_from_dom)\n * @param promptsAdder Function to add random prompts (default: add_random_prompts)\n * @param postsAdder Function to add blog posts (default: add_imported_blog_posts)\n * @param eulogyAdder Function to add eulogy roles (default: add_eulogy_roles)\n * @param randomizerAppender Function to append randomizer (default: append_randomizer_div)\n */\nexport function load_auto_sunburst(\n  rootName = \"Topics\",\n  sunburstAdder = add_sunburst_from_dom,\n  promptsAdder = add_random_prompts,\n  postsAdder = add_imported_blog_posts,\n  eulogyAdder = add_eulogy_roles,\n  randomizerAppender = append_randomizer_div,\n) {\n  try {\n    sunburstAdder(\"sunburst\", \"sunburst_text\", rootName);\n    promptsAdder();\n    postsAdder(); // has a random achievement post\n    eulogyAdder(\"#random-eulogy-role\");\n    randomizerAppender(\"#random-blog-posts\", async () => await make_random_post_html());\n  } catch (error) {\n    console.error(\"Error loading auto-generated sunburst:\", error);\n  }\n}\n\n// Export utility functions for testing\nexport const UT = {\n  SevenHabits,\n  ThingsIEnjoy,\n};\n","import { append_randomizer_div, random_from_list } from \"./index\";\n\ninterface BlogPost {\n  url: string;\n  title: string;\n  thumbnail: string;\n  published: string;\n  excerpt: string;\n  tags: string[];\n}\n\nfunction html_for_blogpost(post: BlogPost) {\n  const item = $(\"<div/>\");\n  // TODO: HACK: Strip to the right of Week number\n  const title_href = `<h4> <a href='${post.url}'}>${post.title}</a></h4>`;\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  item.append(title_href);\n  // HACK: Upsize to larger thumbnail, seems like blogger auto resizes to include a 320 image as well.\n  const thumbnail_url = post.thumbnail.replace(\"s72-c\", \"s320\");\n\n  const published_date = new Date(post.published);\n  const excerptDisplayText = `\n    <div> ${monthNames[published_date.getMonth()]} ${published_date.getFullYear()} - ${post.excerpt}\n    </div>\n   `;\n  if (post.thumbnail !== \"\") {\n    console.log(post.title);\n    console.log(published_date);\n    item.append(\n      // `<div> <a href='${post.url}'}><img src='${thumbnail_url}'/></div>`\n      `\n      <div style='overflow:auto'>\n\n      <a href='${post.url}'}><img class=\"img-fluid\" style='float:left; margin-right:10px' src='${thumbnail_url}'/></a>\n      ${excerptDisplayText}\n      </div>`,\n    );\n  } else {\n    item.append(excerptDisplayText);\n  }\n  const ret = item.html();\n  return ret;\n}\n\nfunction get_achievement_posts(imported_posts: BlogPost[]) {\n  return imported_posts.filter((post) => post.title.toLowerCase().includes(\"achievement\"));\n}\nfunction get_recent_posts(imported_posts: BlogPost[]) {\n  return imported_posts.filter((post) => post.tags.includes(\"family-journal\"));\n}\n\nfunction ProcessImports(posts: BlogPost[]) {\n  console.log(\"Processing\", posts.length, \"posts\");\n  if (!posts) {\n    console.log(\"No posts being imported\");\n    return;\n  }\n\n  //\n  // Import all history\n  const random_div = \"#random-post\";\n  const achievement_div = \"#achievment\";\n  const random_recent = \"#random-recent\";\n\n  append_randomizer_div(random_div, () => html_for_blogpost(random_from_list(posts)));\n\n  // Add a random achievement post\n  append_randomizer_div(achievement_div, () => html_for_blogpost(random_from_list(get_achievement_posts(posts))));\n  append_randomizer_div(random_recent, () => html_for_blogpost(random_from_list(get_recent_posts(posts))));\n}\n\nfunction add_imported_blog_posts() {\n  const imported_posts_url = \"/ig66/ig66-export.json\";\n  $.getJSON(imported_posts_url, ProcessImports);\n}\n//\n// Todo put in own file\ninterface Role {\n  title: string;\n  summary: string;\n  full_text: string;\n}\n\ninterface Roles {\n  roles: Role[];\n}\n\nfunction html_for_role(role: Role) {\n  // url encode the role title\n  const role_file_name = role.title.replace(/ /g, \"%20\");\n  const voices = [\"igor\", \"ammon\"];\n  const random_voice = voices[Math.floor(Math.random() * voices.length)];\n  // Yucky - toggle_play_pause is a global function in enjoy2.md - bleh,  so brittle\n  return `\n  <div>\n    <audio id=\"eulogy-player\">\n      <source src=\"https://github.com/idvorkin/blob/raw/master/read_eulogy/${random_voice}/${role_file_name}.mp3\" type=\"audio/mp3\">\n    </audio>\n  <b>${role.title} <a class='lead' onclick=\"toggle_play_pause('eulogy-player')\">🔈</a></b> - ${role.summary}\n  </div>\n  `;\n}\n\nfunction ProcessEulogy(div: string, roles: Roles) {\n  if (!roles) {\n    console.log(\"No roles being imported\");\n    return;\n  }\n  console.log(\"Processing\", roles.roles.length, \"roles\");\n\n  // Import all history\n  append_randomizer_div(div, () => html_for_role(random_from_list(roles.roles)));\n}\n\nfunction add_eulogy_roles(div: string) {\n  const imported_posts_url = \"/eulogy.json\";\n  $.getJSON(imported_posts_url, (roles: Roles) => ProcessEulogy(div, roles));\n}\n\nexport { add_imported_blog_posts, add_eulogy_roles, html_for_role };\n","import { append_randomizer_div, random_from_list, shuffle } from \"./index\";\n\n// Declare global Plotly\ndeclare const Plotly: any;\n\n/**\n * Represents a node in a tree structure used for visualization\n */\nexport class TreeNode {\n  name: string;\n  children: TreeNode[];\n  value: number;\n\n  constructor({\n    name,\n    value = 25,\n    children = [],\n  }: {\n    name;\n    value?;\n    children?;\n  }) {\n    this.name = name;\n    // Keep it interesting\n    this.children = shuffle(children) as TreeNode[];\n    this.value = value;\n  }\n}\n\n/**\n * Main function to add random prompts to categories on the page\n * @param categoryToPromptsProvider Function that provides category-to-prompts mapping (default: internal implementation)\n * @param renderer Function that renders prompts for a category (default: internal implementation)\n */\nexport function add_random_prompts(\n  categoryToPromptsProvider = category_to_prompts,\n  renderer = render_prompt_for_category,\n) {\n  const map_category_to_prompts = categoryToPromptsProvider();\n  for (const category of map_category_to_prompts.keys()) {\n    renderer(category, map_category_to_prompts.get(category));\n  }\n}\n\n/**\n * Renders prompts for a specific category\n * @param category The category element\n * @param prompts_for_category Array of prompts for this category\n * @param jQueryProvider jQuery function (default: global $)\n * @param randomizerAppender Function to append randomizer div (default: append_randomizer_div)\n */\nexport function render_prompt_for_category(\n  category,\n  prompts_for_category,\n  jQueryProvider = $,\n  randomizerAppender = append_randomizer_div,\n) {\n  //print one of the prompts\n  const get_random_prompt_html = () =>\n    `<span>${random_from_list(\n      prompts_for_category,\n    )}</span><span style=\"float: right; cursor: pointer;\" title=\"Click for another prompt\">🔄</span>`;\n\n  // add a place holder for random div.\n  const new_element = jQueryProvider(`<div class=\"alert alert-primary\" role=\"alert\"/>`);\n  jQueryProvider(category).after(new_element);\n  randomizerAppender(new_element, get_random_prompt_html);\n}\n\n/**\n * Extracts prompts from categories on the page\n * @param jQueryProvider jQuery function (default: global $)\n * @returns Map of category elements to their prompts\n */\nexport function category_to_prompts(jQueryProvider = $) {\n  // prompt_categories are H3s with a UL under them, and the li's under there are the prompt.\n  const starting_node = jQueryProvider(\"h3\").first();\n  let current_category = starting_node;\n  let prompts_for_category = [];\n  const map_category_to_prompts = new Map();\n\n  for (let node = starting_node; node.length !== 0; node = jQueryProvider(node).next()) {\n    if (node.prop(\"tagName\") === \"H3\") {\n      // Build prompt map\n      map_category_to_prompts.set(current_category, prompts_for_category);\n\n      // start processing next categroy\n      current_category = node;\n      prompts_for_category = [];\n      continue;\n    }\n\n    // in a category, prompts are the children of the first unordered list, so skip\n    // stuff that isn't a list\n    if (node.prop(\"tagName\") !== \"UL\") {\n      continue;\n    }\n    // we should now be the first list in the category\n    prompts_for_category = Array.from(jQueryProvider(node).find(\"li\")).map((li) => jQueryProvider(li).text());\n  }\n\n  map_category_to_prompts.set(current_category, prompts_for_category);\n\n  return map_category_to_prompts;\n}\n\n/**\n * Performs a breadth-first traversal of a tree\n * @param node The root node of the tree to traverse\n * @yields [current node, parent node] pairs for each node in the tree\n */\nexport function* breadth_first_walk(node: TreeNode) {\n  if (!node) {\n    return;\n  }\n  const Q = [];\n  Q.push([node, null as TreeNode]);\n  while (Q.length > 0) {\n    const [current, parent]: [TreeNode, TreeNode] = Q.shift();\n    for (const child of current.children ?? []) {\n      Q.push([child, current]);\n    }\n    yield [current, parent];\n  }\n}\n\n/**\n * Converts a tree structure to Plotly's data format for visualization\n * @param root Root node of the tree\n * @returns Object with ids, labels, and parents arrays for Plotly\n */\nexport function tree_to_plotly_data_format(root) {\n  // Plotly needs a tree to be flattened into a set of lists\n  // ids\n  // labels\n  // parents\n  // values\n\n  const names_parent_names = Array.from(breadth_first_walk(root)).map(([n, p]) => [n.name, p?.name]);\n\n  return {\n    ids: names_parent_names.map(([n, p]) => n),\n    labels: names_parent_names.map(([n, p]) => n),\n    parents: names_parent_names.map(([n, p]) => p),\n  };\n}\n\n/**\n * Converts category elements to category text with their associated prompts\n * @param mapProvider Function that provides category-to-prompts mapping (default: internal implementation)\n * @returns Map of category texts to their prompts\n */\nexport function category_to_prompts_text(mapProvider = category_to_prompts) {\n  const map = mapProvider();\n  const list = Array.from(map.entries()).map(([k, v], _index) => [(k as any).text(), v]);\n  return new Map(list as any);\n}\n\n/**\n * Gets a random prompt for a specific label from the tree\n * @param label The label to find in the tree\n * @param tree_node The root node of the tree\n * @param map_node_to_prompts Map of node names to prompts\n * @returns Random prompt for the specified label\n */\nexport function random_prompt_for_label(label, tree_node, map_node_to_prompts) {\n  // Find the label in the tree\n  // recall bread first search returns a parent as well.\n  const result = Array.from(breadth_first_walk(tree_node)).find(([current, _parent]) => current.name === label);\n\n  if (!result) {\n    return \"Click in any box or circle\";\n  }\n\n  const [clicked_node, _parent] = result;\n\n  // Gather all the prompts for the children of the clicked node.\n  const all_prompts = Array.from(breadth_first_walk(clicked_node))\n    .map(([node, _parent]) => node) // returns node and parent\n    .filter((node) => {\n      // Check both with and without the link emoji\n      const hasWithoutEmoji = map_node_to_prompts.has(node.name);\n      const hasWithEmoji = map_node_to_prompts.has(`${node.name}🔗`);\n      return hasWithoutEmoji || hasWithEmoji;\n    })\n    .flatMap((node) => {\n      // Try to get prompts with and without emoji\n      const prompts = map_node_to_prompts.get(node.name) || map_node_to_prompts.get(`${node.name}🔗`) || [];\n      return prompts.map((prompt) => `${node.name}: ${prompt}`);\n    });\n\n  if (all_prompts.length === 0) {\n    return \"Click in any box or circle\";\n  }\n\n  return random_from_list(all_prompts);\n}\n\n/**\n * Adds a sunburst visualization to the page\n * @param plot_element_id ID of the element where the plot should be rendered\n * @param random_text_div_id ID of the div where random text should be displayed\n * @param root Root node of the tree to visualize\n * @param jQueryProvider jQuery function (default: global $)\n * @param plotlyProvider Plotly library (default: global Plotly)\n */\nexport async function add_sunburst(\n  plot_element_id,\n  random_text_div_id,\n  root: TreeNode,\n  jQueryProvider = $,\n  plotlyProvider = Plotly,\n) {\n  if (!plotlyProvider) {\n    console.error(\"Plotly is not available\");\n    return;\n  }\n\n  const sunburst_tree_flat = tree_to_plotly_data_format(root);\n  const sunburst_data = {\n    type: \"sunburst\",\n    outsidetextfont: { size: 20, color: \"#377eb8\" },\n    // leaf: {opacity: 0.4},\n    hoverinfo: \"none\",\n    marker: { line: { width: 2 } },\n    maxdepth: 2,\n    displayModeBar: false,\n  };\n  Object.assign(sunburst_data, sunburst_tree_flat);\n  (sunburst_data as any).values = undefined; // remove values to avoid sizing pie slices\n\n  const sunburst_layout = {\n    margin: { l: 0, r: 0, b: 0, t: 0 },\n    sunburstcolorway: [\"#636efa\", \"#ef553b\", \"#00cc96\"],\n  };\n  const config = {\n    displayModeBar: false,\n  };\n\n  try {\n    await plotlyProvider.newPlot(plot_element_id, [sunburst_data] as any, sunburst_layout, config);\n\n    const set_random_prompt_text = (text) => {\n      jQueryProvider(`#${random_text_div_id}`).text(text);\n    };\n\n    // Set click handler for div\n    jQueryProvider(`#${random_text_div_id}`)\n      .first()\n      .click(() => {\n        const label = jQueryProvider(\"#sunburst text:first\").text(); // Hack should use an API to find center text\n        const prompt = random_prompt_for_label(label, root, category_to_prompts_text());\n        set_random_prompt_text(prompt);\n      });\n\n    // Attach the sunburst click event handler\n    const plotElement = document.getElementById(plot_element_id);\n    if (plotElement && typeof (plotElement as any).on === \"function\") {\n      (plotElement as any).on(\"plotly_click\", (eventData: any) => {\n        if (eventData?.points?.[0]) {\n          const label = eventData.points[0].label;\n          const prompt = random_prompt_for_label(label, root, category_to_prompts_text());\n          set_random_prompt_text(prompt);\n        }\n      });\n    }\n\n    return plotElement;\n  } catch (error) {\n    console.error(\"Failed to create sunburst plot:\", error);\n    return null;\n  }\n}\n\n/**\n * Extracts a tree structure from H2, H3, and LI elements on the page\n * @param rootName The name for the root node of the tree\n * @param containerSelector Optional jQuery selector to scope the search (e.g., \"article\", \"#content\")\n * @param jQueryProvider jQuery function (default: global $)\n * @returns TreeNode representing the extracted hierarchy\n */\nexport function extract_tree_from_dom(\n  rootName = \"Root\",\n  containerSelector: string | null = null,\n  jQueryProvider: any = $,\n): TreeNode {\n  const h2Elements = containerSelector ? jQueryProvider(containerSelector).find(\"h2\") : jQueryProvider(\"h2\");\n  const rootChildren: TreeNode[] = [];\n\n  h2Elements.each((_index, h2Element) => {\n    const h2 = jQueryProvider(h2Element);\n    const h2Text = h2.text().trim();\n\n    // Skip if empty\n    if (!h2Text) return;\n\n    const h2Children: TreeNode[] = [];\n    let currentElement = h2.next();\n\n    // Process elements until we hit another H2 or run out of elements\n    while (currentElement.length > 0 && currentElement.prop(\"tagName\") !== \"H2\") {\n      if (currentElement.prop(\"tagName\") === \"H3\") {\n        const h3Text = currentElement.text().trim();\n        if (h3Text) {\n          // Add H3 as a node regardless of whether it has a UL after it\n          h2Children.push(new TreeNode({ name: h3Text }));\n        }\n      }\n      currentElement = currentElement.next();\n    }\n\n    if (h2Children.length > 0) {\n      rootChildren.push(new TreeNode({ name: h2Text, children: h2Children }));\n    }\n  });\n\n  return new TreeNode({ name: rootName, children: rootChildren });\n}\n\n/**\n * Creates a sunburst visualization automatically from the page's H2/H3 structure\n * @param plot_element_id ID of the element where the plot should be rendered\n * @param random_text_div_id ID of the div where random text should be displayed\n * @param rootName Optional name for the root node (default: \"Root\")\n * @param containerSelector Optional jQuery selector to scope the search (e.g., \"article\", \"#content\")\n * @param jQueryProvider jQuery function (default: global $)\n * @param plotlyProvider Plotly library (default: global Plotly)\n */\nexport async function add_sunburst_from_dom(\n  plot_element_id: string,\n  random_text_div_id: string,\n  rootName = \"Root\",\n  containerSelector: string | null = null,\n  jQueryProvider = $,\n  plotlyProvider = Plotly,\n) {\n  const tree = extract_tree_from_dom(rootName, containerSelector, jQueryProvider);\n  return add_sunburst(plot_element_id, random_text_div_id, tree, jQueryProvider, plotlyProvider);\n}\n\n// Export testing utilities separately\nexport const UT = {\n  breadth_first_walk,\n  shuffle,\n};\n","// Import dependencies\nimport { get_link_info, random_from_list } from \"./shared\";\n\n// For autocomplete, safely access the window properties\n// This makes it more testable\nlet autocomplete: any;\nlet getAlgoliaResults: any;\nif (typeof window !== \"undefined\" && window[\"@algolia/autocomplete-js\"]) {\n  const algoliaAutocomplete = window[\"@algolia/autocomplete-js\"];\n  autocomplete = algoliaAutocomplete.autocomplete;\n  getAlgoliaResults = algoliaAutocomplete.getAlgoliaResults;\n}\n\n// Adding a query parameter.\n// import instantsearch from \"algoliasearch\";\n\nexport const search_placeholder_text = \"Search Igor's Musings ...\";\n\n/**\n * Gets a query parameter value from a URL\n * @param name Parameter name\n * @param url URL to extract from (defaults to window.location.href)\n * @returns Parameter value, empty string if parameter exists with no value, or null if parameter doesn't exist\n */\nexport function getParameterByName(name, url): string {\n  if (!url) url = window.location.href;\n  name = name.replace(/[[\\]\\\\]/g, \"\\\\$&\");\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`);\n  const results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return \"\";\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\n/**\n * Generates HTML for an Algolia search hit\n * @param hit Algolia search hit\n * @returns HTML string\n */\nexport function InstantSearchHitTemplate(hit) {\n  // https://www.algolia.com/doc/api-reference/widgets/infinite-hits/js/\n  try {\n    let url = hit.url;\n    if (hit.anchor) {\n      url += `#${hit.anchor}`;\n    }\n    const highlighted = hit._highlightResult;\n\n    if (!highlighted) {\n      console.log(\"No Highlight\", hit);\n    }\n    const title = highlighted.title.value;\n    const content = highlighted?.content?.value ?? \"\";\n    // <section class=\"notepad-post-excerpt\"><p>${content}</p></section>\n\n    const string_rep = `\n           <span onClick=\"window.location='${url}';\">\n              <b> <a href=\"${url}\">${title}</a></b> <span>${content}</span>\n           </span>\n        `;\n    return string_rep;\n  } catch (err) {\n    console.log(\"Error in hitTemplate\", err, hit);\n  }\n  return \"invalid HTML\";\n}\n\ndeclare function instantsearch(l: any): any;\ndeclare function algoliasearch(l: any, l2: any): any;\n\n/**\n * Creates an Algolia InstantSearch instance\n * @param appid Algolia app ID\n * @param search_api_key Algolia search API key\n * @param index_name Algolia index name\n * @param initial_query Initial search query\n * @returns InstantSearch instance\n */\nexport function CreateSearch(appid, search_api_key, index_name, initial_query) {\n  // Instanciating InstantSearch.js with Algolia credentials\n  const searchClient = algoliasearch(appid, search_api_key);\n  const search = instantsearch({\n    searchClient: searchClient,\n    indexName: index_name,\n    searchParameters: {\n      query: initial_query,\n    },\n  });\n\n  // Adding searchbar and results widgets\n  search.addWidget(\n    // @ts-ignore:TS2339\n    instantsearch.widgets.searchBox({\n      container: \"#search-box\",\n      placeholder: search_placeholder_text,\n      poweredBy: true, // This is required if you're on the free Community plan\n      showSubmit: false,\n      showReset: false,\n      showLoadingIndicator: false,\n    }),\n  );\n\n  search.addWidget(\n    // @ts-ignore:TS2339\n    instantsearch.widgets.infiniteHits({\n      container: \"#search-hits\",\n      templates: {\n        item: InstantSearchHitTemplate,\n      },\n      item({ item }) {\n        return `Result: ${item.name}`;\n      },\n    }),\n  );\n\n  return search;\n}\n\n// Copied from the docs, but this isn't working for me.\nexport function AutoCompleteHitTemplateWithComponentDoesNotWork({ item, components, createElement, fragments }) {\n  console.log(item);\n  return components.Highlight({ hit: item });\n}\n\n// Algolia uses some PREACT thing, which this project does not support\n// Reach way into algolia and build the HTML manually\nexport function AutoCompleteHitTemplate({ item, createElement }) {\n  // https://www.algolia.com/doc/api-reference/widgets/infinite-hits/js/\n  return createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: InstantSearchHitTemplate(item),\n    },\n  });\n}\n\n/**\n * Gets a random post from the backlinks\n * @returns Random post with title, URL, and description\n */\nexport async function get_random_post() {\n  const all_url_info = await get_link_info();\n  //  Yuk, find a clearere way to do this\n  const all_pages = Object.entries(all_url_info) // returns a list of [url, info]\n    .map((e) => e[1]);\n  const random_post = random_from_list(all_pages);\n  const ret = {\n    title: random_post.title,\n    url: random_post.url,\n    description: random_post.description,\n  };\n  return ret;\n}\n\n/**\n * Gets recent posts from the back-links.json file\n * Returns the specified number of most recently modified posts\n * @param count Number of posts to return\n */\nexport async function get_recent_posts(count = 4) {\n  try {\n    const all_url_info = await get_link_info();\n\n    // Convert to array of pages for easier processing\n    const pages = Object.entries(all_url_info).map(([url, metadata]) => ({\n      url,\n      title: metadata.title || url,\n      description: metadata.description || \"\",\n      doc_size: metadata.doc_size || 0,\n      last_modified: metadata.last_modified || \"\",\n    }));\n\n    // Filter out pages that are likely redirects (these have empty descriptions and titles)\n    const realPages = pages.filter(\n      (page) => page.description && page.description.trim() !== \"\" && page.title && page.title.trim() !== \"\",\n    );\n\n    // Sort by last_modified date (newest first)\n    const sortedPages = realPages.sort((a, b) => {\n      if (a.last_modified && b.last_modified) {\n        return new Date(b.last_modified).getTime() - new Date(a.last_modified).getTime();\n      }\n      // Fallback to doc_size if last_modified is not available\n      return b.doc_size - a.doc_size;\n    });\n\n    // Take the top N most recent posts\n    return sortedPages.slice(0, count);\n  } catch (error) {\n    console.error(\"❌ Error loading recent posts:\", error);\n    return [];\n  }\n}\n\n/**\n * Gets random posts for search results\n * @param count Number of random posts to return (default: 3)\n */\nexport async function GetRandomSearchResults(count = 3) {\n  return {\n    sourceId: \"random_posts\",\n    async getItems() {\n      const sized_array = new Array(count).join(\"_\").split(\"_\");\n      const random_posts = await Promise.all(sized_array.map(async (e) => get_random_post()));\n      return random_posts;\n    },\n    getItemUrl({ item }) {\n      const ret = item.url;\n      return ret;\n    },\n    templates: {\n      item({ item, createElement }) {\n        return createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: `\n            <span onClick=\"window.location='${item.url}';\" >\n           <b> <a href=\"${item.url}\">${item.title}</a></b>\n            <span>${item.description}</span>\n            </span>\n            `,\n          },\n        });\n      },\n      header({ createElement }) {\n        return createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: \"<i style='color:grey'>Random posts ...</i>\",\n          },\n        });\n      },\n    },\n  };\n}\n\n/**\n * Gets recent posts for search results\n * @param count Number of recent posts to return (default: 4)\n */\nexport async function GetRecentSearchResults(count = 4) {\n  return {\n    sourceId: \"recent_posts\",\n    async getItems() {\n      const recentPosts = await get_recent_posts(count);\n      return recentPosts;\n    },\n    getItemUrl({ item }) {\n      const ret = item.url;\n      return ret;\n    },\n    templates: {\n      item({ item, createElement }) {\n        return createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: `\n            <span onClick=\"window.location='${item.url}';\" >\n           <b> <a href=\"${item.url}\">${item.title}</a></b>\n            <span>${item.description}</span>\n            </span>\n            `,\n          },\n        });\n      },\n      header({ createElement }) {\n        return createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: \"<i style='color:grey'>Recent posts ...</i>\",\n          },\n        });\n      },\n    },\n  };\n}\n\n/**\n * Gets featured posts from Algolia search\n * @param searchClient Algolia search client\n * @param index_name Index name to search\n * @param query Search query\n * @param hitsPerPage Number of results to return (default: 3)\n * @param includeFamilyJournal Whether to include family journal posts\n */\nexport function GetAlgoliaResults(searchClient, index_name, query, hitsPerPage = 3, includeFamilyJournal = false) {\n  // By default don't include family journal.\n  let filter = \"NOT tags:family-journal\";\n  if (includeFamilyJournal) {\n    filter = \"\";\n  }\n\n  return {\n    sourceId: \"featured_posts\",\n    getItems() {\n      if (!getAlgoliaResults) {\n        console.error(\"getAlgoliaResults is not defined\");\n        return [];\n      }\n      return getAlgoliaResults({\n        searchClient,\n        queries: [\n          {\n            indexName: index_name,\n            query,\n            filters: filter,\n            params: {\n              hitsPerPage: hitsPerPage,\n              highlightPreTag: \"<span style='background:yellow'>\",\n              highlightPostTag: \"</span>\",\n            },\n          },\n        ],\n      });\n    },\n    templates: {\n      item: AutoCompleteHitTemplate,\n      header({ createElement }) {\n        return createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: \"<i style='color:grey'>Featured posts ...</i>\",\n          },\n        });\n      },\n    },\n    getItemUrl({ item }) {\n      let url = item.url;\n      if (item.anchor) {\n        url += `#${item.anchor}`;\n      }\n      const ret = url;\n      return ret;\n    },\n  };\n}\n\n/**\n * Creates an autocomplete search component\n * @param appid Algolia app ID\n * @param search_api_key Algolia search API key\n * @param index_name Algolia index name\n * @param autocomplete_id ID of the autocomplete element\n * @param includeFamilyJournal Whether to include family journal posts\n * @param featuredCount Number of featured posts to show (default: 3)\n * @param recentCount Number of recent posts to show (default: 4)\n * @param randomCount Number of random posts to show (default: 3)\n */\nexport async function CreateAutoComplete(\n  appid,\n  search_api_key,\n  index_name,\n  autocomplete_id,\n  includeFamilyJournal,\n  featuredCount = 3,\n  recentCount = 4,\n  randomCount = 3,\n) {\n  if (!autocomplete) {\n    console.error(\"Autocomplete is not defined\");\n    return;\n  }\n\n  const searchClient = algoliasearch(appid, search_api_key);\n  const randomSearchResults = await GetRandomSearchResults(randomCount);\n  const recentSearchResults = await GetRecentSearchResults(recentCount);\n\n  function GetSources({ query }) {\n    const isEmptySearch = query.length === 0;\n    if (isEmptySearch) {\n      // Searching for a space gives nice default results, so when no results search for that ...\n      query = \" \";\n    }\n\n    // Get featured posts (from Algolia search)\n    const featuredPosts = GetAlgoliaResults(\n      searchClient,\n      index_name,\n      query,\n      isEmptySearch ? featuredCount : 10, // Show N featured posts when empty, more when searching\n      includeFamilyJournal,\n    );\n\n    // For empty search, show featured, recent, and random posts\n    // For actual search, just show search results\n    if (isEmptySearch) {\n      return [featuredPosts, recentSearchResults, randomSearchResults];\n    }\n    return [featuredPosts];\n  }\n\n  // Make sure we have the element\n  // autocomplete_id can be either '#id' or just 'id'\n  const elementId = autocomplete_id.startsWith(\"#\") ? autocomplete_id : `#${autocomplete_id}`;\n  if ($(elementId).length === 0) {\n    console.log(\"No autocomplete element found\", \"autocomplete_id\", autocomplete_id);\n    return;\n  }\n\n  // Setup Auto Complete Stuff\n  return autocomplete({\n    container: elementId,\n    placeholder: search_placeholder_text,\n    getSources: GetSources,\n    debug: false,\n    openOnFocus: true,\n    detachedMediaQuery: \"\",\n  });\n}\n"],"names":["$bd9399c7e2744abd$var$autocomplete","$bd9399c7e2744abd$var$getAlgoliaResults","$5c367f1c83ef0920$export$fc303307c4ed1d41","url_info","title_href","url","title","description","$5c367f1c83ef0920$export$f6f0b6976f5f23e5","list","length","Math","floor","random","$5c367f1c83ef0920$export$448332262467e042","array","randomIndex","currentIndex","$5c367f1c83ef0920$export$260e5c0943f31606","fn","functionName","name","document","readyState","console","log","addEventListener","$5c367f1c83ef0920$export$7691c4557333f2d2","parent_id","random_html_factory","$parent","$","new_element","empty","append","click","event","target","tagName","$5c367f1c83ef0920$var$cached_link_info","$5c367f1c83ef0920$export$46c928bda6aa7b36","isProd","current_url","window","location","href","includes","backlinks_url","response","fetch","data","json","e","error","$5c367f1c83ef0920$export$5190f81690a07722","linkInfo","urls","Object","keys","filter","isExcluded","excludedPaths","some","path","endsWith","hasExcludedPattern","excludedPatterns","pattern","randomUrl","$f0012082fffd161b$export$e6161a0b7d67cb98","Error","$f0012082fffd161b$export$29c0cdb4d4a5ddbd","pages","entries","map","metadata","doc_size","last_modified","page","trim","sort","a","b","Date","getTime","$75f29f91bc155aaa$export$13834ebe897fc419","groupedPages","date","monthYear","toLocaleString","month","getFullYear","push","$75f29f91bc155aaa$export$aae47d45e80886f7","html","formattedDate","toLocaleDateString","day","split","substring","join","$75f29f91bc155aaa$export$ef9b662f4c71b2fc","containerId","initialPostsCount","doc","recentContainer","getElementById","sortedPages","innerHTML","$75f29f91bc155aaa$export$7d71baea36fe6ea9","initialPages","slice","remainingPages","remainingHtml","count","$75f29f91bc155aaa$export$593755c5b8f32d8f","$75f29f91bc155aaa$export$765b6a4ea7d49a1b","toggleId","contentId","toggleElement","contentElement","iconElement","querySelector","style","display","classList","add","remove","$75f29f91bc155aaa$export$559328b3f08f1a41","$3900136bb96a6238$export$ef9b662f4c71b2fc","recentPostsContainer","recentPages","$3900136bb96a6238$export$384a04fc5c755793","$3f9e20f190ef602c$export$4f2e1db940e396be","exactMatch","p","normalizedUrl","replace","$3f9e20f190ef602c$export$67d6f53759d5e419","visible_pages","expanded","find","visible_links","$3f9e20f190ef602c$export$c59cea48666b1fca","links","targetUrl","outgoing_links","incoming_links","$3f9e20f190ef602c$var$g_pages","source","value","pageLinks","link","newly_visible_pages","l","node","nodes","concat","$3f9e20f190ef602c$export$689fa78054fb1940","ctx","globalScale","outgoingCount","expandedText","label","id","fontSize","font","bckgDimensions","measureText","width","n","fillStyle","fillRect","x","y","textAlign","textBaseline","color","fillText","__bckgDimensions","$3f9e20f190ef602c$export$8866e4dabecf2e10","$3f9e20f190ef602c$var$g_last_detail_node","$3f9e20f190ef602c$var$Graph","$3f9e20f190ef602c$export$1d7d52f110fa8ebe","centerAt","zoom","$3f9e20f190ef602c$export$c49a752670d43944","detail","$3f9e20f190ef602c$export$fb18275420990fec","open","$3f9e20f190ef602c$export$7b4c3716009108bb","graphData","setTimeout","$3f9e20f190ef602c$export$82c630a16d9c47e8","hash","substr","values","slug","initial_expanded_url","ForceGraph","initialNode","centerControl","gotoControl","collapseControl","nodeLabel","nodeAutoColorBy","nodeCanvasObject","nodePointerAreaPaint","onNodeRightClick","onNodeClick","initializeGraph","$1e071d2722b0abf5$var$DEFAULT_OPTIONS","iconClass","tooltipDuration","domainMapping","from","to","$1e071d2722b0abf5$var$hideIssuePopup","popup","textarea","$1e071d2722b0abf5$var$buildBreadcrumbFrom","header","readablePageName","pageName","pathname","headerHierarchy","headerLevel","parseInt","currentHeaderText","Array","childNodes","nodeType","Node","TEXT_NODE","textContent","prevElement","previousElementSibling","foundHeaders","seenLevels","Set","prevTagName","match","prevLevel","has","prevHeaderText","level","text","forEach","h","breadcrumb","limitedHierarchy","$1e071d2722b0abf5$var$transformUrl","options","transformedUrl","urlObj","URL","anchor","$1e071d2722b0abf5$var$shareOrCopyHeaderLink","headerId","currentUrl","anchorUrl","tinyUrl","encodeURIComponent","headerText","shareTitle","previewText","$1e071d2722b0abf5$var$getPreviewText","breadcrumbFrom","shareText","isMobile","test","navigator","userAgent","share","shareError","clipboardText","clipboard","writeText","textArea","createElement","body","appendChild","select","execCommand","removeChild","fallbackError","$1e071d2722b0abf5$var$getFirstParagraphAfterHeader","nextElement","nextElementSibling","listItems","querySelectorAll","itemTexts","totalLength","li","ELEMENT_NODE","combinedText","$1e071d2722b0abf5$var$truncateText","maxLength","truncated","lastSpace","lastIndexOf","paragraphText","textParts","charCount","selector","contentArea","firstParagraph","$1e071d2722b0abf5$var$headerCleanupFunctions","WeakMap","$1e071d2722b0abf5$var$headerPopups","$1e071d2722b0abf5$var$trackedHeaders","$1e071d2722b0abf5$export$6d9d369543f03cfd","customOptions","$1e071d2722b0abf5$var$addCopyLinkToHeader","$1e071d2722b0abf5$var$getOrCreateHeaderId","toLowerCase","uniqueId","counter","copyIcon","$1e071d2722b0abf5$var$createCopyLinkIcon","icon","className","cursor","marginLeft","opacity","transition","userSelect","setAttribute","githubIcon","$1e071d2722b0abf5$var$createGitHubIssueIcon","styleSheets","sheet","faIcon","cleanupFunctions","shareClickHandler","preventDefault","stopPropagation","$1e071d2722b0abf5$var$showCopiedTooltip","element","duration","existingTooltip","tooltip","position","backgroundColor","padding","borderRadius","zIndex","marginTop","parentElement","removeEventListener","keyboardHandler","key","githubClickHandler","$1e071d2722b0abf5$var$showIssuePopup","rect","getBoundingClientRect","scrollTop","pageYOffset","documentElement","scrollLeft","pageXOffset","top","bottom","left","titleInput","focus","get","$1e071d2722b0abf5$var$createIssuePopup","content","h4","closeBtn","titleLabel","type","placeholder","descLabel","descTextarea","rows","buttonsDiv","submitBtn","cancelBtn","hintDiv","small","set","$1e071d2722b0abf5$var$setupPopupEventHandlers","closeHandler","cancelHandler","submitIssue","commentTextarea","customTitle","customDescription","issueUrl","$1e071d2722b0abf5$var$createGitHubIssueUrl","pagePath","metaTag","sourceFile","getAttribute","repoUrl","issueTitle","locationLine","issueBodyContent","issueBody","handleKeydown","ctrlKey","metaKey","existingCleanup","handleOutsideClick","contains","timeoutId","clearTimeout","mouseEnterHandler","mouseLeaveHandler","$1e071d2722b0abf5$var$isHeaderCopyLinksInitialized","$249ffe79f7ab8258$export$8aa1e0ee36490df1","retryCount","GLightbox","warn","$249ffe79f7ab8258$var$MAX_RETRY_TIME_MS","images","contentSelectors","processedCount","img","index","imageElement","naturalWidth","naturalHeight","src","alt","parentNode","insertBefore","touchNavigation","loop","autoplayVideos","$417ebc8475d6fc5d$var$tocExpand","$417ebc8475d6fc5d$var$checkExpandToggle","toc","toggle","addClass","removeClass","$417ebc8475d6fc5d$var$ForceShowRightSideBar","mainContent","tocDropUp","$417ebc8475d6fc5d$var$generateToc","showPinToc","Toc","class","ulClass","targetId","tocMenu","backToTop","gotoBottom","forceSideBar","scrollTo","scrollHeight","$417ebc8475d6fc5d$var$AddLinksToPage","allUrls","page_path","backlinks","frontlinks","message","String","link_parent_location","incoming_location","sort_descending_by_size","Number","backlink","clean_front_links","frontlink","outgoing_location","graph_location","stripped_page_path","$417ebc8475d6fc5d$var$make_html_summary_link_error","attr","$417ebc8475d6fc5d$var$add_link_loader","globalFlag","$417ebc8475d6fc5d$var$AddSummarysToPage","backLinks","summary_links","makeArray","raw_link","ref","redirects","undefined","$417ebc8475d6fc5d$var$make_html_summary_link","attribution","$417ebc8475d6fc5d$var$get_back_links","$417ebc8475d6fc5d$var$cached_back_links","backlinksJson","getJSON","$417ebc8475d6fc5d$var$keyboard_shortcut_loader","mouseTrap","Mousetrap","bind","$417ebc8475d6fc5d$var$SwapProdAndTest","prodPrefix","currentPort","port","testPrefix","newURL","shortcutHelp","alert","$417ebc8475d6fc5d$var$replaceListPlaceholdersInTables","$417ebc8475d6fc5d$var$replacePlaceholdersWithLists","listReplacements","placeholderText","placeholderLink","first","listClone","cloneNode","children","replaceWith","$417ebc8475d6fc5d$var$buildListReplacementMap","replacements","toArray","firstListItem","firstElementChild","firstItemText","startsWith","isNaN","$417ebc8475d6fc5d$export$38653e1d7f0b5689","ready","$1e071d2722b0abf5$export$4f84c6cccfa3ee4f","styleId","head","hostname","branch","$9bfe821df35503ab$export$66495e3f9280fd95","__GIT_BRANCH__","devInfoElement","cssText","infoContent","currentPaddingTop","getComputedStyle","paddingTop","$92ca6dc26425dcae$var$html_for_blogpost","post","item","thumbnail_url","thumbnail","published_date","published","excerptDisplayText","monthNames","getMonth","excerpt","$92ca6dc26425dcae$var$ProcessImports","posts","imported_posts","tags","$92ca6dc26425dcae$export$42081a69ee292945","$92ca6dc26425dcae$export$13004ff06099531d","div","roles","$92ca6dc26425dcae$var$ProcessEulogy","$92ca6dc26425dcae$export$d5d79470c0eabcc3","role","role_file_name","voices","random_voice","summary","$6d425df71f5a07e7$export$2eba8ec3a333fdbb","constructor","$6d425df71f5a07e7$export$859810117f914263","categoryToPromptsProvider","$6d425df71f5a07e7$export$f715474a449e7185","renderer","$6d425df71f5a07e7$export$3b78ee04d6f6b650","map_category_to_prompts","category","prompts_for_category","jQueryProvider","randomizerAppender","after","starting_node","current_category","Map","next","prop","$6d425df71f5a07e7$export$125d51429649aed5","Q","current","parent","shift","child","$6d425df71f5a07e7$export$e017c509fd729fbc","mapProvider","k","v","_index","$6d425df71f5a07e7$export$390791d65c97e7d4","tree_node","map_node_to_prompts","result","_parent","clicked_node","all_prompts","hasWithoutEmoji","hasWithEmoji","flatMap","prompts","prompt","$6d425df71f5a07e7$export$722c014d8e7c7fc6","plot_element_id","random_text_div_id","root","plotlyProvider","Plotly","sunburst_tree_flat","$6d425df71f5a07e7$export$4fa03e2ac1e21ce8","names_parent_names","ids","labels","parents","sunburst_data","outsidetextfont","size","hoverinfo","marker","line","maxdepth","displayModeBar","assign","newPlot","margin","r","t","sunburstcolorway","set_random_prompt_text","plotElement","on","eventData","points","$6d425df71f5a07e7$export$2c4d77f7a6e2db05","rootName","containerSelector","$6d425df71f5a07e7$export$42c977aff6036edf","h2Elements","rootChildren","each","h2Element","h2","h2Text","h2Children","currentElement","h3Text","$9f283bd0ad425971$export$96d8ac85dbc3b083","get_tree","$9f283bd0ad425971$export$9add44f13af82b94","health","magic","hobbies","relationships","joy","$9f283bd0ad425971$export$2a7b436ba2130b9d","filename","$9f283bd0ad425971$export$43b8cbfc567b2b3c","linkInfoProvider","randomSelector","all_url_info","all_pages","random_post","$9f283bd0ad425971$export$a05fecdd139cc0d6","element1","element2","element3","eulogyLoader","$9f283bd0ad425971$export$ed4ccdb0ea359d16","sunburstAdder","promptsAdder","postsAdder","eulogyAdder","$9f283bd0ad425971$export$690b8256aeac9ddf","$9f283bd0ad425971$export$5971d3574f6a5694","$9f283bd0ad425971$export$be5467d8e644e939","restChartMaker","$9f283bd0ad425971$export$53e7a29c57fc33d2","workChartMaker","$9f283bd0ad425971$export$6bb9c0a936a9f448","radarMapMaker","$9f283bd0ad425971$export$8113f0fb50ea4947","$9f283bd0ad425971$export$16352d1b10c5eb38","$9f283bd0ad425971$export$6b13b69749622324","plotly","theta","fill","polar","radialaxis","visible","range","showlegend","layout","height","$9f283bd0ad425971$export$90d9fe9646abdcf4","pad","colorscale","zmin","zmax","z","reverse","gap_desire_over_time","$9f283bd0ad425971$export$c0799a30028cccaa","algoliaAutocomplete","autocomplete","getAlgoliaResults","$bd9399c7e2744abd$export$63ea92b1b8a7359b","dangerouslySetInnerHTML","__html","$bd9399c7e2744abd$export$b91bb4a4add1be39","hit","highlighted","_highlightResult","err","$bd9399c7e2744abd$export$303f4e90fb92c0e8","$bd9399c7e2744abd$export$92149fdef057b636","realPages","$bd9399c7e2744abd$export$915afb5774d57588","sourceId","getItems","sized_array","Promise","all","getItemUrl","templates","$bd9399c7e2744abd$export$52e708d1ac52eeac","$bd9399c7e2744abd$export$b960629124c745df","appid","search_api_key","index_name","autocomplete_id","includeFamilyJournal","featuredCount","recentCount","randomCount","searchClient","algoliasearch","randomSearchResults","recentSearchResults","elementId","container","getSources","query","isEmptySearch","featuredPosts","$bd9399c7e2744abd$export$50f73cef15dc66d3","hitsPerPage","queries","indexName","filters","params","highlightPreTag","highlightPostTag","debug","openOnFocus","detachedMediaQuery","focusSearch","searchInput","tocElement","searchElement","items","then","random_from_list","shuffle","append_randomizer_div","defer","get_link_info","get_random_page_url","load_globals","MakeBackLinkHTML","CreateAutoComplete","get_random_post","get_recent_posts","initRecentAllPosts","add_random_prompts","add_sunburst","add_sunburst_from_dom","TreeNode","load_enjoy2","load_7_habits","load_auto_sunburst","makePostPreviewHTML","make_random_post_html","load_ig66","load_balance","load_random_eulogy"],"version":3,"file":"index.js.map"}